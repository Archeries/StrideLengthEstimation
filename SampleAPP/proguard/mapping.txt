Jama.Matrix -> a.a:
    double[][] A -> a
    int m -> b
    int n -> c
    Jama.Matrix copy() -> a
    java.lang.Object clone() -> clone
    double[][] getArray() -> b
    double get(int,int) -> a
    void set(int,int,double) -> a
    Jama.Matrix times(Jama.Matrix) -> a
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> b
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.am:
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.an:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ao:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aq:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ar:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.as:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.au:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.av:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aw:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ax:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ay:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.az:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ba:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.be:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bf:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bg:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bh:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bi:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bj:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bk:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bl:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bm:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bn:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bo:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bp:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bq:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.br:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    int getActions() -> b
    void addAction(int) -> a
    void getBoundsInParent(android.graphics.Rect) -> a
    void getBoundsInScreen(android.graphics.Rect) -> b
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    boolean isFocused() -> f
    boolean isSelected() -> g
    boolean isClickable() -> h
    boolean isLongClickable() -> i
    boolean isEnabled() -> j
    boolean isPassword() -> k
    boolean isScrollable() -> l
    void setScrollable(boolean) -> a
    java.lang.CharSequence getPackageName() -> m
    java.lang.CharSequence getClassName() -> n
    void setClassName(java.lang.CharSequence) -> a
    java.lang.CharSequence getText() -> o
    java.lang.CharSequence getContentDescription() -> p
    java.lang.String getViewIdResourceName() -> q
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    int getActions(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isSelected(java.lang.Object) -> o
    boolean isClickable(java.lang.Object) -> h
    boolean isLongClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> i
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.h:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.i:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.n:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.o:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.p:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.q:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.r:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.s:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.t:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.u:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.v:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.w:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.x:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.y:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.z:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.aa:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ab:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.ac:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
cn.ac.ict.ictips.locating.entity.PositioningResultListener -> b.a.a.a.a.a.a:
    void onLocationChanged(com.ict.wq.Coordinate) -> a
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Entity.FloorInformation -> b.a.a.a.a.b.a.a.a:
    double[] eachfloorHeight -> a
    int[] hollowFloor -> b
    int[] floorNumArray -> c
    int[] postiveFloorNumArray -> d
    double[] postiveFloorHeight -> e
    int[] negativeFloorNumArray -> f
    double[] negativeFloorHeight -> g
    int[] getFloorNumArray() -> a
    void setFloorNumArray(int[]) -> a
    int[] getHollowFloor() -> b
    void setHollowFloor(int[]) -> b
    double[] getEachfloorHeight() -> c
    void setEachfloorHeight(double[]) -> a
    void separateNegativePostive() -> d
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Entity.PracticeService -> b.a.a.a.a.b.a.a.b:
    java.lang.String message -> a
    java.util.List writeString -> b
    boolean zhenjia -> k
    android.hardware.SensorManager sm -> l
    float FILTERING_VALAUE -> m
    java.util.List stepTimeList -> c
    double A -> n
    double B -> o
    float lowX -> p
    float lowY -> q
    float lowZ -> r
    float X -> s
    float Y -> t
    float Z -> u
    int s -> v
    int sum -> w
    int x -> x
    int y -> y
    int z -> z
    int w -> A
    int b -> B
    int c -> C
    int d -> D
    int time_s2 -> E
    int biaoji -> F
    int newsum2 -> G
    int o -> H
    int kongzhi -> I
    java.lang.Double[] qArray -> d
    java.util.List stepNumListForPress -> e
    java.util.List stepTimeListForPress -> f
    java.util.List numberListForPress -> g
    int pressThr -> h
    int numberThr -> i
    long lastTime -> j
    android.content.BroadcastReceiver broadcastReceiver -> J
    void onCreate() -> onCreate
    void stop() -> a
    android.content.ComponentName startService(android.content.Intent) -> startService
    boolean stopService(android.content.Intent) -> stopService
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Entity.PracticeService$1 -> b.a.a.a.a.b.a.a.c:
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Entity.PracticeService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkLocationProvider -> b.a.a.a.a.b.a.a:
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkLocationProvider instance -> a
    android.content.Context mContext -> b
    java.util.List listeners -> c
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider landmarkProvider -> d
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkLocationProvider getInstance(android.content.Context) -> a
    void create() -> a
    com.ict.wq.Coordinate requestLocation(java.lang.String) -> a
    void requestLocationUpdates(cn.ac.ict.ictips.locating.entity.PositioningResultListener) -> a
    com.ict.wq.Coordinate access$0(cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkLocationProvider,java.lang.String) -> a
    java.util.List access$1(cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkLocationProvider) -> a
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkLocationProvider$1 -> b.a.a.a.a.b.a.b:
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkLocationProvider this$0 -> a
    void onData(org.json.JSONObject) -> a
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider -> b.a.a.a.a.b.a.c:
    android.content.Context mContext -> t
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Pipeline pipe -> a
    double real_floor -> b
    int currentFloor -> c
    int total -> d
    int correct -> e
    int numberSum -> f
    android.hardware.SensorManager mSensorManager -> u
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider$MyReceiver receiver -> v
    java.lang.String pre_floor_description -> w
    java.lang.String[] floorNameArray -> g
    int[] floorNumArray -> h
    android.content.Intent intent2 -> x
    java.lang.String landmarkString -> i
    java.util.ArrayList landmarkList -> j
    java.util.ArrayList directionList -> k
    java.util.ArrayList coordinateXList -> l
    java.util.ArrayList coordinateYList -> m
    java.util.ArrayList valueList -> n
    java.util.ArrayList magValueList -> o
    int previousNum -> p
    long time -> q
    boolean findIt -> r
    android.os.Handler mHandler -> s
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider$OnDataCallback mCallback -> y
    void init() -> a
    void readfile(java.io.InputStream) -> a
    void readFloorInfor(java.io.InputStream) -> b
    java.lang.String access$0(cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider) -> a
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider$OnDataCallback access$1(cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider) -> b
    void access$2(cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider,java.lang.String) -> a
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider$1 -> b.a.a.a.a.b.a.d:
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider$MyReceiver -> b.a.a.a.a.b.a.e:
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkProvider$OnDataCallback -> b.a.a.a.a.b.a.f:
    void onData(org.json.JSONObject) -> a
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Pipeline -> b.a.a.a.a.b.a.g:
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.pressurePredicting.Predict_press press_pre -> a
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.pressurePredicting.Predict_press pure_press_pre -> b
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.pressurePredicting.Predict_press press_pre_outdoor -> c
    double real_floor -> d
    double floorNumOutdoor -> e
    android.hardware.SensorManager mSensorManager -> p
    android.hardware.Sensor press_Sensor -> q
    android.hardware.SensorEventListener press_SensorEventListener -> r
    boolean ifManualOpen -> s
    int state -> t
    java.util.Date starttime -> f
    long lasttime -> g
    android.os.Handler mHandler -> h
    int press_floor -> i
    int pure_pres_floor -> j
    int is_recorrect -> k
    double height_ch_floor -> l
    double height_calc -> m
    double heightAvg -> n
    double currentFloor -> u
    java.text.SimpleDateFormat f -> o
    void start() -> a
    void press_start() -> b
    boolean re_correct_manual(int) -> a
    void setIfManualOpen(boolean) -> a
    void savedata(int,java.lang.String) -> a
    void set_real_floor(double) -> a
    boolean access$0(cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Pipeline) -> a
    void access$1(cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Pipeline,boolean) -> a
    double access$2(cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Pipeline) -> b
    void access$3(cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Pipeline,double) -> a
    void access$4(cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Pipeline,int) -> a
    int access$5(cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Pipeline) -> c
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Pipeline$1 -> b.a.a.a.a.b.a.h:
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.Pipeline this$0 -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.pressurePredicting.Predict_press -> b.a.a.a.a.b.a.b.a:
    double h_ch_TH -> b
    int H_list_num -> c
    int stable_num -> d
    double iden_TH -> e
    int time_th -> f
    int window_size -> g
    long init_time -> h
    boolean upDown -> i
    int[] hollowFloor -> j
    double[] eachfloorHeight -> k
    double[] floorHeight -> l
    double init_height -> m
    double heightAvg -> n
    double height_ch_time -> o
    double height_ch_floor -> p
    java.util.ArrayList height_list -> q
    java.util.ArrayList height_window -> r
    int init_floor -> s
    int pre_floor_index -> t
    boolean init_flag -> u
    boolean floor_init_flag -> v
    int state -> w
    int time_threshold -> x
    long fastChangeNum -> y
    long last_time -> z
    int repet_num -> A
    int big_repet_num -> B
    double height_dif -> a
    int getState() -> a
    void setState(int) -> a
    double getheight(int) -> c
    double get_height_floor() -> b
    double get_avg_height() -> c
    void setUpDown(boolean) -> a
    void setFastChangeNum(long) -> a
    boolean setfloorManual(int) -> b
    int predict(double,long,int) -> a
    double avgheight(java.util.ArrayList) -> a
com.amap.api.location.AMapLocalDayWeatherForecast -> com.amap.api.location.AMapLocalDayWeatherForecast:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getDate() -> getDate
    void a(java.lang.String) -> a
    java.lang.String getWeek() -> getWeek
    void b(java.lang.String) -> b
    java.lang.String getDayWeather() -> getDayWeather
    void c(java.lang.String) -> c
    java.lang.String getNightWeather() -> getNightWeather
    void d(java.lang.String) -> d
    java.lang.String getDayTemp() -> getDayTemp
    void e(java.lang.String) -> e
    java.lang.String getNightTemp() -> getNightTemp
    void f(java.lang.String) -> f
    java.lang.String getDayWindDir() -> getDayWindDir
    void g(java.lang.String) -> g
    java.lang.String getNightWindDir() -> getNightWindDir
    void h(java.lang.String) -> h
    java.lang.String getDayWindPower() -> getDayWindPower
    void i(java.lang.String) -> i
    java.lang.String getNightWindPower() -> getNightWindPower
    void j(java.lang.String) -> j
com.amap.api.location.AMapLocalWeatherForecast -> com.amap.api.location.AMapLocalWeatherForecast:
    java.lang.String a -> a
    java.util.List b -> b
    com.amap.api.location.core.AMapLocException c -> c
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String getReportTime() -> getReportTime
    void a(java.lang.String) -> a
    java.util.List getWeatherForecast() -> getWeatherForecast
    void a(java.util.List) -> a
com.amap.api.location.AMapLocalWeatherListener -> com.amap.api.location.AMapLocalWeatherListener:
    void onWeatherLiveSearched(com.amap.api.location.AMapLocalWeatherLive) -> onWeatherLiveSearched
    void onWeatherForecaseSearched(com.amap.api.location.AMapLocalWeatherForecast) -> onWeatherForecaseSearched
com.amap.api.location.AMapLocalWeatherLive -> com.amap.api.location.AMapLocalWeatherLive:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.amap.api.location.core.AMapLocException g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String getWeather() -> getWeather
    void a(java.lang.String) -> a
    java.lang.String getTemperature() -> getTemperature
    void b(java.lang.String) -> b
    java.lang.String getWindDir() -> getWindDir
    void c(java.lang.String) -> c
    java.lang.String getWindPower() -> getWindPower
    void d(java.lang.String) -> d
    java.lang.String getHumidity() -> getHumidity
    void e(java.lang.String) -> e
    java.lang.String getReportTime() -> getReportTime
    void f(java.lang.String) -> f
com.amap.api.location.AMapLocation -> com.amap.api.location.AMapLocation:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    com.amap.api.location.core.AMapLocException m -> m
    java.lang.String getPoiName() -> getPoiName
    void setPoiName(java.lang.String) -> setPoiName
    java.lang.String getCountry() -> getCountry
    void setCountry(java.lang.String) -> setCountry
    java.lang.String getRoad() -> getRoad
    void setRoad(java.lang.String) -> setRoad
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void setAMapException(com.amap.api.location.core.AMapLocException) -> setAMapException
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String getPoiId() -> getPoiId
    void setPoiId(java.lang.String) -> setPoiId
    java.lang.String getFloor() -> getFloor
    void setFloor(java.lang.String) -> setFloor
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    java.lang.String getAddress() -> getAddress
    java.lang.String getStreet() -> getStreet
com.amap.api.location.AMapLocationListener -> com.amap.api.location.AMapLocationListener:
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationManagerProxy -> com.amap.api.location.LocationManagerProxy:
    java.lang.String GPS_PROVIDER -> GPS_PROVIDER
    java.lang.String NETWORK_PROVIDER -> NETWORK_PROVIDER
    java.lang.String KEY_LOCATION_CHANGED -> KEY_LOCATION_CHANGED
    java.lang.String KEY_PROVIDER_ENABLED -> KEY_PROVIDER_ENABLED
    java.lang.String KEY_PROXIMITY_ENTERING -> KEY_PROXIMITY_ENTERING
    java.lang.String KEY_STATUS_CHANGED -> KEY_STATUS_CHANGED
    int WEATHER_TYPE_LIVE -> WEATHER_TYPE_LIVE
    int WEATHER_TYPE_FORECAST -> WEATHER_TYPE_FORECAST
    android.location.LocationManager b -> b
    com.amap.api.location.LocationManagerProxy c -> c
    com.amap.api.location.a d -> d
    android.content.Context e -> e
    com.amap.api.location.f f -> f
    com.amap.api.location.LocationManagerProxy$b g -> g
    java.util.ArrayList h -> h
    java.util.Hashtable i -> i
    java.util.Vector j -> j
    java.util.Vector k -> k
    com.amap.api.location.LocationManagerProxy$a l -> l
    java.lang.Object a -> a
    void a() -> a
    com.amap.api.location.LocationManagerProxy getInstance(android.app.Activity) -> getInstance
    com.amap.api.location.LocationManagerProxy getInstance(android.content.Context) -> getInstance
    void a(android.content.Context) -> a
    void addProximityAlert(double,double,float,long,android.app.PendingIntent) -> addProximityAlert
    void addGeoFenceAlert(double,double,float,long,android.app.PendingIntent) -> addGeoFenceAlert
    void removeGeoFenceAlert(android.app.PendingIntent) -> removeGeoFenceAlert
    void removeProximityAlert(android.app.PendingIntent) -> removeProximityAlert
    com.amap.api.location.AMapLocation getLastKnownLocation(java.lang.String) -> getLastKnownLocation
    void setGpsEnable(boolean) -> setGpsEnable
    void a(java.lang.String,long,float,com.amap.api.location.AMapLocationListener,boolean) -> a
    void requestLocationUpdates(java.lang.String,long,float,com.amap.api.location.AMapLocationListener) -> requestLocationUpdates
    void requestLocationData(java.lang.String,long,float,com.amap.api.location.AMapLocationListener) -> requestLocationData
    void removeUpdates(com.amap.api.location.AMapLocationListener) -> removeUpdates
    void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent) -> requestLocationUpdates
    void removeUpdates(android.app.PendingIntent) -> removeUpdates
    java.util.List getAllProviders() -> getAllProviders
    java.util.List getProviders(boolean) -> getProviders
    java.util.List getProviders(android.location.Criteria,boolean) -> getProviders
    java.lang.String getBestProvider(android.location.Criteria,boolean) -> getBestProvider
    boolean isProviderEnabled(java.lang.String) -> isProviderEnabled
    com.amap.api.location.LocationProviderProxy getProvider(java.lang.String) -> getProvider
    android.location.GpsStatus getGpsStatus(android.location.GpsStatus) -> getGpsStatus
    void removeGpsStatusListener(android.location.GpsStatus$Listener) -> removeGpsStatusListener
    boolean addGpsStatusListener(android.location.GpsStatus$Listener) -> addGpsStatusListener
    void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int) -> addTestProvider
    void setTestProviderEnabled(java.lang.String,boolean) -> setTestProviderEnabled
    void setTestProviderLocation(java.lang.String,android.location.Location) -> setTestProviderLocation
    void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long) -> setTestProviderStatus
    void clearTestProviderEnabled(java.lang.String) -> clearTestProviderEnabled
    void clearTestProviderLocation(java.lang.String) -> clearTestProviderLocation
    void clearTestProviderStatus(java.lang.String) -> clearTestProviderStatus
    void requestWeatherUpdates(int,com.amap.api.location.AMapLocalWeatherListener) -> requestWeatherUpdates
    void destory() -> destory
    void destroy() -> destroy
    java.lang.String getVersion() -> getVersion
    java.util.ArrayList a(com.amap.api.location.LocationManagerProxy) -> a
    android.content.Context b(com.amap.api.location.LocationManagerProxy) -> b
    java.util.Vector c(com.amap.api.location.LocationManagerProxy) -> c
    java.util.Vector d(com.amap.api.location.LocationManagerProxy) -> d
    android.location.LocationManager e(com.amap.api.location.LocationManagerProxy) -> e
    com.amap.api.location.LocationManagerProxy$a f(com.amap.api.location.LocationManagerProxy) -> f
com.amap.api.location.LocationManagerProxy$a -> com.amap.api.location.LocationManagerProxy$a:
    com.amap.api.location.LocationManagerProxy a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationManagerProxy$b -> com.amap.api.location.LocationManagerProxy$b:
    com.amap.api.location.LocationManagerProxy a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationProviderProxy -> com.amap.api.location.LocationProviderProxy:
    int AVAILABLE -> AVAILABLE
    int OUT_OF_SERVICE -> OUT_OF_SERVICE
    int TEMPORARILY_UNAVAILABLE -> TEMPORARILY_UNAVAILABLE
    java.lang.String AMapNetwork -> AMapNetwork
    android.location.LocationManager a -> a
    java.lang.String b -> b
    com.amap.api.location.LocationProviderProxy a(android.location.LocationManager,java.lang.String) -> a
    android.location.LocationProvider a() -> a
    int getAccuracy() -> getAccuracy
    java.lang.String getName() -> getName
    int getPowerRequirement() -> getPowerRequirement
    boolean hasMonetaryCost() -> hasMonetaryCost
    boolean meetsCriteria(android.location.Criteria) -> meetsCriteria
    boolean requiresCell() -> requiresCell
    boolean requiresNetwork() -> requiresNetwork
    boolean requiresSatellite() -> requiresSatellite
    boolean supportsAltitude() -> supportsAltitude
    boolean supportsBearing() -> supportsBearing
    boolean supportsSpeed() -> supportsSpeed
com.amap.api.location.a -> com.amap.api.location.a:
    android.content.Context i -> i
    java.util.Vector j -> j
    com.amap.api.location.a$a k -> k
    java.util.Vector l -> l
    com.amap.api.location.d a -> a
    com.amap.api.location.c b -> b
    com.amap.api.location.AMapLocation m -> m
    com.amap.api.location.AMapLocation n -> n
    java.lang.Thread o -> o
    boolean c -> c
    long d -> d
    boolean e -> e
    boolean f -> f
    com.amap.api.location.b g -> g
    com.amap.api.location.a h -> h
    long p -> p
    float q -> q
    com.amap.api.location.a a(android.content.Context,android.location.LocationManager) -> a
    void e() -> e
    void a(double,double,float,long,android.app.PendingIntent) -> a
    void b(double,double,float,long,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    com.amap.api.location.AMapLocation a() -> a
    void a(long,float,com.amap.api.location.AMapLocationListener,java.lang.String,boolean) -> a
    void c(boolean) -> c
    void a(com.amap.api.location.AMapLocationListener) -> a
    void b() -> b
    void a(boolean) -> a
    void d(boolean) -> d
    void c() -> c
    void d() -> d
    void b(boolean) -> b
    void a(int,com.amap.api.location.AMapLocalWeatherListener) -> a
    java.util.Vector a(com.amap.api.location.a) -> a
    com.amap.api.location.AMapLocation a(com.amap.api.location.a,com.amap.api.location.AMapLocation) -> a
    com.amap.api.location.AMapLocation b(com.amap.api.location.a) -> b
    com.amap.api.location.AMapLocation b(com.amap.api.location.a,com.amap.api.location.AMapLocation) -> b
    java.util.Vector c(com.amap.api.location.a) -> c
    android.content.Context d(com.amap.api.location.a) -> d
    com.amap.api.location.AMapLocation e(com.amap.api.location.a) -> e
com.amap.api.location.a$1 -> com.amap.api.location.a$1:
    int a -> a
    com.amap.api.location.AMapLocalWeatherListener b -> b
    com.amap.api.location.a c -> c
    void run() -> run
com.amap.api.location.a$a -> com.amap.api.location.a$a:
    com.amap.api.location.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.location.b -> com.amap.api.location.b:
    android.content.Context d -> d
    com.amap.api.location.b$a a -> a
    com.amap.api.location.AMapLocalWeatherListener b -> b
    com.amap.api.location.a c -> c
    int e -> e
    com.amap.api.location.AMapLocalWeatherListener f -> f
    void a(int,com.amap.api.location.AMapLocalWeatherListener,com.amap.api.location.AMapLocation) -> a
    void a(com.amap.api.location.AMapLocation,java.lang.String,com.amap.api.location.AMapLocalWeatherListener) -> a
    byte[] a(com.amap.api.location.AMapLocation,java.lang.String) -> a
    java.lang.String a() -> a
    com.amap.api.location.AMapLocalWeatherLive a(java.lang.String,com.amap.api.location.AMapLocation) -> a
    com.amap.api.location.AMapLocalWeatherForecast b(java.lang.String,com.amap.api.location.AMapLocation) -> b
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
    int a(com.amap.api.location.b) -> a
    com.amap.api.location.AMapLocalWeatherListener b(com.amap.api.location.b) -> b
com.amap.api.location.b$a -> com.amap.api.location.b$a:
    java.lang.ref.WeakReference a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.location.b$a$1 -> com.amap.api.location.b$a$1:
    com.amap.api.location.b a -> a
    com.amap.api.location.AMapLocation b -> b
    com.amap.api.location.b$a c -> c
    void run() -> run
com.amap.api.location.c -> com.amap.api.location.c:
    com.aps.k a -> a
    boolean d -> d
    android.content.Context e -> e
    long f -> f
    com.amap.api.location.a$a g -> g
    com.amap.api.location.a h -> h
    boolean b -> b
    boolean i -> i
    boolean c -> c
    void a(boolean) -> a
    boolean a() -> a
    void b() -> b
    void c() -> c
    void b(boolean) -> b
    void d() -> d
    void run() -> run
    void a(long) -> a
    com.aps.c e() -> e
    com.aps.c f() -> f
    boolean g() -> g
    com.amap.api.location.AMapLocation a(com.aps.c) -> a
    void a(com.aps.j,android.app.PendingIntent) -> a
    void b(com.aps.j,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
com.amap.api.location.core.AMapLocException -> com.amap.api.location.core.AMapLocException:
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR_SOCKET -> ERROR_SOCKET
    java.lang.String ERROR_SOCKE_TIME_OUT -> ERROR_SOCKE_TIME_OUT
    java.lang.String ERROR_INVALID_PARAMETER -> ERROR_INVALID_PARAMETER
    java.lang.String ERROR_NULL_PARAMETER -> ERROR_NULL_PARAMETER
    java.lang.String ERROR_URL -> ERROR_URL
    java.lang.String ERROR_UNKNOW_HOST -> ERROR_UNKNOW_HOST
    java.lang.String ERROR_UNKNOW_SERVICE -> ERROR_UNKNOW_SERVICE
    java.lang.String ERROR_PROTOCOL -> ERROR_PROTOCOL
    java.lang.String ERROR_CONNECTION -> ERROR_CONNECTION
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ERROR_FAILURE_AUTH -> ERROR_FAILURE_AUTH
    java.lang.String ERROR_FAILURE_INFO -> ERROR_FAILURE_INFO
    java.lang.String ERROR_FAILURE_LOCATION -> ERROR_FAILURE_LOCATION
    int ERROR_CODE_IO -> ERROR_CODE_IO
    int ERROR_CODE_SOCKET -> ERROR_CODE_SOCKET
    int ERROR_CODE_SOCKE_TIME_OUT -> ERROR_CODE_SOCKE_TIME_OUT
    int ERROR_CODE_INVALID_PARAMETER -> ERROR_CODE_INVALID_PARAMETER
    int ERROR_CODE_NULL_PARAMETER -> ERROR_CODE_NULL_PARAMETER
    int ERROR_CODE_URL -> ERROR_CODE_URL
    int ERROR_CODE_UNKNOW_HOST -> ERROR_CODE_UNKNOW_HOST
    int ERROR_CODE_UNKNOW_SERVICE -> ERROR_CODE_UNKNOW_SERVICE
    int ERROR_CODE_PROTOCOL -> ERROR_CODE_PROTOCOL
    int ERROR_CODE_CONNECTION -> ERROR_CODE_CONNECTION
    int ERROR_CODE_UNKNOWN -> ERROR_CODE_UNKNOWN
    int ERROR_CODE_FAILURE_AUTH -> ERROR_CODE_FAILURE_AUTH
    int ERROR_CODE_FAILURE_INFO -> ERROR_CODE_FAILURE_INFO
    int ERROR_CODE_FAILURE_LOCATION -> ERROR_CODE_FAILURE_LOCATION
    java.lang.String a -> a
    int b -> b
    java.lang.String getErrorMessage() -> getErrorMessage
    int getErrorCode() -> getErrorCode
    void a(java.lang.String) -> a
com.amap.api.location.core.CoordinateConvert -> com.amap.api.location.core.CoordinateConvert:
    com.amap.api.location.core.GeoPoint fromGpsToAMap(double,double) -> fromGpsToAMap
    double[] fromSeveralGpsToAMap(java.lang.String) -> fromSeveralGpsToAMap
    double[] fromSeveralGpsToAMap(double[]) -> fromSeveralGpsToAMap
com.amap.api.location.core.GeoPoint -> com.amap.api.location.core.GeoPoint:
    long a -> a
    long b -> b
    double c -> c
    double d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getLongitudeE6() -> getLongitudeE6
    int getLatitudeE6() -> getLatitudeE6
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.location.core.a -> com.amap.api.location.core.a:
    int b -> b
    java.lang.String a -> a
    int a() -> a
    boolean a(android.content.Context) -> a
    java.lang.String b() -> b
    boolean c(java.lang.String) -> c
    byte[] c() -> c
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.amap.api.location.core.b -> com.amap.api.location.core.b:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(byte[]) -> a
com.amap.api.location.core.c -> com.amap.api.location.core.c:
    com.amap.api.location.core.c c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.content.Context g -> g
    android.telephony.TelephonyManager h -> h
    android.net.ConnectivityManager i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String a -> a
    java.lang.String o -> o
    java.util.HashMap b -> b
    java.lang.String a() -> a
    com.amap.api.location.core.c a(android.content.Context) -> a
    java.lang.String b() -> b
    java.lang.String k() -> k
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String d(android.content.Context) -> d
    void l() -> l
    void c(java.lang.String) -> c
    boolean a(double,double) -> a
    java.lang.String j() -> j
com.amap.api.location.core.d -> com.amap.api.location.core.d:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    android.content.SharedPreferences e -> e
    android.content.SharedPreferences$Editor f -> f
    java.lang.reflect.Method g -> g
    java.lang.String d -> d
    boolean a(android.content.Context) -> a
    com.amap.api.location.AMapLocation b(android.content.Context) -> b
    void a(android.content.Context,com.amap.api.location.AMapLocation) -> a
    void a(android.content.SharedPreferences$Editor) -> a
    java.lang.String a() -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
com.amap.api.location.core.e -> com.amap.api.location.core.e:
    char[] a -> a
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[],java.security.Key) -> a
    java.security.PublicKey a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    byte[] a(byte[],java.lang.String) -> a
    javax.crypto.spec.SecretKeySpec c(java.lang.String) -> c
com.amap.api.location.core.f -> com.amap.api.location.core.f:
    com.amap.api.location.core.GeoPoint a(android.os.Parcel) -> a
    com.amap.api.location.core.GeoPoint[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.location.core.g -> com.amap.api.location.core.g:
    java.lang.String[] a -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.lang.String) -> a
com.amap.api.location.d -> com.amap.api.location.d:
    android.location.LocationManager a -> a
    com.amap.api.location.a$a c -> c
    com.amap.api.location.a d -> d
    android.content.Context e -> e
    android.location.LocationListener b -> b
    void a(long,float) -> a
    void a() -> a
    void b() -> b
    com.amap.api.location.a a(com.amap.api.location.d) -> a
    com.amap.api.location.a$a b(com.amap.api.location.d) -> b
com.amap.api.location.e -> com.amap.api.location.e:
    com.amap.api.location.d a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.amap.api.location.f -> com.amap.api.location.f:
    com.amap.api.location.LocationManagerProxy a -> a
    com.amap.api.location.AMapLocationListener b -> b
    boolean a(com.amap.api.location.AMapLocationListener,long,float,java.lang.String) -> a
    void a() -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.g -> com.amap.api.location.g:
    long a -> a
    com.amap.api.location.AMapLocationListener b -> b
    java.lang.Boolean c -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.amap.api.mapcore.AutoTestConfig -> com.amap.api.a.a:
    int a -> e
    int ZoomControllerViewId -> a
    int ScaleControlsViewId -> b
    int MyLocationViewId -> c
    int CompassViewId -> d
com.amap.api.mapcore.a -> com.amap.api.a.b:
    com.amap.api.mapcore.b f -> f
    float g -> g
    com.autonavi.amap.mapcore.IPoint a -> a
    float b -> b
    float c -> c
    float d -> d
    com.autonavi.amap.mapcore.IPoint e -> e
    int h -> h
    int i -> i
    java.lang.String getMapSvrAddress() -> getMapSvrAddress
    void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    void a(com.autonavi.amap.mapcore.MapCore) -> a
    void b(com.amap.api.mapcore.m) -> b
    float a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,int,int) -> a
    void a(com.amap.api.mapcore.m) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.m) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,float) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,float,int,int) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint,float,float,float) -> a
    void b(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.m) -> b
    void c(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.m) -> c
    void d(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.m) -> d
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint,int,int) -> a
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.MapProjection) -> a
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.MapProjection,int,int) -> a
    void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    void OnMapReferencechanged(com.autonavi.amap.mapcore.MapCore,java.lang.String,java.lang.String) -> OnMapReferencechanged
    android.content.Context getContext() -> getContext
    boolean isMapEngineValid() -> isMapEngineValid
    void OnMapLoaderError(int) -> OnMapLoaderError
    void onSetParameter(com.autonavi.amap.mapcore.MapCore) -> onSetParameter
    void a(int,int) -> a
com.amap.api.mapcore.a$1 -> com.amap.api.a.c:
    int[] a -> a
com.amap.api.mapcore.aa -> com.amap.api.a.d:
    boolean b() -> a
    boolean c() -> b
    android.graphics.Rect d() -> c
    com.amap.api.maps.model.LatLng e() -> d
    com.autonavi.amap.mapcore.FPoint f() -> e
    com.amap.api.maps.model.LatLng g() -> f
    java.lang.String h() -> g
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String i() -> h
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void a(float,float) -> a
    void b(java.lang.String) -> b
    java.lang.String j() -> i
    void a(boolean) -> a
    boolean k() -> j
    void l() -> k
    void m() -> l
    boolean n() -> m
    void b(boolean) -> b
    boolean o() -> n
    void p() -> o
    boolean a(com.amap.api.mapcore.aa) -> a
    int q() -> p
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.v) -> a
    boolean r() -> q
    void a(java.lang.Object) -> a
    java.lang.Object s() -> r
    void c(boolean) -> c
    boolean t() -> s
    void a(float) -> a
    float u() -> t
    void a(int) -> a
    int v() -> u
    void a(java.util.ArrayList) -> a
    java.util.ArrayList w() -> v
    boolean x() -> w
    void y() -> x
    void z() -> y
    void d(boolean) -> d
    boolean A() -> z
    int B() -> A
    int C() -> B
    int D() -> C
    int E() -> D
    void a(int,int) -> a
    boolean F() -> E
com.amap.api.mapcore.ab -> com.amap.api.a.e:
    void b(float) -> a
    float h() -> a
    void a(int) -> a
    void b(int) -> b
    int i() -> b
    int l() -> c
    void a(java.util.List) -> a
    java.util.List m() -> d
com.amap.api.mapcore.ac -> com.amap.api.a.f:
    void b() -> e
    java.lang.String c() -> f
    void a(float) -> b
    float d() -> g
    void a(boolean) -> a
    boolean e() -> h
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> i
    void g() -> j
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void j() -> k
    boolean a() -> l
    boolean k() -> m
com.amap.api.mapcore.ad -> com.amap.api.a.g:
    void b(float) -> a
    float h() -> a
    void a(int) -> a
    int i() -> b
    void b(int) -> b
    void a(java.util.List) -> a
    java.util.List l() -> c
    int m() -> d
    boolean a(com.amap.api.maps.model.LatLng) -> a
com.amap.api.mapcore.ae -> com.amap.api.a.h:
    void b(float) -> a
    float h() -> a
    void a(int) -> a
    int i() -> b
    void a(java.util.List) -> a
    java.util.List l() -> c
    boolean m() -> d
    void b(boolean) -> b
    void c(boolean) -> c
    boolean n() -> n
    com.amap.api.maps.model.LatLng a(com.amap.api.maps.model.LatLng) -> a
com.amap.api.mapcore.af -> com.amap.api.a.i:
    com.amap.api.maps.model.LatLng a(android.graphics.Point) -> a
    android.graphics.Point a(com.amap.api.maps.model.LatLng) -> a
    android.graphics.PointF b(com.amap.api.maps.model.LatLng) -> b
    com.amap.api.maps.model.VisibleRegion a() -> a
    float a(int) -> a
    com.amap.api.maps.model.TileProjection a(com.amap.api.maps.model.LatLngBounds,int,int) -> a
com.amap.api.mapcore.ag -> com.amap.api.a.j:
com.amap.api.mapcore.ag$a -> com.amap.api.a.k:
    com.amap.api.mapcore.ag$a a -> a
    com.amap.api.mapcore.ag$a b -> b
    com.amap.api.mapcore.ag$a c -> c
    com.amap.api.mapcore.ag$a[] d -> d
    com.amap.api.mapcore.ag$a[] values() -> values
    com.amap.api.mapcore.ag$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.ah -> com.amap.api.a.l:
    void a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ah) -> a
    int f() -> f
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(boolean) -> b
    void g() -> g
    void h() -> h
    void c(boolean) -> c
com.amap.api.mapcore.ai -> com.amap.api.a.m:
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void e(boolean) -> e
    void f(boolean) -> f
    void g(boolean) -> g
    void h(boolean) -> h
    void i(boolean) -> i
    void a(int) -> a
    void b(int) -> b
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    int i() -> i
    int j() -> j
com.amap.api.mapcore.aj -> com.amap.api.a.n:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.widget.ImageView g -> g
    com.amap.api.mapcore.v h -> h
    boolean i -> i
    void a() -> a
    void a(boolean) -> a
com.amap.api.mapcore.aj$1 -> com.amap.api.a.o:
    com.amap.api.mapcore.aj a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.ak -> com.amap.api.a.p:
    com.amap.api.mapcore.v b -> b
    android.content.Context a -> a
    com.amap.api.maps.AMapOptions c -> c
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.AMapOptions) -> a
    com.amap.api.mapcore.v a() -> a
    void a(android.app.Activity,com.amap.api.maps.AMapOptions,android.os.Bundle) -> a
    void a(android.os.Bundle) -> a
    android.view.View a(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void b(com.amap.api.maps.AMapOptions) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void b(android.os.Bundle) -> b
com.amap.api.mapcore.al -> com.amap.api.a.q:
    int a -> a
    boolean b -> b
    boolean a() -> a
    com.amap.api.mapcore.al a(boolean) -> a
com.amap.api.mapcore.am -> com.amap.api.a.r:
    com.amap.api.mapcore.b a -> a
    java.util.concurrent.CopyOnWriteArrayList b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    void a(com.amap.api.mapcore.al) -> a
    com.amap.api.mapcore.al a() -> a
    int b() -> b
    void a(com.amap.api.mapcore.m) -> a
    com.amap.api.mapcore.m c() -> c
    int d() -> d
com.amap.api.mapcore.an -> com.amap.api.a.s:
    com.amap.api.mapcore.v a -> a
    java.util.concurrent.CopyOnWriteArrayList b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    com.amap.api.mapcore.aa d -> d
    android.graphics.Rect e -> e
    android.os.Handler f -> f
    int a() -> a
    void b() -> b
    void a(com.amap.api.mapcore.aa) -> a
    boolean b(com.amap.api.mapcore.aa) -> b
    void c(com.amap.api.mapcore.aa) -> c
    void d(com.amap.api.mapcore.aa) -> d
    void e(com.amap.api.mapcore.aa) -> e
    boolean f(com.amap.api.mapcore.aa) -> f
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10) -> a
    boolean d() -> d
    void i() -> i
    com.amap.api.mapcore.aa e() -> e
    com.amap.api.mapcore.aa a(android.view.MotionEvent) -> a
    void f() -> f
    boolean b(android.view.MotionEvent) -> b
    boolean a(android.graphics.Rect,int,int) -> a
    java.util.List g() -> g
    void h() -> h
    void a(com.amap.api.mapcore.an) -> a
com.amap.api.mapcore.an$1 -> com.amap.api.a.t:
    com.amap.api.mapcore.an a -> a
    void run() -> run
com.amap.api.mapcore.ao -> com.amap.api.a.u:
    com.amap.api.mapcore.v a -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void a(android.view.View,com.amap.api.mapcore.ao$a) -> a
    void a() -> a
    void a(android.view.View,int,int,int[]) -> a
    void a(android.view.View,int,int,int,int,int) -> a
com.amap.api.mapcore.ao$a -> com.amap.api.a.v:
    com.autonavi.amap.mapcore.FPoint a -> a
    int b -> b
    int c -> c
    int d -> d
com.amap.api.mapcore.ap -> com.amap.api.a.w:
    int a -> a
    boolean b -> b
    float c -> c
    float d -> d
    android.graphics.Rect e -> e
    boolean f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    com.autonavi.amap.mapcore.FPoint k -> k
    float l -> l
    float[] m -> m
    boolean n -> n
    java.nio.FloatBuffer o -> o
    java.lang.String p -> p
    com.amap.api.maps.model.LatLng q -> q
    com.amap.api.maps.model.LatLng r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    float u -> u
    float v -> v
    boolean w -> w
    boolean x -> x
    com.amap.api.mapcore.an y -> y
    java.nio.FloatBuffer z -> z
    java.lang.Object A -> A
    boolean B -> B
    java.util.concurrent.CopyOnWriteArrayList C -> C
    boolean D -> D
    boolean E -> E
    boolean F -> F
    int G -> G
    int H -> H
    boolean I -> I
    int J -> J
    int K -> K
    java.lang.String c(java.lang.String) -> c
    void a(float) -> a
    boolean x() -> w
    void y() -> x
    void p() -> o
    void a() -> F
    void b(java.util.ArrayList) -> b
    int G() -> G
    int H() -> H
    android.graphics.Rect d() -> c
    boolean b() -> a
    void J() -> J
    com.amap.api.maps.model.LatLng e() -> d
    java.lang.String h() -> g
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String i() -> h
    void b(java.lang.String) -> b
    java.lang.String j() -> i
    void a(boolean) -> a
    void a(java.util.ArrayList) -> a
    java.util.ArrayList w() -> v
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    com.amap.api.maps.model.BitmapDescriptor I() -> I
    boolean k() -> j
    void l() -> k
    void m() -> l
    boolean n() -> m
    void b(boolean) -> b
    boolean o() -> n
    void a(float,float) -> a
    boolean a(com.amap.api.mapcore.aa) -> a
    int q() -> p
    boolean r() -> q
    void a(com.amap.api.mapcore.v) -> a
    float[] a(com.amap.api.mapcore.v,int) -> a
    void a(float,float,com.autonavi.amap.mapcore.IPoint) -> a
    void a(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.v) -> a
    int a(javax.microedition.khronos.opengles.GL10) -> a
    boolean c() -> b
    void a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object s() -> r
    void c(boolean) -> c
    boolean t() -> s
    int v() -> u
    com.amap.api.maps.model.LatLng g() -> f
    void z() -> y
    void d(boolean) -> d
    boolean A() -> z
    float u() -> t
    int B() -> A
    int C() -> B
    void a(int,int) -> a
    int D() -> C
    int E() -> D
    com.autonavi.amap.mapcore.FPoint f() -> e
    boolean F() -> E
com.amap.api.mapcore.aq -> com.amap.api.a.x:
    com.amap.api.mapcore.v a -> a
    com.amap.api.maps.model.Marker b -> b
    com.amap.api.mapcore.x c -> c
    com.amap.api.maps.model.MyLocationStyle d -> d
    com.amap.api.maps.model.LatLng e -> e
    double f -> f
    android.content.Context g -> g
    com.amap.api.mapcore.ay h -> h
    int i -> i
    boolean j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    boolean m -> m
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    void a() -> a
    void b() -> b
    void d() -> d
    void e() -> e
    void f() -> f
    void b(float) -> b
    void c(float) -> c
    void a(android.location.Location) -> a
    void b(android.location.Location) -> b
    void g() -> g
    void h() -> h
    void c() -> c
    void i() -> i
    void j() -> j
    void k() -> k
    void a(float) -> a
com.amap.api.mapcore.ar -> com.amap.api.a.y:
    com.amap.api.mapcore.v j -> j
    float k -> k
    int l -> l
    int m -> m
    float n -> n
    boolean o -> o
    java.lang.String p -> p
    java.util.concurrent.CopyOnWriteArrayList q -> q
    int r -> r
    boolean s -> s
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    float g -> g
    float h -> h
    com.amap.api.maps.model.LatLngBounds t -> t
    float[] i -> i
    void b(java.util.List) -> b
    void b() -> e
    java.lang.String c() -> f
    void a(java.util.List) -> a
    java.util.List m() -> d
    java.util.List n() -> n
    void b(float) -> a
    float h() -> a
    void a(int) -> a
    int i() -> b
    void b(int) -> b
    int l() -> c
    void a(float) -> b
    float d() -> g
    void a(boolean) -> a
    boolean e() -> h
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> i
    boolean a() -> l
    void g() -> j
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void j() -> k
    boolean k() -> m
com.amap.api.mapcore.as -> com.amap.api.a.z:
    android.graphics.drawable.Drawable a(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap a(java.io.InputStream) -> a
    android.graphics.Bitmap b(android.content.Context,java.lang.String) -> b
    void a(byte[],android.graphics.Rect) -> a
    byte[] a(android.graphics.Bitmap) -> a
    void a(android.graphics.Bitmap,byte[]) -> a
    void a(java.io.OutputStream,int) -> a
    void a(byte[],int,int) -> a
    int a(byte[],int) -> a
com.amap.api.mapcore.at -> com.amap.api.a.aa:
    com.amap.api.mapcore.v a -> a
    float b -> b
    boolean c -> c
    java.lang.String d -> d
    float e -> e
    int f -> f
    int g -> g
    java.util.List h -> h
    java.util.concurrent.CopyOnWriteArrayList i -> i
    java.nio.FloatBuffer j -> j
    java.nio.FloatBuffer k -> k
    int l -> l
    int m -> m
    com.amap.api.maps.model.LatLngBounds n -> n
    boolean o -> o
    float p -> p
    void b() -> e
    java.lang.String c() -> f
    void a(java.util.List) -> a
    java.util.List l() -> c
    void a(float) -> b
    float d() -> g
    void a(boolean) -> a
    boolean e() -> h
    boolean a(com.amap.api.mapcore.ac) -> a
    void b(java.util.List) -> b
    void g() -> j
    int f() -> i
    boolean a() -> l
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(float) -> a
    float h() -> a
    void a(int) -> a
    int i() -> b
    void b(int) -> b
    int m() -> d
    com.autonavi.amap.mapcore.FPoint[] a(com.autonavi.amap.mapcore.FPoint[]) -> a
    void j() -> k
    boolean a(com.amap.api.maps.model.LatLng) -> a
    boolean k() -> m
com.amap.api.mapcore.au -> com.amap.api.a.ab:
    com.amap.api.mapcore.v f -> f
    float g -> g
    int h -> h
    float i -> i
    boolean j -> j
    java.lang.String k -> k
    java.util.ArrayList l -> l
    java.nio.FloatBuffer m -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    java.util.List q -> q
    boolean r -> r
    float s -> s
    java.lang.Object t -> t
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean u -> u
    com.amap.api.maps.model.LatLngBounds v -> v
    boolean w -> w
    float[] e -> e
    int x -> x
    boolean y -> y
    boolean z -> z
    android.graphics.Bitmap A -> A
    boolean B -> B
    void d(boolean) -> d
    void b(boolean) -> b
    boolean m() -> d
    void c(boolean) -> c
    boolean n() -> n
    void b(java.util.List) -> b
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.IPoint,com.autonavi.amap.mapcore.IPoint,com.autonavi.amap.mapcore.IPoint,double,int) -> a
    void a(java.util.List,java.util.List,double) -> a
    void a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,java.util.List,com.amap.api.maps.model.LatLngBounds$Builder) -> a
    void b() -> e
    java.lang.String c() -> f
    void a(java.util.List) -> a
    java.util.List l() -> c
    void b(float) -> a
    float h() -> a
    void a(int) -> a
    int i() -> b
    void a(float) -> b
    float d() -> g
    void a(boolean) -> a
    boolean e() -> h
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> i
    boolean a() -> l
    void g() -> j
    void a(android.graphics.Bitmap) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    boolean o() -> o
    void j() -> k
    boolean k() -> m
    com.amap.api.maps.model.LatLng a(com.amap.api.maps.model.LatLng) -> a
com.amap.api.mapcore.av -> com.amap.api.a.ac:
    boolean a -> a
    int b -> b
    int c -> c
    java.nio.FloatBuffer d -> d
    java.lang.String e -> e
    com.autonavi.amap.mapcore.FPoint f -> f
    com.amap.api.maps.model.BitmapDescriptor g -> g
    boolean h -> h
    java.nio.FloatBuffer i -> i
    java.lang.Object j -> j
    int k -> k
    com.amap.api.mapcore.v l -> l
    com.autonavi.amap.mapcore.MapProjection m -> m
    float n -> n
    float o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    int s -> s
    boolean x() -> w
    void y() -> x
    void b(com.amap.api.maps.model.BitmapDescriptor) -> b
    int G() -> F
    int H() -> G
    android.graphics.Rect d() -> c
    boolean b() -> a
    void J() -> J
    com.amap.api.maps.model.LatLng e() -> d
    java.lang.String h() -> g
    void a(com.autonavi.amap.mapcore.FPoint) -> a
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String i() -> h
    void b(java.lang.String) -> b
    java.lang.String j() -> i
    void a(boolean) -> a
    void a(java.util.ArrayList) -> a
    java.util.ArrayList w() -> v
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    com.amap.api.maps.model.BitmapDescriptor I() -> H
    boolean k() -> j
    void l() -> k
    void m() -> l
    boolean n() -> m
    void b(boolean) -> b
    boolean o() -> n
    void a(float,float) -> a
    boolean a(com.amap.api.mapcore.aa) -> a
    int q() -> p
    boolean r() -> q
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a() -> I
    int b(javax.microedition.khronos.opengles.GL10) -> b
    boolean c() -> b
    void a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object s() -> r
    void c(boolean) -> c
    boolean t() -> s
    int v() -> u
    com.amap.api.maps.model.LatLng g() -> f
    void z() -> y
    void d(boolean) -> d
    boolean A() -> z
    void a(float) -> a
    void p() -> o
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.v) -> a
    float u() -> t
    void b(int,int) -> b
    int B() -> A
    int C() -> B
    void a(int,int) -> a
    int D() -> C
    int E() -> D
    com.autonavi.amap.mapcore.FPoint f() -> e
    boolean F() -> E
com.amap.api.mapcore.aw -> com.amap.api.a.ad:
    com.amap.api.mapcore.v a -> a
    com.amap.api.maps.model.LatLng a(android.graphics.Point) -> a
    android.graphics.Point a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.VisibleRegion a() -> a
    android.graphics.PointF b(com.amap.api.maps.model.LatLng) -> b
    float a(int) -> a
    com.amap.api.maps.model.TileProjection a(com.amap.api.maps.model.LatLngBounds,int,int) -> a
com.amap.api.mapcore.ax -> com.amap.api.a.ae:
    java.lang.String a -> a
    int b -> b
    com.amap.api.mapcore.b c -> c
    android.graphics.Paint d -> d
    android.graphics.Paint e -> e
    android.graphics.Rect f -> f
    void a() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void a(java.lang.String) -> a
    void a(int) -> a
com.amap.api.mapcore.ay -> com.amap.api.a.af:
    android.hardware.SensorManager a -> a
    android.hardware.Sensor b -> b
    long c -> c
    int d -> d
    float e -> e
    android.content.Context f -> f
    com.amap.api.mapcore.v g -> g
    com.amap.api.maps.model.Marker h -> h
    void a() -> a
    void b() -> b
    void a(com.amap.api.maps.model.Marker) -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    int a(android.content.Context) -> a
com.amap.api.mapcore.az -> com.amap.api.a.ag:
    com.amap.api.mapcore.ba a -> a
    com.amap.api.maps.model.TileProvider b -> b
    java.lang.Float c -> c
    boolean d -> d
    com.amap.api.mapcore.v e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    com.amap.api.mapcore.util.p j -> j
    java.util.concurrent.CopyOnWriteArrayList k -> k
    boolean l -> l
    com.amap.api.mapcore.az$b m -> m
    java.lang.String n -> n
    java.nio.FloatBuffer o -> o
    java.lang.String a(java.lang.String) -> a
    void a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ah) -> a
    int f() -> f
    boolean a(com.amap.api.mapcore.az$a) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    java.util.ArrayList a(int,int,int) -> a
    boolean a(java.util.List,int,boolean) -> a
    void b(boolean) -> b
    void g() -> g
    void h() -> h
    void c(boolean) -> c
    java.util.ArrayList a(com.amap.api.mapcore.az,int,int,int) -> a
    boolean a(com.amap.api.mapcore.az,java.util.List,int,boolean) -> a
    com.amap.api.mapcore.v a(com.amap.api.mapcore.az) -> a
    com.amap.api.mapcore.util.p b(com.amap.api.mapcore.az) -> b
    com.amap.api.mapcore.ba c(com.amap.api.mapcore.az) -> c
com.amap.api.mapcore.az$a -> com.amap.api.a.ah:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.autonavi.amap.mapcore.IPoint e -> e
    int f -> f
    boolean g -> g
    java.nio.FloatBuffer h -> h
    android.graphics.Bitmap i -> i
    com.amap.api.mapcore.util.r$a j -> j
    int k -> k
    com.amap.api.mapcore.az l -> l
    com.amap.api.mapcore.az$a a() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void a(android.graphics.Bitmap) -> a
    void b() -> b
    java.lang.Object clone() -> clone
com.amap.api.mapcore.az$b -> com.amap.api.a.ai:
    int e -> e
    boolean f -> f
    com.amap.api.mapcore.az a -> a
    java.util.List a(com.amap.api.mapcore.v[]) -> a
    void a(java.util.List) -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.b -> com.amap.api.a.aj:
    int j -> j
    int k -> k
    android.graphics.Bitmap l -> l
    android.graphics.Bitmap m -> m
    boolean n -> n
    java.util.concurrent.CopyOnWriteArrayList o -> o
    java.util.concurrent.CopyOnWriteArrayList p -> p
    int q -> q
    com.autonavi.amap.mapcore.MapCore r -> r
    android.content.Context s -> s
    com.amap.api.mapcore.a t -> t
    com.autonavi.amap.mapcore.MapProjection u -> u
    android.view.GestureDetector v -> v
    android.view.ScaleGestureDetector w -> w
    com.amap.api.mapcore.util.c x -> x
    com.amap.api.mapcore.am a -> a
    android.view.SurfaceHolder y -> y
    com.amap.api.mapcore.ao z -> z
    com.amap.api.mapcore.an b -> b
    com.amap.api.mapcore.bd A -> A
    com.amap.api.mapcore.be c -> c
    com.amap.api.mapcore.aj B -> B
    com.amap.api.mapcore.o C -> C
    com.amap.api.mapcore.ax D -> D
    com.amap.api.mapcore.ba d -> d
    com.amap.api.maps.AMap$OnMyLocationChangeListener E -> E
    com.amap.api.maps.AMap$OnMarkerClickListener F -> F
    com.amap.api.maps.AMap$OnMarkerDragListener G -> G
    com.amap.api.maps.AMap$OnMapLoadedListener H -> H
    com.amap.api.maps.AMap$OnCameraChangeListener I -> I
    com.amap.api.maps.AMap$OnMapClickListener J -> J
    com.amap.api.maps.AMap$OnMapTouchListener K -> K
    com.amap.api.maps.AMap$OnMapLongClickListener L -> L
    com.amap.api.maps.AMap$OnInfoWindowClickListener M -> M
    com.amap.api.maps.AMap$InfoWindowAdapter N -> N
    com.amap.api.maps.AMap$InfoWindowAdapter O -> O
    android.view.View P -> P
    com.amap.api.mapcore.aa Q -> Q
    com.amap.api.mapcore.av R -> R
    boolean S -> S
    com.amap.api.mapcore.af T -> T
    com.amap.api.mapcore.ai U -> U
    com.amap.api.maps.LocationSource V -> V
    android.graphics.Rect W -> W
    boolean X -> Z
    boolean Y -> aa
    boolean Z -> ab
    boolean e -> e
    com.amap.api.mapcore.i aa -> ac
    com.amap.api.mapcore.util.b ab -> ad
    com.amap.api.mapcore.aq ac -> ae
    com.amap.api.mapcore.l ad -> af
    int ae -> ag
    int af -> ah
    com.amap.api.maps.AMap$CancelableCallback ag -> ai
    boolean ah -> aj
    int ai -> ak
    boolean aj -> al
    boolean ak -> am
    android.graphics.drawable.Drawable al -> an
    android.location.Location am -> ao
    java.lang.Boolean an -> ap
    int[] ao -> aq
    boolean ap -> ar
    com.amap.api.maps.AMap$onMapPrintScreenListener aq -> as
    com.amap.api.maps.AMap$OnMapScreenShotListener ar -> at
    android.os.Handler as -> au
    com.amap.api.mapcore.m at -> av
    java.util.Timer au -> aw
    double av -> ax
    boolean aw -> ay
    android.os.Handler ax -> az
    android.os.Handler ay -> aA
    java.lang.Runnable az -> aB
    java.lang.Runnable aA -> aC
    com.amap.api.maps.CustomRenderer f -> f
    com.amap.api.mapcore.t g -> g
    com.amap.api.mapcore.q aB -> aD
    boolean aC -> aE
    boolean aD -> aF
    android.os.Handler aE -> aG
    java.lang.Runnable aF -> aH
    java.lang.Runnable h -> h
    boolean aG -> aI
    boolean aH -> aJ
    boolean aI -> aK
    boolean aJ -> aL
    boolean aK -> aM
    com.amap.api.maps.model.Marker aL -> aN
    com.amap.api.mapcore.aa aM -> aO
    boolean aN -> aP
    boolean aO -> aQ
    boolean aP -> aR
    int aQ -> aS
    boolean aR -> aT
    java.lang.Thread aS -> aU
    com.amap.api.maps.model.LatLngBounds aT -> aV
    android.os.Handler i -> i
    boolean aU -> aW
    boolean aV -> aX
    boolean aW -> aY
    int aX -> aZ
    int aY -> ba
    void a(com.amap.api.maps.CustomRenderer) -> a
    com.autonavi.amap.mapcore.MapCore a() -> a
    int b() -> b
    com.autonavi.amap.mapcore.MapProjection c() -> c
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a(com.amap.api.mapcore.s) -> a
    void a(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    void a(float) -> a
    void a(android.location.Location) -> a
    void a(boolean) -> a
    void d() -> d
    void b(boolean) -> b
    void c(boolean) -> c
    void e() -> e
    void d(boolean) -> d
    void f() -> f
    void g() -> g
    boolean a(java.lang.String) -> a
    void e(boolean) -> e
    void R() -> R
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    int h() -> h
    int i() -> i
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void a(int,int,int,int) -> a
    void S() -> S
    void T() -> T
    void U() -> U
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    int j() -> j
    void k() -> k
    void setZOrderOnTop(boolean) -> setZOrderOnTop
    com.amap.api.maps.model.CameraPosition l() -> l
    float m() -> m
    float n() -> n
    void a(com.amap.api.mapcore.m) -> a
    void b(com.amap.api.mapcore.m) -> b
    void a(com.amap.api.mapcore.m,com.amap.api.maps.AMap$CancelableCallback) -> a
    void a(com.amap.api.mapcore.m,long,com.amap.api.maps.AMap$CancelableCallback) -> a
    void o() -> o
    com.amap.api.mapcore.ae a(com.amap.api.maps.model.PolylineOptions) -> a
    com.amap.api.mapcore.ab a(com.amap.api.maps.model.NavigateArrowOptions) -> a
    com.amap.api.mapcore.ad a(com.amap.api.maps.model.PolygonOptions) -> a
    com.amap.api.mapcore.x a(com.amap.api.maps.model.CircleOptions) -> a
    com.amap.api.mapcore.w a(com.amap.api.maps.model.ArcOptions) -> a
    com.amap.api.mapcore.y a(com.amap.api.maps.model.GroundOverlayOptions) -> a
    com.amap.api.maps.model.Marker a(com.amap.api.maps.model.MarkerOptions) -> a
    java.util.ArrayList a(java.util.ArrayList,boolean) -> a
    com.amap.api.maps.model.TileOverlay a(com.amap.api.maps.model.TileOverlayOptions) -> a
    void p() -> p
    int q() -> q
    void b(int) -> b
    boolean r() -> r
    void f(boolean) -> f
    boolean s() -> s
    void g(boolean) -> g
    android.location.Location t() -> t
    void a(com.amap.api.maps.LocationSource) -> a
    com.amap.api.mapcore.ai u() -> u
    com.amap.api.mapcore.af v() -> v
    void a(com.amap.api.maps.AMap$OnCameraChangeListener) -> a
    void a(com.amap.api.maps.model.CameraPosition) -> a
    com.amap.api.maps.AMap$OnCameraChangeListener w() -> w
    void a(com.amap.api.maps.AMap$OnMapClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapTouchListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLongClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerDragListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLoadedListener) -> a
    void a(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> a
    void a(com.amap.api.maps.AMap$InfoWindowAdapter) -> a
    android.view.View x() -> x
    float b(float) -> b
    float c(int) -> c
    void a(int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.IPoint) -> a
    void a(double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void a(double,double,com.autonavi.amap.mapcore.IPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.FPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.FPoint) -> b
    void b(int,int,com.autonavi.amap.mapcore.DPoint) -> b
    void b(double,double,com.autonavi.amap.mapcore.IPoint) -> b
    com.amap.api.maps.model.LatLng V() -> V
    com.amap.api.maps.model.CameraPosition h(boolean) -> h
    void W() -> W
    void a(android.view.MotionEvent) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void a(com.amap.api.mapcore.aa) -> a
    android.graphics.Bitmap a(android.view.View) -> a
    boolean b(com.amap.api.mapcore.aa) -> b
    void y() -> y
    float z() -> z
    void A() -> A
    com.amap.api.maps.model.LatLngBounds B() -> B
    void C() -> C
    android.graphics.Point D() -> D
    android.graphics.Bitmap a(int,int,int,int,javax.microedition.khronos.opengles.GL10) -> a
    void a(com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    void a(com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    void d(int) -> d
    void e(int) -> e
    float E() -> E
    void i(boolean) -> i
    void a(boolean,com.amap.api.maps.model.CameraPosition) -> a
    void f(int) -> f
    int F() -> F
    java.util.List G() -> G
    void H() -> H
    void I() -> I
    boolean J() -> J
    void K() -> K
    void a(int,int) -> a
    void g(int) -> g
    int L() -> L
    boolean M() -> M
    void j(boolean) -> j
    com.amap.api.mapcore.l N() -> N
    void k(boolean) -> k
    void O() -> O
    void a(com.amap.api.maps.AMap$OnCacheRemoveListener) -> a
    boolean a(java.io.File) -> a
    void P() -> P
    com.amap.api.maps.AMap$OnMapTouchListener a(com.amap.api.mapcore.b) -> a
    android.view.View b(com.amap.api.mapcore.b) -> b
    boolean a(com.amap.api.mapcore.b,boolean) -> a
    com.amap.api.mapcore.av c(com.amap.api.mapcore.b) -> c
    boolean d(com.amap.api.mapcore.b) -> d
    boolean e(com.amap.api.mapcore.b) -> e
    java.lang.Runnable f(com.amap.api.mapcore.b) -> f
    android.os.Handler g(com.amap.api.mapcore.b) -> g
    java.lang.Runnable h(com.amap.api.mapcore.b) -> h
    boolean b(com.amap.api.mapcore.b,boolean) -> b
    boolean c(com.amap.api.mapcore.b,boolean) -> c
    boolean i(com.amap.api.mapcore.b) -> i
    boolean j(com.amap.api.mapcore.b) -> j
    boolean d(com.amap.api.mapcore.b,boolean) -> d
    double Q() -> Q
    com.amap.api.mapcore.ai k(com.amap.api.mapcore.b) -> k
    int a(com.amap.api.mapcore.b,int) -> a
    boolean l(com.amap.api.mapcore.b) -> l
    int m(com.amap.api.mapcore.b) -> m
    int n(com.amap.api.mapcore.b) -> n
    com.autonavi.amap.mapcore.MapProjection o(com.amap.api.mapcore.b) -> o
    void p(com.amap.api.mapcore.b) -> p
    boolean e(com.amap.api.mapcore.b,boolean) -> e
    boolean q(com.amap.api.mapcore.b) -> q
    boolean f(com.amap.api.mapcore.b,boolean) -> f
    com.amap.api.mapcore.util.b r(com.amap.api.mapcore.b) -> r
    int b(com.amap.api.mapcore.b,int) -> b
    int c(com.amap.api.mapcore.b,int) -> c
    com.amap.api.maps.AMap$CancelableCallback a(com.amap.api.mapcore.b,com.amap.api.maps.AMap$CancelableCallback) -> a
    com.amap.api.mapcore.aa s(com.amap.api.mapcore.b) -> s
    int t(com.amap.api.mapcore.b) -> t
    int u(com.amap.api.mapcore.b) -> u
    com.amap.api.mapcore.l v(com.amap.api.mapcore.b) -> v
    com.amap.api.mapcore.aa a(com.amap.api.mapcore.b,com.amap.api.mapcore.aa) -> a
    com.amap.api.maps.AMap$OnMarkerDragListener w(com.amap.api.mapcore.b) -> w
    com.amap.api.mapcore.aa x(com.amap.api.mapcore.b) -> x
    com.amap.api.maps.model.Marker a(com.amap.api.mapcore.b,com.amap.api.maps.model.Marker) -> a
    com.amap.api.maps.model.Marker y(com.amap.api.mapcore.b) -> y
    boolean g(com.amap.api.mapcore.b,boolean) -> g
    com.amap.api.maps.AMap$OnMapLongClickListener z(com.amap.api.mapcore.b) -> z
    boolean h(com.amap.api.mapcore.b,boolean) -> h
    int A(com.amap.api.mapcore.b) -> A
    boolean B(com.amap.api.mapcore.b) -> B
    com.amap.api.maps.AMap$OnInfoWindowClickListener C(com.amap.api.mapcore.b) -> C
    com.amap.api.maps.AMap$OnMarkerClickListener D(com.amap.api.mapcore.b) -> D
    com.amap.api.maps.AMap$OnMapClickListener E(com.amap.api.mapcore.b) -> E
    boolean F(com.amap.api.mapcore.b) -> F
    boolean i(com.amap.api.mapcore.b,boolean) -> i
    boolean j(com.amap.api.mapcore.b,boolean) -> j
    android.content.Context G(com.amap.api.mapcore.b) -> G
    java.lang.Boolean H(com.amap.api.mapcore.b) -> H
    com.amap.api.maps.AMap$OnCameraChangeListener I(com.amap.api.mapcore.b) -> I
    com.amap.api.mapcore.m J(com.amap.api.mapcore.b) -> J
    com.amap.api.maps.AMap$OnMapLoadedListener K(com.amap.api.mapcore.b) -> K
    com.amap.api.mapcore.o L(com.amap.api.mapcore.b) -> L
    com.amap.api.mapcore.bd M(com.amap.api.mapcore.b) -> M
    com.amap.api.maps.AMap$onMapPrintScreenListener N(com.amap.api.mapcore.b) -> N
    com.amap.api.maps.AMap$OnMapScreenShotListener O(com.amap.api.mapcore.b) -> O
    com.amap.api.maps.AMap$onMapPrintScreenListener a(com.amap.api.mapcore.b,com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    com.amap.api.maps.AMap$OnMapScreenShotListener a(com.amap.api.mapcore.b,com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    com.amap.api.maps.AMap$CancelableCallback P(com.amap.api.mapcore.b) -> P
    boolean Q(com.amap.api.mapcore.b) -> Q
    boolean k(com.amap.api.mapcore.b,boolean) -> k
    boolean R(com.amap.api.mapcore.b) -> R
    boolean l(com.amap.api.mapcore.b,boolean) -> l
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.mapcore.b,com.amap.api.maps.model.LatLngBounds) -> a
    com.autonavi.amap.mapcore.MapCore S(com.amap.api.mapcore.b) -> S
    void T(com.amap.api.mapcore.b) -> T
    boolean a(com.amap.api.mapcore.b,java.io.File) -> a
com.amap.api.mapcore.b$1 -> com.amap.api.a.ak:
    com.amap.api.mapcore.b a -> a
    void a() -> I
com.amap.api.mapcore.b$2 -> com.amap.api.a.al:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.b$3 -> com.amap.api.a.am:
    boolean a -> a
    com.amap.api.mapcore.b b -> b
    void run() -> run
com.amap.api.mapcore.b$4 -> com.amap.api.a.an:
    com.amap.api.mapcore.b a -> a
    void a() -> a
com.amap.api.mapcore.b$5 -> com.amap.api.a.ao:
    com.amap.api.mapcore.b a -> a
    android.view.View getInfoWindow(com.amap.api.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.amap.api.maps.model.Marker) -> getInfoContents
com.amap.api.mapcore.b$6 -> com.amap.api.a.ap:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.b$7 -> com.amap.api.a.aq:
    com.amap.api.maps.model.LatLngBounds a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    com.amap.api.maps.AMap$CancelableCallback f -> f
    com.amap.api.mapcore.b g -> g
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.amap.api.mapcore.b$8 -> com.amap.api.a.ar:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.b$a -> com.amap.api.a.as:
    float g -> g
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    java.lang.Float a -> a
    java.lang.Float b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    float d -> d
    com.amap.api.mapcore.m e -> e
    com.amap.api.mapcore.b f -> f
    void a(float,float,float,float,float) -> a
    boolean a(android.view.MotionEvent,float,float,float,float) -> a
    void a() -> a
com.amap.api.mapcore.b$b -> com.amap.api.a.at:
    com.amap.api.mapcore.b a -> a
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.amap.api.mapcore.b$c -> com.amap.api.a.au:
    com.autonavi.amap.mapcore.FPoint a -> a
    com.autonavi.amap.mapcore.IPoint b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    com.amap.api.mapcore.m d -> d
    com.amap.api.mapcore.b e -> e
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.amap.api.mapcore.b$c$1 -> com.amap.api.a.av:
    com.amap.api.mapcore.aa a -> a
    com.amap.api.mapcore.b$c b -> b
    void run() -> run
com.amap.api.mapcore.b$d -> com.amap.api.a.aw:
    float a -> a
    float b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    com.amap.api.mapcore.m d -> d
    com.amap.api.mapcore.b e -> e
    boolean a(com.amap.api.mapcore.util.c) -> a
    boolean b(com.amap.api.mapcore.util.c) -> b
    void c(com.amap.api.mapcore.util.c) -> c
com.amap.api.mapcore.b$e -> com.amap.api.a.ax:
    float c -> c
    com.autonavi.amap.mapcore.IPoint d -> d
    com.amap.api.mapcore.m a -> a
    com.amap.api.mapcore.b b -> b
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.amap.api.mapcore.b$f -> com.amap.api.a.ay:
    com.amap.api.mapcore.b a -> a
    com.amap.api.mapcore.b b -> b
    void run() -> run
com.amap.api.mapcore.b$g -> com.amap.api.a.az:
    android.content.Context b -> b
    com.amap.api.maps.AMap$OnCacheRemoveListener c -> c
    com.amap.api.mapcore.b a -> a
    void run() -> run
    boolean equals(java.lang.Object) -> equals
com.amap.api.mapcore.ba -> com.amap.api.a.ba:
    com.amap.api.mapcore.v d -> d
    java.util.concurrent.CopyOnWriteArrayList a -> a
    com.amap.api.mapcore.ba$a b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    com.amap.api.mapcore.v a() -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b() -> b
    void c() -> c
    void a(com.amap.api.mapcore.ah) -> a
    boolean b(com.amap.api.mapcore.ah) -> b
    void a(boolean) -> a
    void d() -> d
    void e() -> e
    void b(boolean) -> b
com.amap.api.mapcore.ba$a -> com.amap.api.a.bb:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.bb -> com.amap.api.a.bc:
    com.amap.api.mapcore.v b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    int k -> k
    int l -> l
    android.os.Handler a -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void e(boolean) -> e
    void f(boolean) -> f
    void g(boolean) -> g
    void h(boolean) -> h
    void i(boolean) -> i
    void a(int) -> a
    void b(int) -> b
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    int i() -> i
    int j() -> j
    boolean a(com.amap.api.mapcore.bb) -> a
    com.amap.api.mapcore.v b(com.amap.api.mapcore.bb) -> b
    boolean c(com.amap.api.mapcore.bb) -> c
    boolean d(com.amap.api.mapcore.bb) -> d
    boolean e(com.amap.api.mapcore.bb) -> e
com.amap.api.mapcore.bc -> com.amap.api.a.bd:
    com.amap.api.mapcore.bb a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.bd -> com.amap.api.a.be:
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.graphics.Paint g -> g
    boolean h -> h
    int i -> i
    com.amap.api.mapcore.b j -> j
    int k -> k
    android.graphics.Rect a -> a
    int b -> b
    void a() -> a
    android.graphics.Bitmap b() -> b
    void a(boolean) -> a
    android.graphics.Point c() -> c
    void a(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.amap.api.mapcore.be -> com.amap.api.a.bf:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.graphics.Bitmap g -> g
    android.graphics.Bitmap h -> h
    android.graphics.Bitmap i -> i
    android.graphics.Bitmap j -> j
    android.graphics.Bitmap k -> k
    android.graphics.Bitmap l -> l
    android.widget.ImageView m -> m
    android.widget.ImageView n -> n
    com.amap.api.mapcore.v o -> o
    void a() -> a
    void a(float) -> a
    com.amap.api.mapcore.v a(com.amap.api.mapcore.be) -> a
    android.graphics.Bitmap b(com.amap.api.mapcore.be) -> b
    android.widget.ImageView c(com.amap.api.mapcore.be) -> c
    android.graphics.Bitmap d(com.amap.api.mapcore.be) -> d
    android.graphics.Bitmap e(com.amap.api.mapcore.be) -> e
    android.widget.ImageView f(com.amap.api.mapcore.be) -> f
    android.graphics.Bitmap g(com.amap.api.mapcore.be) -> g
com.amap.api.mapcore.be$1 -> com.amap.api.a.bg:
    com.amap.api.mapcore.be a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.be$2 -> com.amap.api.a.bh:
    com.amap.api.mapcore.be a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.c -> com.amap.api.a.bi:
    com.amap.api.mapcore.b a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.d -> com.amap.api.a.bj:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.e -> com.amap.api.a.bk:
    com.amap.api.mapcore.b a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.f -> com.amap.api.a.bl:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.g -> com.amap.api.a.bm:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.h -> com.amap.api.a.bn:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.i -> com.amap.api.a.bo:
    com.amap.api.mapcore.v b -> b
    android.location.Location a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.amap.api.mapcore.j -> com.amap.api.a.bp:
    com.amap.api.maps.model.LatLng e -> e
    com.amap.api.maps.model.LatLng f -> f
    com.amap.api.maps.model.LatLng g -> g
    float h -> h
    int i -> i
    float j -> j
    boolean k -> k
    java.lang.String l -> l
    com.amap.api.mapcore.v m -> m
    float[] n -> n
    int o -> o
    boolean p -> p
    double q -> q
    double r -> r
    double s -> s
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean a() -> l
    void b() -> e
    java.lang.String c() -> f
    void a(float) -> b
    float d() -> g
    void a(boolean) -> a
    boolean e() -> h
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> i
    void g() -> j
    com.autonavi.amap.mapcore.FPoint a(com.autonavi.amap.mapcore.MapProjection,double,double,double) -> a
    boolean l() -> c
    com.autonavi.amap.mapcore.DPoint m() -> d
    double a(double,double,double,double) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(float) -> a
    float h() -> a
    void a(int) -> a
    int i() -> b
    void j() -> k
    boolean k() -> m
    void a(com.amap.api.maps.model.LatLng) -> a
    void b(com.amap.api.maps.model.LatLng) -> b
    void c(com.amap.api.maps.model.LatLng) -> c
com.amap.api.mapcore.k -> com.amap.api.a.bq:
    int a -> a
    java.lang.String b -> b
    java.net.HttpURLConnection c -> c
    boolean a(android.content.Context) -> a
    java.lang.String a() -> a
    java.io.InputStream a(java.net.HttpURLConnection) -> a
    boolean a(java.io.InputStream) -> a
    byte[] b() -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.amap.api.mapcore.l -> com.amap.api.a.br:
    int a -> a
    int b -> b
    int c -> c
    float d -> d
    float e -> e
    float f -> f
    int g -> g
    int h -> h
    float i -> i
    float j -> j
    float k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    float r -> r
    float s -> s
    float t -> t
    long u -> u
    long v -> v
    float w -> w
    float x -> x
    float y -> y
    float z -> z
    float A -> A
    float B -> B
    boolean C -> C
    android.view.animation.Interpolator D -> D
    boolean E -> E
    float F -> F
    float G -> G
    int H -> H
    float I -> I
    float J -> J
    float[] K -> K
    float[] L -> L
    float M -> M
    float N -> N
    float O -> O
    boolean P -> P
    float Q -> Q
    float R -> R
    void a(android.view.animation.Interpolator) -> a
    float b(float) -> b
    boolean a() -> a
    void a(boolean) -> a
    int b() -> b
    int c() -> c
    float d() -> d
    float e() -> e
    float f() -> f
    float g() -> g
    boolean h() -> h
    void a(int,int,float,float,float,int,int,float,float,float,long) -> a
    void a(int,int,int,int,int,int,int,int) -> a
    double c(float) -> c
    int d(float) -> d
    double e(float) -> e
    float a(float) -> a
    int i() -> i
    int j() -> j
    void b(boolean) -> b
    boolean k() -> k
com.amap.api.mapcore.m -> com.amap.api.a.bs:
    com.amap.api.mapcore.m$a a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    float g -> g
    com.amap.api.maps.model.CameraPosition h -> h
    com.amap.api.maps.model.LatLngBounds i -> i
    int j -> j
    int k -> k
    int l -> l
    android.graphics.Point m -> m
    boolean n -> n
    com.autonavi.amap.mapcore.IPoint o -> o
    boolean p -> p
    com.amap.api.mapcore.m a() -> a
    com.amap.api.mapcore.m b() -> b
    com.amap.api.mapcore.m c() -> c
    com.amap.api.mapcore.m a(float,float) -> a
    com.amap.api.mapcore.m a(float) -> a
    com.amap.api.mapcore.m b(float) -> b
    com.amap.api.mapcore.m a(float,android.graphics.Point) -> a
    com.amap.api.mapcore.m a(com.amap.api.maps.model.CameraPosition) -> a
    com.amap.api.mapcore.m a(com.autonavi.amap.mapcore.IPoint) -> a
    com.amap.api.mapcore.m c(float) -> c
    com.amap.api.mapcore.m d(float) -> d
    com.amap.api.mapcore.m a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.mapcore.m a(com.amap.api.maps.model.LatLng,float) -> a
    com.amap.api.mapcore.m a(com.amap.api.maps.model.LatLng,float,float,float) -> a
    com.amap.api.mapcore.m a(com.autonavi.amap.mapcore.IPoint,float,float,float) -> a
    com.amap.api.mapcore.m a(com.amap.api.maps.model.LatLngBounds,int) -> a
    com.amap.api.mapcore.m a(com.amap.api.maps.model.LatLngBounds,int,int,int) -> a
com.amap.api.mapcore.m$a -> com.amap.api.a.bt:
    com.amap.api.mapcore.m$a a -> a
    com.amap.api.mapcore.m$a b -> b
    com.amap.api.mapcore.m$a c -> c
    com.amap.api.mapcore.m$a d -> d
    com.amap.api.mapcore.m$a e -> e
    com.amap.api.mapcore.m$a f -> f
    com.amap.api.mapcore.m$a g -> g
    com.amap.api.mapcore.m$a h -> h
    com.amap.api.mapcore.m$a i -> i
    com.amap.api.mapcore.m$a j -> j
    com.amap.api.mapcore.m$a k -> k
    com.amap.api.mapcore.m$a l -> l
    com.amap.api.mapcore.m$a m -> m
    com.amap.api.mapcore.m$a n -> n
    com.amap.api.mapcore.m$a o -> o
    com.amap.api.mapcore.m$a[] p -> p
    com.amap.api.mapcore.m$a[] values() -> values
    com.amap.api.mapcore.m$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.n -> com.amap.api.a.bu:
    com.amap.api.maps.model.LatLng a -> a
    double b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String h -> h
    com.amap.api.mapcore.v i -> i
    java.nio.FloatBuffer j -> j
    int k -> k
    boolean l -> l
    float m -> m
    int n -> n
    int o -> o
    boolean a() -> l
    void b() -> e
    java.lang.String c() -> f
    void a(float) -> b
    float d() -> g
    void a(boolean) -> a
    boolean e() -> h
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> i
    void g() -> j
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void h() -> a
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng i() -> b
    void a(double) -> a
    double l() -> c
    void b(float) -> a
    float m() -> d
    void a(int) -> a
    int n() -> n
    void b(int) -> b
    int o() -> o
    float b(double) -> b
    double c(double) -> c
    void j() -> k
    boolean b(com.amap.api.maps.model.LatLng) -> b
    boolean k() -> m
com.amap.api.mapcore.o -> com.amap.api.a.bv:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.widget.ImageView d -> d
    com.amap.api.mapcore.v e -> e
    void a() -> a
    void b() -> b
com.amap.api.mapcore.o$1 -> com.amap.api.a.bw:
    com.amap.api.mapcore.o a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.p -> com.amap.api.a.bx:
    float a -> a
    java.lang.String b -> b
    com.amap.api.mapcore.p$a c -> c
com.amap.api.mapcore.p$a -> com.amap.api.a.by:
    com.amap.api.mapcore.p$a a -> a
    com.amap.api.mapcore.p$a b -> b
    com.amap.api.mapcore.p$a c -> c
    com.amap.api.mapcore.p$a d -> d
    com.amap.api.mapcore.p$a[] e -> e
    com.amap.api.mapcore.p$a[] values() -> values
    com.amap.api.mapcore.p$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.q -> com.amap.api.a.bz:
    java.util.concurrent.CopyOnWriteArrayList b -> b
    com.amap.api.mapcore.q$a a -> a
    boolean a(com.amap.api.mapcore.s) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.amap.api.mapcore.q$a -> com.amap.api.a.ca:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.r -> com.amap.api.a.cb:
    void c(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> c
    void a(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,java.nio.FloatBuffer,int,int) -> a
    void b(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> b
com.amap.api.mapcore.s -> com.amap.api.a.cc:
    com.amap.api.mapcore.v a -> a
    int getZIndex() -> getZIndex
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
com.amap.api.mapcore.t -> com.amap.api.a.cd:
    int b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    com.amap.api.mapcore.t$a a -> a
    java.lang.String a(java.lang.String) -> a
    void a() -> a
    void b() -> b
    com.amap.api.mapcore.ac c(java.lang.String) -> c
    void a(com.amap.api.mapcore.ac) -> a
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,boolean,int) -> a
    void d() -> d
    boolean e() -> e
com.amap.api.mapcore.t$a -> com.amap.api.a.ce:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.u -> com.amap.api.a.cf:
    com.amap.api.mapcore.v a -> a
    com.amap.api.maps.model.BitmapDescriptor b -> b
    com.amap.api.maps.model.LatLng c -> c
    float d -> d
    float e -> e
    com.amap.api.maps.model.LatLngBounds f -> f
    float g -> g
    float h -> h
    boolean i -> i
    float j -> j
    float k -> k
    float l -> l
    java.lang.String m -> m
    java.nio.FloatBuffer n -> n
    java.nio.FloatBuffer o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    void b() -> e
    java.lang.String c() -> f
    void a(float) -> b
    float d() -> g
    void a(boolean) -> a
    boolean e() -> h
    boolean a(com.amap.api.mapcore.ac) -> a
    int f() -> i
    void g() -> j
    void p() -> p
    void q() -> q
    void r() -> r
    void a(com.autonavi.amap.mapcore.DPoint,double,double,double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void s() -> s
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void j() -> k
    boolean a() -> l
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng h() -> a
    void b(float) -> a
    void a(float,float) -> a
    float i() -> b
    float l() -> c
    void a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds m() -> d
    void c(float) -> c
    float n() -> n
    void d(float) -> d
    float o() -> o
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void b(float,float) -> b
    boolean k() -> m
com.amap.api.mapcore.util.a -> com.amap.api.a.a.a:
    android.content.Context a -> a
    boolean b -> b
    android.view.MotionEvent c -> c
    android.view.MotionEvent d -> d
    float e -> e
    float f -> f
    long g -> g
    boolean a(android.view.MotionEvent) -> a
    void a(int,android.view.MotionEvent) -> a
    void b(int,android.view.MotionEvent) -> b
    void b(android.view.MotionEvent) -> b
    int c(android.view.MotionEvent) -> c
    void a() -> a
com.amap.api.mapcore.util.b -> com.amap.api.a.a.b:
    boolean d -> d
    com.amap.api.mapcore.util.b$a e -> e
    java.lang.reflect.Method a -> a
    java.lang.reflect.Method b -> b
    java.lang.reflect.Method c -> c
    long f -> f
    boolean g -> g
    boolean a() -> a
    long b() -> b
    void c() -> c
    boolean a(android.view.MotionEvent) -> a
com.amap.api.mapcore.util.b$a -> com.amap.api.a.a.c:
    boolean a(android.view.MotionEvent,float,float,float,float) -> a
    void a(float,float,float,float,float) -> a
    void a() -> a
com.amap.api.mapcore.util.c -> com.amap.api.a.a.d:
    com.amap.api.mapcore.util.c$a l -> l
    boolean m -> m
    void a(int,android.view.MotionEvent) -> a
    void b(int,android.view.MotionEvent) -> b
    void a() -> a
    float b() -> b
com.amap.api.mapcore.util.c$a -> com.amap.api.a.a.e:
    boolean a(com.amap.api.mapcore.util.c) -> a
    boolean b(com.amap.api.mapcore.util.c) -> b
    void c(com.amap.api.mapcore.util.c) -> c
com.amap.api.mapcore.util.d -> com.amap.api.a.a.f:
    float l -> l
    float m -> m
    float n -> n
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    float o -> o
    float p -> p
    void b(android.view.MotionEvent) -> b
    float c() -> c
    float a(android.view.MotionEvent,int) -> a
    float b(android.view.MotionEvent,int) -> b
    boolean d(android.view.MotionEvent) -> d
com.amap.api.mapcore.util.e -> com.amap.api.a.a.g:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean,java.lang.Object) -> a
    void b(boolean,java.lang.Object) -> b
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
com.amap.api.mapcore.util.f -> com.amap.api.a.a.h:
    java.util.concurrent.ThreadFactory a -> a
    java.util.concurrent.BlockingQueue e -> e
    java.util.concurrent.Executor b -> b
    java.util.concurrent.Executor c -> c
    java.util.concurrent.Executor d -> d
    com.amap.api.mapcore.util.f$b f -> f
    java.util.concurrent.Executor g -> g
    com.amap.api.mapcore.util.f$e h -> h
    java.util.concurrent.FutureTask i -> i
    com.amap.api.mapcore.util.f$d j -> j
    java.util.concurrent.atomic.AtomicBoolean k -> k
    java.util.concurrent.atomic.AtomicBoolean l -> l
    void c(java.lang.Object) -> c
    java.lang.Object d(java.lang.Object) -> d
    com.amap.api.mapcore.util.f$d a() -> a
    java.lang.Object a(java.lang.Object[]) -> a
    void b() -> b
    void a(java.lang.Object) -> a
    void b(java.lang.Object[]) -> b
    void b(java.lang.Object) -> b
    void c() -> c
    boolean d() -> d
    boolean a(boolean) -> a
    com.amap.api.mapcore.util.f c(java.lang.Object[]) -> c
    com.amap.api.mapcore.util.f a(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void e(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean a(com.amap.api.mapcore.util.f) -> a
    java.lang.Object a(com.amap.api.mapcore.util.f,java.lang.Object) -> a
    java.util.concurrent.FutureTask b(com.amap.api.mapcore.util.f) -> b
    void b(com.amap.api.mapcore.util.f,java.lang.Object) -> b
    void c(com.amap.api.mapcore.util.f,java.lang.Object) -> c
com.amap.api.mapcore.util.f$1 -> com.amap.api.a.a.i:
    com.amap.api.mapcore.util.f a -> a
    java.lang.Object call() -> call
com.amap.api.mapcore.util.f$2 -> com.amap.api.a.a.j:
    com.amap.api.mapcore.util.f a -> a
    void done() -> done
com.amap.api.mapcore.util.f$3 -> com.amap.api.a.a.k:
    int[] a -> a
com.amap.api.mapcore.util.f$a -> com.amap.api.a.a.l:
    com.amap.api.mapcore.util.f a -> a
    java.lang.Object[] b -> b
com.amap.api.mapcore.util.f$b -> com.amap.api.a.a.m:
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.util.f$c -> com.amap.api.a.a.n:
    java.util.ArrayDeque a -> a
    java.lang.Runnable b -> b
    void execute(java.lang.Runnable) -> execute
    void a() -> a
com.amap.api.mapcore.util.f$c$1 -> com.amap.api.a.a.o:
    java.lang.Runnable a -> a
    com.amap.api.mapcore.util.f$c b -> b
    void run() -> run
com.amap.api.mapcore.util.f$d -> com.amap.api.a.a.p:
    com.amap.api.mapcore.util.f$d a -> a
    com.amap.api.mapcore.util.f$d b -> b
    com.amap.api.mapcore.util.f$d c -> c
    com.amap.api.mapcore.util.f$d[] d -> d
    com.amap.api.mapcore.util.f$d[] values() -> values
    com.amap.api.mapcore.util.f$d valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.util.f$e -> com.amap.api.a.a.q:
    java.lang.Object[] b -> b
com.amap.api.mapcore.util.g -> com.amap.api.a.a.r:
    java.util.concurrent.atomic.AtomicInteger a -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.amap.api.mapcore.util.h -> com.amap.api.a.a.s:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(byte[]) -> a
com.amap.api.mapcore.util.i -> com.amap.api.a.a.t:
    com.amap.api.mapcore.util.i c -> c
    java.lang.String d -> d
    android.content.Context e -> e
    android.telephony.TelephonyManager f -> f
    android.net.ConnectivityManager g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String a -> a
    java.lang.String b -> b
    com.amap.api.mapcore.util.i a(android.content.Context) -> a
    java.lang.String j() -> j
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String b(android.content.Context) -> b
    byte[] a(java.io.InputStream) -> a
    java.net.Proxy c(android.content.Context) -> c
    java.net.Proxy a(android.content.Context,java.net.URI) -> a
    java.net.Proxy e(android.content.Context) -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    java.lang.String d(android.content.Context) -> d
com.amap.api.mapcore.util.j -> com.amap.api.a.a.u:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.util.List a(java.util.List) -> a
com.amap.api.mapcore.util.k -> com.amap.api.a.a.v:
    java.nio.charset.Charset a -> a
    java.io.File b -> b
    java.io.File c -> c
    java.io.File d -> d
    int e -> e
    long f -> f
    int g -> g
    long h -> h
    java.io.Writer i -> i
    java.util.LinkedHashMap j -> j
    int k -> k
    long l -> l
    java.util.concurrent.ExecutorService m -> m
    java.util.concurrent.Callable n -> n
    java.lang.Object[] a(java.lang.Object[],int,int) -> a
    java.lang.String a(java.io.InputStream) -> a
    void a(java.io.Closeable) -> a
    void a(java.io.File) -> a
    com.amap.api.mapcore.util.k a(java.io.File,int,int,long) -> a
    void d() -> d
    void d(java.lang.String) -> d
    void e() -> e
    void f() -> f
    void b(java.io.File) -> b
    com.amap.api.mapcore.util.k$c a(java.lang.String) -> a
    com.amap.api.mapcore.util.k$a b(java.lang.String) -> b
    com.amap.api.mapcore.util.k$a a(java.lang.String,long) -> a
    void a(com.amap.api.mapcore.util.k$a,boolean) -> a
    boolean g() -> g
    boolean c(java.lang.String) -> c
    boolean a() -> a
    void h() -> h
    void b() -> b
    void close() -> close
    void i() -> i
    void c() -> c
    void e(java.lang.String) -> e
    java.io.Writer a(com.amap.api.mapcore.util.k) -> a
    void b(com.amap.api.mapcore.util.k) -> b
    boolean c(com.amap.api.mapcore.util.k) -> c
    void d(com.amap.api.mapcore.util.k) -> d
    int a(com.amap.api.mapcore.util.k,int) -> a
    void a(com.amap.api.mapcore.util.k,com.amap.api.mapcore.util.k$a,boolean) -> a
    int e(com.amap.api.mapcore.util.k) -> e
    java.io.File f(com.amap.api.mapcore.util.k) -> f
com.amap.api.mapcore.util.k$a -> com.amap.api.a.a.w:
    com.amap.api.mapcore.util.k$b b -> b
    boolean c -> c
    com.amap.api.mapcore.util.k a -> a
    java.io.OutputStream a(int) -> a
    void a() -> a
    void b() -> b
    com.amap.api.mapcore.util.k$b a(com.amap.api.mapcore.util.k$a) -> a
    boolean a(com.amap.api.mapcore.util.k$a,boolean) -> a
com.amap.api.mapcore.util.k$a$a -> com.amap.api.a.a.x:
    com.amap.api.mapcore.util.k$a a -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.amap.api.mapcore.util.k$b -> com.amap.api.a.a.y:
    java.lang.String b -> b
    long[] c -> c
    boolean d -> d
    com.amap.api.mapcore.util.k$a e -> e
    long f -> f
    com.amap.api.mapcore.util.k a -> a
    java.lang.String a() -> a
    void a(java.lang.String[]) -> a
    java.io.IOException b(java.lang.String[]) -> b
    java.io.File a(int) -> a
    java.io.File b(int) -> b
    boolean a(com.amap.api.mapcore.util.k$b,boolean) -> a
    com.amap.api.mapcore.util.k$a a(com.amap.api.mapcore.util.k$b,com.amap.api.mapcore.util.k$a) -> a
    void a(com.amap.api.mapcore.util.k$b,java.lang.String[]) -> a
    com.amap.api.mapcore.util.k$a a(com.amap.api.mapcore.util.k$b) -> a
    long[] b(com.amap.api.mapcore.util.k$b) -> b
    java.lang.String c(com.amap.api.mapcore.util.k$b) -> c
    boolean d(com.amap.api.mapcore.util.k$b) -> d
    long e(com.amap.api.mapcore.util.k$b) -> e
    long a(com.amap.api.mapcore.util.k$b,long) -> a
com.amap.api.mapcore.util.k$c -> com.amap.api.a.a.z:
    java.lang.String b -> b
    long c -> c
    java.io.InputStream[] d -> d
    com.amap.api.mapcore.util.k a -> a
    java.io.InputStream a(int) -> a
    void close() -> close
com.amap.api.mapcore.util.l -> com.amap.api.a.a.aa:
    com.amap.api.mapcore.util.k a -> a
    java.lang.Void a() -> a
    java.lang.Object call() -> call
com.amap.api.mapcore.util.m -> com.amap.api.a.a.ab:
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[],java.security.Key) -> a
    java.security.PublicKey a(android.content.Context) -> a
    byte[] a(byte[]) -> a
    java.lang.String b(byte[]) -> b
com.amap.api.mapcore.util.n -> com.amap.api.a.a.ac:
    java.net.HttpURLConnection a(java.lang.String,java.net.Proxy) -> a
    java.net.HttpURLConnection a(java.lang.String,byte[],java.net.Proxy) -> a
com.amap.api.mapcore.util.o -> com.amap.api.a.a.ad:
    android.graphics.Bitmap$CompressFormat a -> a
    com.amap.api.mapcore.util.k b -> b
    com.amap.api.mapcore.util.t c -> c
    com.amap.api.mapcore.util.o$a d -> d
    java.lang.Object e -> e
    boolean f -> f
    java.util.HashMap g -> g
    com.amap.api.mapcore.util.o a(com.amap.api.mapcore.util.o$a) -> a
    void b(com.amap.api.mapcore.util.o$a) -> b
    void a() -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.Bitmap b(java.lang.String) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    java.io.File a(android.content.Context,java.lang.String) -> a
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(byte[]) -> a
    int a(android.graphics.Bitmap) -> a
    boolean e() -> e
    java.io.File a(android.content.Context) -> a
    long a(java.io.File) -> a
    java.util.HashMap a(com.amap.api.mapcore.util.o) -> a
    android.graphics.Bitmap$CompressFormat f() -> f
com.amap.api.mapcore.util.o$1 -> com.amap.api.a.a.ae:
    com.amap.api.mapcore.util.o a -> a
    void a(boolean,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap) -> a
    int a(java.lang.String,android.graphics.Bitmap) -> a
    int a(java.lang.Object,java.lang.Object) -> a
    void a(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.amap.api.mapcore.util.o$a -> com.amap.api.a.a.af:
    int a -> a
    int b -> b
    java.io.File c -> c
    android.graphics.Bitmap$CompressFormat d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    void a(int) -> a
    void b(int) -> b
    void a(java.lang.String) -> a
    void a(boolean) -> a
    void b(boolean) -> b
com.amap.api.mapcore.util.p -> com.amap.api.a.a.ag:
    com.amap.api.maps.model.TileProvider e -> e
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.model.TileProvider) -> a
    void b(android.content.Context) -> b
    android.graphics.Bitmap c(com.amap.api.mapcore.az$a) -> c
    android.graphics.Bitmap a(java.lang.Object) -> a
com.amap.api.mapcore.util.q -> com.amap.api.a.a.ah:
    int a -> a
    int b -> b
    void a(int,int) -> a
    android.graphics.Bitmap a(int) -> a
    android.graphics.Bitmap a(java.lang.Object) -> a
    android.graphics.Bitmap a(android.content.res.Resources,int,int,int,com.amap.api.mapcore.util.o) -> a
    android.graphics.Bitmap a(java.io.FileDescriptor,int,int,com.amap.api.mapcore.util.o) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
com.amap.api.mapcore.util.r -> com.amap.api.a.a.ai:
    com.amap.api.mapcore.util.o a -> a
    com.amap.api.mapcore.util.o$a b -> b
    boolean e -> e
    boolean c -> c
    java.lang.Object f -> f
    android.content.res.Resources d -> d
    void a(boolean,com.amap.api.mapcore.az$a) -> a
    void a(com.amap.api.mapcore.util.o$a) -> a
    void a(boolean) -> a
    android.graphics.Bitmap a(java.lang.Object) -> a
    com.amap.api.mapcore.util.o a() -> a
    void a(com.amap.api.mapcore.az$a) -> a
    com.amap.api.mapcore.util.r$a c(com.amap.api.mapcore.az$a) -> c
    void b(boolean) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    java.lang.Object a(com.amap.api.mapcore.util.r) -> a
    com.amap.api.mapcore.util.o b(com.amap.api.mapcore.util.r) -> b
    boolean c(com.amap.api.mapcore.util.r) -> c
    com.amap.api.mapcore.util.r$a b(com.amap.api.mapcore.az$a) -> b
com.amap.api.mapcore.util.r$a -> com.amap.api.a.a.aj:
    java.lang.ref.WeakReference e -> e
    com.amap.api.mapcore.util.r a -> a
    android.graphics.Bitmap a(java.lang.Boolean[]) -> a
    void a(android.graphics.Bitmap) -> a
    void b(android.graphics.Bitmap) -> b
    com.amap.api.mapcore.az$a e() -> e
    void b(java.lang.Object) -> b
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.util.r$b -> com.amap.api.a.a.ak:
    com.amap.api.mapcore.util.r a -> a
    java.lang.Void d(java.lang.Object[]) -> d
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.util.s -> com.amap.api.a.a.al:
    void a(java.lang.String,java.lang.String,int) -> a
com.amap.api.mapcore.util.t -> com.amap.api.a.a.am:
    java.util.LinkedHashMap a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object b(java.lang.Object,java.lang.Object) -> b
    void a(int) -> a
    void a(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object b(java.lang.Object) -> b
    int c(java.lang.Object,java.lang.Object) -> c
    int a(java.lang.Object,java.lang.Object) -> a
    void a() -> a
    java.lang.String toString() -> toString
com.amap.api.mapcore.util.u -> com.amap.api.a.a.an:
    java.lang.String[] a -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.lang.String) -> a
com.amap.api.mapcore.util.v -> com.amap.api.a.a.ao:
    android.content.res.AssetManager a -> a
    android.content.res.Resources b -> b
    android.content.res.Resources c -> c
    boolean d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    android.content.res.Resources$Theme n -> n
    android.content.res.Resources$Theme o -> o
    java.lang.reflect.Field p -> p
    java.lang.reflect.Field q -> q
    java.lang.reflect.Field r -> r
    android.app.Activity s -> s
    android.content.res.AssetManager a(android.content.Context) -> a
com.amap.api.mapcore.util.w -> com.amap.api.a.a.ap:
    boolean a(float,float,float,float,float,float,float,float) -> a
    boolean a(com.autonavi.amap.mapcore.FPoint[],int,int,int,int,int[]) -> a
    int a(com.autonavi.amap.mapcore.FPoint[]) -> a
    boolean a(com.autonavi.amap.mapcore.FPoint[],java.util.List) -> a
com.amap.api.mapcore.util.x -> com.amap.api.a.a.aq:
    int[] a -> a
    double[] b -> b
    android.graphics.Bitmap a(android.content.Context,java.lang.String) -> a
    void a(android.graphics.drawable.Drawable) -> a
    java.lang.String a(java.lang.String,java.lang.Object) -> a
    float a(float) -> a
    float b(float) -> b
    java.nio.FloatBuffer a(float[]) -> a
    java.nio.FloatBuffer a(float[],java.nio.FloatBuffer) -> a
    int a(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap) -> a
    int a(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap,boolean) -> a
    int a(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap) -> a
    int a(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap,boolean) -> a
    int a(int) -> a
    java.lang.String a(java.lang.String[]) -> a
    int a(java.lang.Object[]) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    byte[] a(byte[]) -> a
    byte[] b(android.content.Context,java.lang.String) -> b
    android.graphics.Bitmap a(android.graphics.Bitmap,float) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String b(int) -> b
    boolean c(android.content.Context) -> c
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    void a(javax.microedition.khronos.opengles.GL10,int) -> a
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(java.io.File) -> a
    void a(java.lang.String) -> a
    boolean a(com.amap.api.maps.model.LatLng,java.util.List) -> a
    double a(double,double,double,double,double,double) -> a
    boolean b(double,double,double,double,double,double) -> b
    boolean a(double,double,double,double,double,double,double,double) -> a
    float[] a(com.amap.api.mapcore.v,java.util.List) -> a
    com.autonavi.amap.mapcore.FPoint[] a(com.amap.api.mapcore.v) -> a
    java.util.List b(com.amap.api.mapcore.v,java.util.List) -> b
    com.autonavi.amap.mapcore.FPoint a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    boolean a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    float a(double,double,double,double) -> a
    double a(double,double) -> a
com.amap.api.mapcore.util.y -> com.amap.api.a.a.ar:
    double[][] a -> a
    double[] a(double,double) -> a
    double a(double,double,double) -> a
com.amap.api.mapcore.v -> com.amap.api.a.cg:
    void a(com.amap.api.maps.CustomRenderer) -> a
    void a(com.amap.api.mapcore.s) -> a
    com.autonavi.amap.mapcore.MapProjection c() -> c
    int h() -> h
    int i() -> i
    int b() -> b
    int j() -> j
    android.view.View x() -> x
    void setZOrderOnTop(boolean) -> setZOrderOnTop
    void a(android.location.Location) -> a
    boolean a(java.lang.String) -> a
    void H() -> H
    void a(double,double,com.autonavi.amap.mapcore.IPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.FPoint) -> b
    void b(int,int,com.autonavi.amap.mapcore.DPoint) -> b
    float z() -> z
    int F() -> F
    void f(int) -> f
    com.amap.api.maps.model.CameraPosition l() -> l
    float m() -> m
    float n() -> n
    void a(com.amap.api.mapcore.m) -> a
    void b(com.amap.api.mapcore.m) -> b
    void a(com.amap.api.mapcore.m,com.amap.api.maps.AMap$CancelableCallback) -> a
    void a(com.amap.api.mapcore.m,long,com.amap.api.maps.AMap$CancelableCallback) -> a
    void o() -> o
    com.amap.api.mapcore.ae a(com.amap.api.maps.model.PolylineOptions) -> a
    com.amap.api.mapcore.x a(com.amap.api.maps.model.CircleOptions) -> a
    com.amap.api.mapcore.ad a(com.amap.api.maps.model.PolygonOptions) -> a
    com.amap.api.mapcore.y a(com.amap.api.maps.model.GroundOverlayOptions) -> a
    com.amap.api.maps.model.Marker a(com.amap.api.maps.model.MarkerOptions) -> a
    com.amap.api.maps.model.TileOverlay a(com.amap.api.maps.model.TileOverlayOptions) -> a
    void p() -> p
    int q() -> q
    void b(int) -> b
    boolean r() -> r
    void f(boolean) -> f
    boolean s() -> s
    void g(boolean) -> g
    void k(boolean) -> k
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    android.location.Location t() -> t
    void a(com.amap.api.maps.LocationSource) -> a
    com.amap.api.mapcore.ai u() -> u
    com.amap.api.mapcore.af v() -> v
    void a(com.amap.api.maps.AMap$OnCameraChangeListener) -> a
    void a(com.amap.api.maps.AMap$OnMapClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapTouchListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLongClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerDragListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLoadedListener) -> a
    void a(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> a
    void a(com.amap.api.maps.AMap$InfoWindowAdapter) -> a
    void a(com.amap.api.mapcore.aa) -> a
    boolean b(com.amap.api.mapcore.aa) -> b
    void y() -> y
    void a(double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void b(double,double,com.autonavi.amap.mapcore.IPoint) -> b
    void k() -> k
    void a(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void d() -> d
    void a(com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    void a(com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    void d(int) -> d
    void e(int) -> e
    float E() -> E
    com.amap.api.maps.model.LatLngBounds B() -> B
    void onResume() -> onResume
    void onPause() -> onPause
    void e(boolean) -> e
    void a(int,int,int,int) -> a
    void a(float) -> a
    java.util.List G() -> G
    void a(int,int,com.autonavi.amap.mapcore.FPoint) -> a
    float c(int) -> c
    void I() -> I
    void a(int,int) -> a
    com.amap.api.maps.model.CameraPosition h(boolean) -> h
    void g(int) -> g
    int L() -> L
    boolean M() -> M
    com.amap.api.mapcore.w a(com.amap.api.maps.model.ArcOptions) -> a
    com.amap.api.mapcore.l N() -> N
    com.amap.api.mapcore.ab a(com.amap.api.maps.model.NavigateArrowOptions) -> a
    java.util.ArrayList a(java.util.ArrayList,boolean) -> a
    void O() -> O
    void a(com.amap.api.maps.AMap$OnCacheRemoveListener) -> a
com.amap.api.mapcore.w -> com.amap.api.a.ch:
    void b(float) -> a
    float h() -> a
    void a(int) -> a
    int i() -> b
com.amap.api.mapcore.x -> com.amap.api.a.ci:
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng i() -> b
    void a(double) -> a
    double l() -> c
    void b(float) -> a
    float m() -> d
    void a(int) -> a
    int n() -> n
    void b(int) -> b
    int o() -> o
    boolean b(com.amap.api.maps.model.LatLng) -> b
com.amap.api.mapcore.y -> com.amap.api.a.cj:
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng h() -> a
    void b(float) -> a
    void a(float,float) -> a
    float i() -> b
    float l() -> c
    void a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds m() -> d
    void c(float) -> c
    float n() -> n
    void d(float) -> d
    float o() -> o
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
com.amap.api.mapcore.z -> com.amap.api.a.ck:
    com.amap.api.mapcore.v a() -> a
    void a(android.app.Activity,com.amap.api.maps.AMapOptions,android.os.Bundle) -> a
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.AMapOptions) -> a
    void a(android.os.Bundle) -> a
    android.view.View a(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void b(android.os.Bundle) -> b
com.amap.api.maps.AMap -> com.amap.api.maps.AMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    int MAP_TYPE_NIGHT -> MAP_TYPE_NIGHT
    int LOCATION_TYPE_LOCATE -> LOCATION_TYPE_LOCATE
    int LOCATION_TYPE_MAP_FOLLOW -> LOCATION_TYPE_MAP_FOLLOW
    int LOCATION_TYPE_MAP_ROTATE -> LOCATION_TYPE_MAP_ROTATE
    com.amap.api.mapcore.v a -> a
    com.amap.api.maps.UiSettings b -> b
    com.amap.api.maps.Projection c -> c
    com.amap.api.maps.model.MyTrafficStyle d -> d
    com.amap.api.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    float getMaxZoomLevel() -> getMaxZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    void moveCamera(com.amap.api.maps.CameraUpdate) -> moveCamera
    void animateCamera(com.amap.api.maps.CameraUpdate) -> animateCamera
    void animateCamera(com.amap.api.maps.CameraUpdate,com.amap.api.maps.AMap$CancelableCallback) -> animateCamera
    void animateCamera(com.amap.api.maps.CameraUpdate,long,com.amap.api.maps.AMap$CancelableCallback) -> animateCamera
    void stopAnimation() -> stopAnimation
    com.amap.api.maps.model.NavigateArrow addNavigateArrow(com.amap.api.maps.model.NavigateArrowOptions) -> addNavigateArrow
    com.amap.api.maps.model.Polyline addPolyline(com.amap.api.maps.model.PolylineOptions) -> addPolyline
    com.amap.api.maps.model.Circle addCircle(com.amap.api.maps.model.CircleOptions) -> addCircle
    com.amap.api.maps.model.Arc addArc(com.amap.api.maps.model.ArcOptions) -> addArc
    com.amap.api.maps.model.Polygon addPolygon(com.amap.api.maps.model.PolygonOptions) -> addPolygon
    com.amap.api.maps.model.GroundOverlay addGroundOverlay(com.amap.api.maps.model.GroundOverlayOptions) -> addGroundOverlay
    com.amap.api.maps.model.Marker addMarker(com.amap.api.maps.model.MarkerOptions) -> addMarker
    java.util.ArrayList addMarkers(java.util.ArrayList,boolean) -> addMarkers
    java.util.List getMapScreenMarkers() -> getMapScreenMarkers
    com.amap.api.maps.model.TileOverlay addTileOverlay(com.amap.api.maps.model.TileOverlayOptions) -> addTileOverlay
    void clear() -> clear
    int getMapType() -> getMapType
    void setMapType(int) -> setMapType
    boolean isTrafficEnabled() -> isTrafficEnabled
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    void setMyTrafficStyle(com.amap.api.maps.model.MyTrafficStyle) -> setMyTrafficStyle
    com.amap.api.maps.model.MyTrafficStyle getMyTrafficStyle() -> getMyTrafficStyle
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    android.location.Location getMyLocation() -> getMyLocation
    void setLocationSource(com.amap.api.maps.LocationSource) -> setLocationSource
    void setMyLocationStyle(com.amap.api.maps.model.MyLocationStyle) -> setMyLocationStyle
    void setMyLocationType(int) -> setMyLocationType
    void setMyLocationRotateAngle(float) -> setMyLocationRotateAngle
    com.amap.api.maps.UiSettings getUiSettings() -> getUiSettings
    com.amap.api.maps.Projection getProjection() -> getProjection
    void setOnCameraChangeListener(com.amap.api.maps.AMap$OnCameraChangeListener) -> setOnCameraChangeListener
    void setOnMapClickListener(com.amap.api.maps.AMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapTouchListener(com.amap.api.maps.AMap$OnMapTouchListener) -> setOnMapTouchListener
    void setOnMyLocationChangeListener(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> setOnMyLocationChangeListener
    void setOnMapLongClickListener(com.amap.api.maps.AMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.amap.api.maps.AMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.amap.api.maps.AMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnInfoWindowClickListener(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> setOnInfoWindowClickListener
    void setInfoWindowAdapter(com.amap.api.maps.AMap$InfoWindowAdapter) -> setInfoWindowAdapter
    void setOnMapLoadedListener(com.amap.api.maps.AMap$OnMapLoadedListener) -> setOnMapLoadedListener
    void getMapPrintScreen(com.amap.api.maps.AMap$onMapPrintScreenListener) -> getMapPrintScreen
    void getMapScreenShot(com.amap.api.maps.AMap$OnMapScreenShotListener) -> getMapScreenShot
    float getScalePerPixel() -> getScalePerPixel
    void runOnDrawFrame() -> runOnDrawFrame
    void removecache() -> removecache
    void removecache(com.amap.api.maps.AMap$OnCacheRemoveListener) -> removecache
    void setCustomRenderer(com.amap.api.maps.CustomRenderer) -> setCustomRenderer
    void setPointToCenter(int,int) -> setPointToCenter
    void setMapTextZIndex(int) -> setMapTextZIndex
    void setLoadOfflineData(boolean) -> setLoadOfflineData
    int getMapTextZIndex() -> getMapTextZIndex
    java.lang.String getVersion() -> getVersion
com.amap.api.maps.AMap$CancelableCallback -> com.amap.api.maps.AMap$CancelableCallback:
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.amap.api.maps.AMap$InfoWindowAdapter -> com.amap.api.maps.AMap$InfoWindowAdapter:
    android.view.View getInfoWindow(com.amap.api.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.amap.api.maps.model.Marker) -> getInfoContents
com.amap.api.maps.AMap$OnCacheRemoveListener -> com.amap.api.maps.AMap$OnCacheRemoveListener:
    void onRemoveCacheFinish(boolean) -> onRemoveCacheFinish
com.amap.api.maps.AMap$OnCameraChangeListener -> com.amap.api.maps.AMap$OnCameraChangeListener:
    void onCameraChange(com.amap.api.maps.model.CameraPosition) -> onCameraChange
    void onCameraChangeFinish(com.amap.api.maps.model.CameraPosition) -> onCameraChangeFinish
com.amap.api.maps.AMap$OnInfoWindowClickListener -> com.amap.api.maps.AMap$OnInfoWindowClickListener:
    void onInfoWindowClick(com.amap.api.maps.model.Marker) -> onInfoWindowClick
com.amap.api.maps.AMap$OnMapClickListener -> com.amap.api.maps.AMap$OnMapClickListener:
    void onMapClick(com.amap.api.maps.model.LatLng) -> onMapClick
com.amap.api.maps.AMap$OnMapLoadedListener -> com.amap.api.maps.AMap$OnMapLoadedListener:
    void onMapLoaded() -> onMapLoaded
com.amap.api.maps.AMap$OnMapLongClickListener -> com.amap.api.maps.AMap$OnMapLongClickListener:
    void onMapLongClick(com.amap.api.maps.model.LatLng) -> onMapLongClick
com.amap.api.maps.AMap$OnMapScreenShotListener -> com.amap.api.maps.AMap$OnMapScreenShotListener:
    void onMapScreenShot(android.graphics.Bitmap) -> onMapScreenShot
com.amap.api.maps.AMap$OnMapTouchListener -> com.amap.api.maps.AMap$OnMapTouchListener:
    void onTouch(android.view.MotionEvent) -> onTouch
com.amap.api.maps.AMap$OnMarkerClickListener -> com.amap.api.maps.AMap$OnMarkerClickListener:
    boolean onMarkerClick(com.amap.api.maps.model.Marker) -> onMarkerClick
com.amap.api.maps.AMap$OnMarkerDragListener -> com.amap.api.maps.AMap$OnMarkerDragListener:
    void onMarkerDragStart(com.amap.api.maps.model.Marker) -> onMarkerDragStart
    void onMarkerDrag(com.amap.api.maps.model.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.amap.api.maps.model.Marker) -> onMarkerDragEnd
com.amap.api.maps.AMap$OnMyLocationChangeListener -> com.amap.api.maps.AMap$OnMyLocationChangeListener:
    void onMyLocationChange(android.location.Location) -> onMyLocationChange
com.amap.api.maps.AMap$onMapPrintScreenListener -> com.amap.api.maps.AMap$onMapPrintScreenListener:
    void onMapPrint(android.graphics.drawable.Drawable) -> onMapPrint
com.amap.api.maps.AMapException -> com.amap.api.maps.AMapException:
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR_SOCKET -> ERROR_SOCKET
    java.lang.String ERROR_SOCKE_TIME_OUT -> ERROR_SOCKE_TIME_OUT
    java.lang.String ERROR_INVALID_PARAMETER -> ERROR_INVALID_PARAMETER
    java.lang.String ERROR_NULL_PARAMETER -> ERROR_NULL_PARAMETER
    java.lang.String ERROR_URL -> ERROR_URL
    java.lang.String ERROR_UNKNOW_HOST -> ERROR_UNKNOW_HOST
    java.lang.String ERROR_UNKNOW_SERVICE -> ERROR_UNKNOW_SERVICE
    java.lang.String ERROR_PROTOCOL -> ERROR_PROTOCOL
    java.lang.String ERROR_CONNECTION -> ERROR_CONNECTION
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ERROR_FAILURE_AUTH -> ERROR_FAILURE_AUTH
    java.lang.String ERROR_NOT_ENOUGH_SPACE -> ERROR_NOT_ENOUGH_SPACE
    java.lang.String ERROR_NOT_AVAILABLE -> ERROR_NOT_AVAILABLE
    java.lang.String a -> a
    java.lang.String getErrorMessage() -> getErrorMessage
com.amap.api.maps.AMapNativeRenderer -> com.amap.api.maps.AMapNativeRenderer:
    void nativeDrawLineByTextureID(float[],int,float,int,float,float,float,float,float,boolean,boolean) -> nativeDrawLineByTextureID
    void nativeDrawArrowLineWithPoints(float[],int,float,float,float,float,float,float,float,float,float,float) -> nativeDrawArrowLineWithPoints
com.amap.api.maps.AMapOptions -> com.amap.api.maps.AMapOptions:
    com.amap.api.maps.AMapOptionsCreator CREATOR -> CREATOR
    int a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.amap.api.maps.model.CameraPosition h -> h
    boolean i -> i
    boolean j -> j
    int k -> k
    int LOGO_POSITION_BOTTOM_LEFT -> LOGO_POSITION_BOTTOM_LEFT
    int LOGO_POSITION_BOTTOM_CENTER -> LOGO_POSITION_BOTTOM_CENTER
    int LOGO_POSITION_BOTTOM_RIGHT -> LOGO_POSITION_BOTTOM_RIGHT
    int ZOOM_POSITION_RIGHT_CENTER -> ZOOM_POSITION_RIGHT_CENTER
    int ZOOM_POSITION_RIGHT_BUTTOM -> ZOOM_POSITION_RIGHT_BUTTOM
    com.amap.api.maps.AMapOptions logoPosition(int) -> logoPosition
    com.amap.api.maps.AMapOptions zOrderOnTop(boolean) -> zOrderOnTop
    com.amap.api.maps.AMapOptions mapType(int) -> mapType
    com.amap.api.maps.AMapOptions camera(com.amap.api.maps.model.CameraPosition) -> camera
    com.amap.api.maps.AMapOptions scaleControlsEnabled(boolean) -> scaleControlsEnabled
    com.amap.api.maps.AMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.amap.api.maps.AMapOptions compassEnabled(boolean) -> compassEnabled
    com.amap.api.maps.AMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.amap.api.maps.AMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.amap.api.maps.AMapOptions tiltGesturesEnabled(boolean) -> tiltGesturesEnabled
    com.amap.api.maps.AMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    int getLogoPosition() -> getLogoPosition
    java.lang.Boolean getZOrderOnTop() -> getZOrderOnTop
    int getMapType() -> getMapType
    com.amap.api.maps.model.CameraPosition getCamera() -> getCamera
    java.lang.Boolean getScaleControlsEnabled() -> getScaleControlsEnabled
    java.lang.Boolean getZoomControlsEnabled() -> getZoomControlsEnabled
    java.lang.Boolean getCompassEnabled() -> getCompassEnabled
    java.lang.Boolean getScrollGesturesEnabled() -> getScrollGesturesEnabled
    java.lang.Boolean getZoomGesturesEnabled() -> getZoomGesturesEnabled
    java.lang.Boolean getTiltGesturesEnabled() -> getTiltGesturesEnabled
    java.lang.Boolean getRotateGesturesEnabled() -> getRotateGesturesEnabled
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.AMapOptionsCreator -> com.amap.api.maps.AMapOptionsCreator:
    com.amap.api.maps.AMapOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.AMapOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.AMapUtils -> com.amap.api.maps.AMapUtils:
    float calculateLineDistance(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> calculateLineDistance
    float calculateArea(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> calculateArea
com.amap.api.maps.CameraUpdate -> com.amap.api.maps.CameraUpdate:
    com.amap.api.mapcore.m a -> a
    com.amap.api.mapcore.m a() -> a
com.amap.api.maps.CameraUpdateFactory -> com.amap.api.maps.CameraUpdateFactory:
    com.amap.api.maps.CameraUpdate zoomIn() -> zoomIn
    com.amap.api.maps.CameraUpdate zoomOut() -> zoomOut
    com.amap.api.maps.CameraUpdate scrollBy(float,float) -> scrollBy
    com.amap.api.maps.CameraUpdate zoomTo(float) -> zoomTo
    com.amap.api.maps.CameraUpdate zoomBy(float) -> zoomBy
    com.amap.api.maps.CameraUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.amap.api.maps.CameraUpdate newCameraPosition(com.amap.api.maps.model.CameraPosition) -> newCameraPosition
    com.amap.api.maps.CameraUpdate newLatLng(com.amap.api.maps.model.LatLng) -> newLatLng
    com.amap.api.maps.CameraUpdate newLatLngZoom(com.amap.api.maps.model.LatLng,float) -> newLatLngZoom
    com.amap.api.maps.CameraUpdate newLatLngBounds(com.amap.api.maps.model.LatLngBounds,int) -> newLatLngBounds
    com.amap.api.maps.CameraUpdate changeLatLng(com.amap.api.maps.model.LatLng) -> changeLatLng
    com.amap.api.maps.CameraUpdate changeBearing(float) -> changeBearing
    com.amap.api.maps.CameraUpdate changeTilt(float) -> changeTilt
    com.amap.api.maps.CameraUpdate newLatLngBounds(com.amap.api.maps.model.LatLngBounds,int,int,int) -> newLatLngBounds
com.amap.api.maps.CustomRenderer -> com.amap.api.maps.CustomRenderer:
    void OnMapReferencechanged() -> OnMapReferencechanged
com.amap.api.maps.LocationSource -> com.amap.api.maps.LocationSource:
    void activate(com.amap.api.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
com.amap.api.maps.LocationSource$OnLocationChangedListener -> com.amap.api.maps.LocationSource$OnLocationChangedListener:
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.amap.api.maps.MapFragment -> com.amap.api.maps.MapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.z b -> b
    com.amap.api.maps.MapFragment newInstance() -> newInstance
    com.amap.api.maps.MapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.z getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
com.amap.api.maps.MapView -> com.amap.api.maps.MapView:
    com.amap.api.mapcore.z a -> a
    com.amap.api.maps.AMap b -> b
    com.amap.api.mapcore.z getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setLayerType(int,android.graphics.Paint) -> setLayerType
com.amap.api.maps.MapsInitializer -> com.amap.api.maps.MapsInitializer:
    java.lang.String sdcardDir -> sdcardDir
    boolean a -> a
    void initialize(android.content.Context) -> initialize
    void setNetWorkEnable(boolean) -> setNetWorkEnable
    boolean getNetWorkEnable() -> getNetWorkEnable
com.amap.api.maps.Projection -> com.amap.api.maps.Projection:
    com.amap.api.mapcore.af a -> a
    com.amap.api.maps.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.amap.api.maps.model.LatLng) -> toScreenLocation
    android.graphics.PointF toMapLocation(com.amap.api.maps.model.LatLng) -> toMapLocation
    android.graphics.PointF toOpenGLLocation(com.amap.api.maps.model.LatLng) -> toOpenGLLocation
    float toOpenGLWidth(int) -> toOpenGLWidth
    com.amap.api.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
    com.amap.api.maps.model.TileProjection fromBoundsToTile(com.amap.api.maps.model.LatLngBounds,int,int) -> fromBoundsToTile
com.amap.api.maps.SupportMapFragment -> com.amap.api.maps.SupportMapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.z b -> b
    com.amap.api.maps.SupportMapFragment newInstance() -> newInstance
    com.amap.api.maps.SupportMapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.z getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
com.amap.api.maps.UiSettings -> com.amap.api.maps.UiSettings:
    com.amap.api.mapcore.ai a -> a
    void setScaleControlsEnabled(boolean) -> setScaleControlsEnabled
    void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setLogoPosition(int) -> setLogoPosition
    void setZoomPosition(int) -> setZoomPosition
    int getZoomPosition() -> getZoomPosition
    boolean isScaleControlsEnabled() -> isScaleControlsEnabled
    boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    int getLogoPosition() -> getLogoPosition
com.amap.api.maps.model.AMapGLOverlay -> com.amap.api.maps.model.AMapGLOverlay:
    void destroy() -> destroy
com.amap.api.maps.model.Arc -> com.amap.api.maps.model.Arc:
    com.amap.api.mapcore.w a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.ArcOptions -> com.amap.api.maps.model.ArcOptions:
    com.amap.api.maps.model.ArcOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    com.amap.api.maps.model.LatLng c -> c
    com.amap.api.maps.model.LatLng d -> d
    float e -> e
    int f -> f
    float g -> g
    boolean h -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.amap.api.maps.model.ArcOptions point(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> point
    com.amap.api.maps.model.ArcOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.ArcOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.ArcOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.ArcOptions visible(boolean) -> visible
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    com.amap.api.maps.model.LatLng getStart() -> getStart
    com.amap.api.maps.model.LatLng getPassed() -> getPassed
    com.amap.api.maps.model.LatLng getEnd() -> getEnd
com.amap.api.maps.model.ArcOptionsCreator -> com.amap.api.maps.model.ArcOptionsCreator:
    com.amap.api.maps.model.ArcOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.ArcOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.BitmapDescriptor -> com.amap.api.maps.model.BitmapDescriptor:
    com.amap.api.maps.model.BitmapDescriptorCreator CREATOR -> CREATOR
    int a -> a
    int b -> b
    android.graphics.Bitmap c -> c
    int d -> d
    com.amap.api.maps.model.BitmapDescriptor clone() -> clone
    android.graphics.Bitmap getBitmap() -> getBitmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void recycle() -> recycle
    void setTextureId(int) -> setTextureId
    int getTextureId() -> getTextureId
    java.lang.Object clone() -> clone
com.amap.api.maps.model.BitmapDescriptorCreator -> com.amap.api.maps.model.BitmapDescriptorCreator:
    com.amap.api.maps.model.BitmapDescriptor createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.BitmapDescriptor[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.BitmapDescriptorFactory -> com.amap.api.maps.model.BitmapDescriptorFactory:
    float HUE_RED -> HUE_RED
    float HUE_ORANGE -> HUE_ORANGE
    float HUE_YELLOW -> HUE_YELLOW
    float HUE_GREEN -> HUE_GREEN
    float HUE_CYAN -> HUE_CYAN
    float HUE_AZURE -> HUE_AZURE
    float HUE_BLUE -> HUE_BLUE
    float HUE_VIOLET -> HUE_VIOLET
    float HUE_MAGENTA -> HUE_MAGENTA
    float HUE_ROSE -> HUE_ROSE
    com.amap.api.maps.model.BitmapDescriptor fromResource(int) -> fromResource
    com.amap.api.maps.model.BitmapDescriptor fromView(android.view.View) -> fromView
    android.graphics.Bitmap a(android.view.View) -> a
    com.amap.api.maps.model.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.amap.api.maps.model.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.amap.api.maps.model.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.amap.api.maps.model.BitmapDescriptor defaultMarker() -> defaultMarker
    com.amap.api.maps.model.BitmapDescriptor defaultMarker(float) -> defaultMarker
    com.amap.api.maps.model.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
com.amap.api.maps.model.CameraPosition -> com.amap.api.maps.model.CameraPosition:
    com.amap.api.maps.model.CameraPositionCreator CREATOR -> CREATOR
    com.amap.api.maps.model.LatLng target -> target
    float zoom -> zoom
    float tilt -> tilt
    float bearing -> bearing
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    com.amap.api.maps.model.CameraPosition fromLatLngZoom(com.amap.api.maps.model.LatLng,float) -> fromLatLngZoom
    com.amap.api.maps.model.CameraPosition$Builder builder() -> builder
    com.amap.api.maps.model.CameraPosition$Builder builder(com.amap.api.maps.model.CameraPosition) -> builder
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.maps.model.CameraPosition$Builder -> com.amap.api.maps.model.CameraPosition$Builder:
    com.amap.api.maps.model.LatLng a -> a
    float b -> b
    float c -> c
    float d -> d
    com.amap.api.maps.model.CameraPosition$Builder target(com.amap.api.maps.model.LatLng) -> target
    com.amap.api.maps.model.CameraPosition$Builder zoom(float) -> zoom
    com.amap.api.maps.model.CameraPosition$Builder tilt(float) -> tilt
    com.amap.api.maps.model.CameraPosition$Builder bearing(float) -> bearing
    com.amap.api.maps.model.CameraPosition build() -> build
com.amap.api.maps.model.CameraPositionCreator -> com.amap.api.maps.model.CameraPositionCreator:
    com.amap.api.maps.model.CameraPosition createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.CameraPosition[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Circle -> com.amap.api.maps.model.Circle:
    com.amap.api.mapcore.x a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setCenter(com.amap.api.maps.model.LatLng) -> setCenter
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    void setRadius(double) -> setRadius
    double getRadius() -> getRadius
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
com.amap.api.maps.model.CircleOptions -> com.amap.api.maps.model.CircleOptions:
    com.amap.api.maps.model.CircleOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    double c -> c
    float d -> d
    int e -> e
    int f -> f
    float g -> g
    boolean h -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.amap.api.maps.model.CircleOptions center(com.amap.api.maps.model.LatLng) -> center
    com.amap.api.maps.model.CircleOptions radius(double) -> radius
    com.amap.api.maps.model.CircleOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.CircleOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.CircleOptions fillColor(int) -> fillColor
    com.amap.api.maps.model.CircleOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.CircleOptions visible(boolean) -> visible
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    double getRadius() -> getRadius
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.CircleOptionsCreator -> com.amap.api.maps.model.CircleOptionsCreator:
    com.amap.api.maps.model.CircleOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.CircleOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.GroundOverlay -> com.amap.api.maps.model.GroundOverlay:
    com.amap.api.mapcore.y a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setDimensions(float) -> setDimensions
    void setImage(com.amap.api.maps.model.BitmapDescriptor) -> setImage
    void setDimensions(float,float) -> setDimensions
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setPositionFromBounds(com.amap.api.maps.model.LatLngBounds) -> setPositionFromBounds
    com.amap.api.maps.model.LatLngBounds getBounds() -> getBounds
    void setBearing(float) -> setBearing
    float getBearing() -> getBearing
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.GroundOverlayOptions -> com.amap.api.maps.model.GroundOverlayOptions:
    com.amap.api.maps.model.GroundOverlayOptionsCreator CREATOR -> CREATOR
    float NO_DIMENSION -> NO_DIMENSION
    int a -> a
    com.amap.api.maps.model.BitmapDescriptor b -> b
    com.amap.api.maps.model.LatLng c -> c
    float d -> d
    float e -> e
    com.amap.api.maps.model.LatLngBounds f -> f
    float g -> g
    float h -> h
    boolean i -> i
    float j -> j
    float k -> k
    float l -> l
    com.amap.api.maps.model.GroundOverlayOptions image(com.amap.api.maps.model.BitmapDescriptor) -> image
    com.amap.api.maps.model.GroundOverlayOptions anchor(float,float) -> anchor
    com.amap.api.maps.model.GroundOverlayOptions position(com.amap.api.maps.model.LatLng,float) -> position
    com.amap.api.maps.model.GroundOverlayOptions position(com.amap.api.maps.model.LatLng,float,float) -> position
    com.amap.api.maps.model.GroundOverlayOptions a(com.amap.api.maps.model.LatLng,float,float) -> a
    com.amap.api.maps.model.GroundOverlayOptions positionFromBounds(com.amap.api.maps.model.LatLngBounds) -> positionFromBounds
    com.amap.api.maps.model.GroundOverlayOptions bearing(float) -> bearing
    com.amap.api.maps.model.GroundOverlayOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.GroundOverlayOptions visible(boolean) -> visible
    com.amap.api.maps.model.GroundOverlayOptions transparency(float) -> transparency
    com.amap.api.maps.model.BitmapDescriptor getImage() -> getImage
    com.amap.api.maps.model.LatLng getLocation() -> getLocation
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    com.amap.api.maps.model.LatLngBounds getBounds() -> getBounds
    float getBearing() -> getBearing
    float getZIndex() -> getZIndex
    float getTransparency() -> getTransparency
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.GroundOverlayOptionsCreator -> com.amap.api.maps.model.GroundOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.GroundOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.GroundOverlayOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.LatLng -> com.amap.api.maps.model.LatLng:
    com.amap.api.maps.model.LatLngCreator CREATOR -> CREATOR
    double latitude -> latitude
    double longitude -> longitude
    java.text.DecimalFormat a -> a
    double a(double) -> a
    com.amap.api.maps.model.LatLng clone() -> clone
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
com.amap.api.maps.model.LatLngBounds -> com.amap.api.maps.model.LatLngBounds:
    com.amap.api.maps.model.LatLngBoundsCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.LatLng southwest -> southwest
    com.amap.api.maps.model.LatLng northeast -> northeast
    int a() -> a
    com.amap.api.maps.model.LatLngBounds$Builder builder() -> builder
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
    boolean contains(com.amap.api.maps.model.LatLngBounds) -> contains
    boolean intersects(com.amap.api.maps.model.LatLngBounds) -> intersects
    boolean a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds including(com.amap.api.maps.model.LatLng) -> including
    double c(double,double) -> c
    double d(double,double) -> d
    boolean a(double) -> a
    boolean b(double) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    double a(double,double) -> a
    double b(double,double) -> b
com.amap.api.maps.model.LatLngBounds$Builder -> com.amap.api.maps.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    com.amap.api.maps.model.LatLngBounds$Builder include(com.amap.api.maps.model.LatLng) -> include
    boolean a(double) -> a
    com.amap.api.maps.model.LatLngBounds build() -> build
com.amap.api.maps.model.LatLngBoundsCreator -> com.amap.api.maps.model.LatLngBoundsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.LatLngBounds createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.LatLngBounds[] newArray(int) -> newArray
    void a(com.amap.api.maps.model.LatLngBounds,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.LatLngCreator -> com.amap.api.maps.model.LatLngCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.LatLng createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.LatLng[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Marker -> com.amap.api.maps.model.Marker:
    com.amap.api.mapcore.aa a -> a
    void setPeriod(int) -> setPeriod
    int getPeriod() -> getPeriod
    void setIcons(java.util.ArrayList) -> setIcons
    java.util.ArrayList getIcons() -> getIcons
    void remove() -> remove
    void destroy() -> destroy
    java.lang.String getId() -> getId
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSnippet() -> getSnippet
    void setIcon(com.amap.api.maps.model.BitmapDescriptor) -> setIcon
    void setAnchor(float,float) -> setAnchor
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void showInfoWindow() -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    boolean isInfoWindowShown() -> isInfoWindowShown
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void setObject(java.lang.Object) -> setObject
    java.lang.Object getObject() -> getObject
    void setRotateAngle(float) -> setRotateAngle
    float getRotateAngle() -> getRotateAngle
    void setToTop() -> setToTop
    void setFlat(boolean) -> setFlat
    boolean isFlat() -> isFlat
    void setPositionByPixels(int,int) -> setPositionByPixels
com.amap.api.maps.model.MarkerOptions -> com.amap.api.maps.model.MarkerOptions:
    com.amap.api.maps.model.MarkerOptionsCreator CREATOR -> CREATOR
    com.amap.api.maps.model.LatLng b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    float e -> e
    float f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String a -> a
    boolean i -> i
    int j -> j
    int k -> k
    java.util.ArrayList l -> l
    int m -> m
    boolean n -> n
    boolean o -> o
    com.amap.api.maps.model.MarkerOptions icons(java.util.ArrayList) -> icons
    java.util.ArrayList getIcons() -> getIcons
    com.amap.api.maps.model.MarkerOptions period(int) -> period
    int getPeriod() -> getPeriod
    boolean isPerspective() -> isPerspective
    com.amap.api.maps.model.MarkerOptions perspective(boolean) -> perspective
    com.amap.api.maps.model.MarkerOptions position(com.amap.api.maps.model.LatLng) -> position
    com.amap.api.maps.model.MarkerOptions setFlat(boolean) -> setFlat
    void a() -> a
    com.amap.api.maps.model.MarkerOptions icon(com.amap.api.maps.model.BitmapDescriptor) -> icon
    com.amap.api.maps.model.MarkerOptions anchor(float,float) -> anchor
    com.amap.api.maps.model.MarkerOptions setInfoWindowOffset(int,int) -> setInfoWindowOffset
    com.amap.api.maps.model.MarkerOptions title(java.lang.String) -> title
    com.amap.api.maps.model.MarkerOptions snippet(java.lang.String) -> snippet
    com.amap.api.maps.model.MarkerOptions draggable(boolean) -> draggable
    com.amap.api.maps.model.MarkerOptions visible(boolean) -> visible
    com.amap.api.maps.model.MarkerOptions setGps(boolean) -> setGps
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    java.lang.String getTitle() -> getTitle
    java.lang.String getSnippet() -> getSnippet
    com.amap.api.maps.model.BitmapDescriptor getIcon() -> getIcon
    float getAnchorU() -> getAnchorU
    int getInfoWindowOffsetX() -> getInfoWindowOffsetX
    int getInfoWindowOffsetY() -> getInfoWindowOffsetY
    float getAnchorV() -> getAnchorV
    boolean isDraggable() -> isDraggable
    boolean isVisible() -> isVisible
    boolean isGps() -> isGps
    boolean isFlat() -> isFlat
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.MarkerOptionsCreator -> com.amap.api.maps.model.MarkerOptionsCreator:
    com.amap.api.maps.model.MarkerOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.MarkerOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.MyLocationStyle -> com.amap.api.maps.model.MyLocationStyle:
    com.amap.api.maps.model.BitmapDescriptor a -> a
    float b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    com.amap.api.maps.model.MyLocationStyle myLocationIcon(com.amap.api.maps.model.BitmapDescriptor) -> myLocationIcon
    com.amap.api.maps.model.MyLocationStyle anchor(float,float) -> anchor
    com.amap.api.maps.model.MyLocationStyle radiusFillColor(int) -> radiusFillColor
    com.amap.api.maps.model.MyLocationStyle strokeColor(int) -> strokeColor
    com.amap.api.maps.model.MyLocationStyle strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.BitmapDescriptor getMyLocationIcon() -> getMyLocationIcon
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    int getRadiusFillColor() -> getRadiusFillColor
    int getStrokeColor() -> getStrokeColor
    float getStrokeWidth() -> getStrokeWidth
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.MyLocationStyleCreator -> com.amap.api.maps.model.MyLocationStyleCreator:
    com.amap.api.maps.model.MyLocationStyle createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.MyLocationStyle[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.MyTrafficStyle -> com.amap.api.maps.model.MyTrafficStyle:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int getSmoothColor() -> getSmoothColor
    void setSmoothColor(int) -> setSmoothColor
    int getSlowColor() -> getSlowColor
    void setSlowColor(int) -> setSlowColor
    int getCongestedColor() -> getCongestedColor
    void setCongestedColor(int) -> setCongestedColor
    int getSeriousCongestedColor() -> getSeriousCongestedColor
    void setSeriousCongestedColor(int) -> setSeriousCongestedColor
com.amap.api.maps.model.NavigateArrow -> com.amap.api.maps.model.NavigateArrow:
    com.amap.api.mapcore.ab a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setTopColor(int) -> setTopColor
    int getTopColor() -> getTopColor
    void setSideColor(int) -> setSideColor
    int getSideColor() -> getSideColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.NavigateArrowOptions -> com.amap.api.maps.model.NavigateArrowOptions:
    com.amap.api.maps.model.NavigateArrowOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String a -> a
    com.amap.api.maps.model.NavigateArrowOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.NavigateArrowOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.NavigateArrowOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.NavigateArrowOptions width(float) -> width
    com.amap.api.maps.model.NavigateArrowOptions topColor(int) -> topColor
    com.amap.api.maps.model.NavigateArrowOptions sideColor(int) -> sideColor
    com.amap.api.maps.model.NavigateArrowOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.NavigateArrowOptions visible(boolean) -> visible
    java.util.List getPoints() -> getPoints
    float getWidth() -> getWidth
    int getTopColor() -> getTopColor
    int getSideColor() -> getSideColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.NavigateArrowOptionsCreator -> com.amap.api.maps.model.NavigateArrowOptionsCreator:
    com.amap.api.maps.model.NavigateArrowOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.NavigateArrowOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Polygon -> com.amap.api.maps.model.Polygon:
    com.amap.api.mapcore.ad a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.PolygonOptions -> com.amap.api.maps.model.PolygonOptions:
    com.amap.api.maps.model.PolygonOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String a -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.amap.api.maps.model.PolygonOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.PolygonOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.PolygonOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.PolygonOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.PolygonOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.PolygonOptions fillColor(int) -> fillColor
    com.amap.api.maps.model.PolygonOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.PolygonOptions visible(boolean) -> visible
    java.util.List getPoints() -> getPoints
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.PolygonOptionsCreator -> com.amap.api.maps.model.PolygonOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.PolygonOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.PolygonOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Polyline -> com.amap.api.maps.model.Polyline:
    com.amap.api.mapcore.ae a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    void setDottedLine(boolean) -> setDottedLine
    boolean isDottedLine() -> isDottedLine
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.amap.api.maps.model.LatLng getNearestLatLng(com.amap.api.maps.model.LatLng) -> getNearestLatLng
com.amap.api.maps.model.PolylineOptions -> com.amap.api.maps.model.PolylineOptions:
    com.amap.api.maps.model.PolylineOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    float e -> e
    boolean f -> f
    java.lang.String a -> a
    com.amap.api.maps.model.BitmapDescriptor g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    com.amap.api.maps.model.PolylineOptions setUseTexture(boolean) -> setUseTexture
    com.amap.api.maps.model.PolylineOptions setCustomTexture(com.amap.api.maps.model.BitmapDescriptor) -> setCustomTexture
    com.amap.api.maps.model.BitmapDescriptor getCustomTexture() -> getCustomTexture
    boolean isUseTexture() -> isUseTexture
    boolean isGeodesic() -> isGeodesic
    com.amap.api.maps.model.PolylineOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.PolylineOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.PolylineOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.PolylineOptions width(float) -> width
    com.amap.api.maps.model.PolylineOptions color(int) -> color
    com.amap.api.maps.model.PolylineOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.PolylineOptions visible(boolean) -> visible
    com.amap.api.maps.model.PolylineOptions geodesic(boolean) -> geodesic
    com.amap.api.maps.model.PolylineOptions setDottedLine(boolean) -> setDottedLine
    boolean isDottedLine() -> isDottedLine
    java.util.List getPoints() -> getPoints
    float getWidth() -> getWidth
    int getColor() -> getColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.PolylineOptionsCreator -> com.amap.api.maps.model.PolylineOptionsCreator:
    com.amap.api.maps.model.PolylineOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.PolylineOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.RuntimeRemoteException -> com.amap.api.maps.model.RuntimeRemoteException:
com.amap.api.maps.model.Tile -> com.amap.api.maps.model.Tile:
    com.amap.api.maps.model.a CREATOR -> CREATOR
    int a -> a
    int width -> width
    int height -> height
    byte[] data -> data
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.TileOverlay -> com.amap.api.maps.model.TileOverlay:
    com.amap.api.mapcore.ah a -> a
    void remove() -> remove
    void clearTileCache() -> clearTileCache
    java.lang.String getId() -> getId
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.TileOverlayOptions -> com.amap.api.maps.model.TileOverlayOptions:
    com.amap.api.maps.model.TileOverlayOptionsCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.TileProvider b -> b
    boolean c -> c
    float d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.amap.api.maps.model.TileOverlayOptions tileProvider(com.amap.api.maps.model.TileProvider) -> tileProvider
    com.amap.api.maps.model.TileOverlayOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.TileOverlayOptions visible(boolean) -> visible
    com.amap.api.maps.model.TileOverlayOptions memCacheSize(int) -> memCacheSize
    com.amap.api.maps.model.TileOverlayOptions diskCacheSize(int) -> diskCacheSize
    com.amap.api.maps.model.TileOverlayOptions diskCacheDir(java.lang.String) -> diskCacheDir
    com.amap.api.maps.model.TileOverlayOptions memoryCacheEnabled(boolean) -> memoryCacheEnabled
    com.amap.api.maps.model.TileOverlayOptions diskCacheEnabled(boolean) -> diskCacheEnabled
    com.amap.api.maps.model.TileProvider getTileProvider() -> getTileProvider
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int getMemCacheSize() -> getMemCacheSize
    int getDiskCacheSize() -> getDiskCacheSize
    java.lang.String getDiskCacheDir() -> getDiskCacheDir
    boolean getMemoryCacheEnabled() -> getMemoryCacheEnabled
    boolean getDiskCacheEnabled() -> getDiskCacheEnabled
com.amap.api.maps.model.TileOverlayOptionsCreator -> com.amap.api.maps.model.TileOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.TileOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.TileOverlayOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.TileProjection -> com.amap.api.maps.model.TileProjection:
    int offsetX -> offsetX
    int offsetY -> offsetY
    int minX -> minX
    int maxX -> maxX
    int minY -> minY
    int maxY -> maxY
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.TileProjectionCreator -> com.amap.api.maps.model.TileProjectionCreator:
    com.amap.api.maps.model.TileProjection createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.TileProjection[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.TileProvider -> com.amap.api.maps.model.TileProvider:
    com.amap.api.maps.model.Tile NO_TILE -> NO_TILE
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
com.amap.api.maps.model.UrlTileProvider -> com.amap.api.maps.model.UrlTileProvider:
    int a -> a
    int b -> b
    java.net.URL getTileUrl(int,int,int) -> getTileUrl
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    byte[] a(java.io.InputStream) -> a
    long a(java.io.InputStream,java.io.OutputStream) -> a
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
com.amap.api.maps.model.VisibleRegion -> com.amap.api.maps.model.VisibleRegion:
    com.amap.api.maps.model.VisibleRegionCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.LatLng nearLeft -> nearLeft
    com.amap.api.maps.model.LatLng nearRight -> nearRight
    com.amap.api.maps.model.LatLng farLeft -> farLeft
    com.amap.api.maps.model.LatLng farRight -> farRight
    com.amap.api.maps.model.LatLngBounds latLngBounds -> latLngBounds
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int a() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.maps.model.VisibleRegionCreator -> com.amap.api.maps.model.VisibleRegionCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.VisibleRegion createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.VisibleRegion[] newArray(int) -> newArray
    void a(com.amap.api.maps.model.VisibleRegion,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.a -> com.amap.api.maps.model.a:
    com.amap.api.maps.model.Tile a(android.os.Parcel) -> a
    com.amap.api.maps.model.Tile[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.City -> com.amap.api.maps.offlinemap.City:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setCity(java.lang.String) -> setCity
    java.lang.String getCity() -> getCity
    void setCode(java.lang.String) -> setCode
    java.lang.String getCode() -> getCode
    java.lang.String getJianpin() -> getJianpin
    void setJianpin(java.lang.String) -> setJianpin
    java.lang.String getPinyin() -> getPinyin
    void setPinyin(java.lang.String) -> setPinyin
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getAdcode() -> getAdcode
    void setAdcode(java.lang.String) -> setAdcode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineInitBean -> com.amap.api.maps.offlinemap.OfflineInitBean:
    boolean a -> a
    java.lang.String b -> b
    boolean isNeedUpdate() -> isNeedUpdate
    void setNeedUpdate(boolean) -> setNeedUpdate
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
com.amap.api.maps.offlinemap.OfflineMapCity -> com.amap.api.maps.offlinemap.OfflineMapCity:
    java.lang.String a -> a
    long b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    long getSize() -> getSize
    void setSize(long) -> setSize
    int getState() -> getState
    void setState(int) -> setState
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getcompleteCode() -> getcompleteCode
    void setCompleteCode(int) -> setCompleteCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineMapManager -> com.amap.api.maps.offlinemap.OfflineMapManager:
    java.lang.String c -> c
    java.lang.String d -> d
    com.amap.api.maps.offlinemap.d e -> e
    com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener f -> f
    java.util.concurrent.CopyOnWriteArrayList g -> g
    java.util.concurrent.CopyOnWriteArrayList h -> h
    java.util.concurrent.CopyOnWriteArrayList i -> i
    java.util.concurrent.CopyOnWriteArrayList j -> j
    android.content.Context k -> k
    boolean mIsStart -> mIsStart
    java.lang.String a -> a
    java.lang.String l -> l
    java.lang.String m -> m
    com.amap.api.maps.AMap n -> n
    int mMessageUpdateFile -> mMessageUpdateFile
    java.lang.String UPDATE_OFFLINE_FILE -> UPDATE_OFFLINE_FILE
    android.os.Handler b -> b
    void a(android.content.Context,com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener) -> a
    boolean downloadByCityCode(java.lang.String) -> downloadByCityCode
    boolean downloadByCityName(java.lang.String) -> downloadByCityName
    boolean downloadByProvinceName(java.lang.String) -> downloadByProvinceName
    boolean updateOfflineMapProvinceByName(java.lang.String) -> updateOfflineMapProvinceByName
    java.util.ArrayList getOfflineMapProvinceList() -> getOfflineMapProvinceList
    java.util.ArrayList getDownloadOfflineMapProvinceList() -> getDownloadOfflineMapProvinceList
    void restart() -> restart
    void stop() -> stop
    void pause() -> pause
    boolean remove(java.lang.String) -> remove
    void setStart(boolean) -> setStart
    boolean isStart() -> isStart
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    com.amap.api.maps.offlinemap.OfflineMapCity getItemByCityCode(java.lang.String) -> getItemByCityCode
    com.amap.api.maps.offlinemap.OfflineMapCity getItemByCityName(java.lang.String) -> getItemByCityName
    com.amap.api.maps.offlinemap.OfflineMapProvince getItemByProvinceName(java.lang.String) -> getItemByProvinceName
    java.util.ArrayList getOfflineMapCityList() -> getOfflineMapCityList
    java.util.ArrayList getDownloadingCityList() -> getDownloadingCityList
    java.util.ArrayList getDownloadingProvinceList() -> getDownloadingProvinceList
    boolean a(java.lang.String,java.lang.String) -> a
    boolean updateOfflineCityByCode(java.lang.String) -> updateOfflineCityByCode
    boolean updateOfflineCityByName(java.lang.String) -> updateOfflineCityByName
    java.util.List getDownloadOfflineMapCityList() -> getDownloadOfflineMapCityList
    void a() -> a
    void a(com.amap.api.maps.offlinemap.m) -> a
    void b(com.amap.api.maps.offlinemap.m) -> b
    boolean a(java.io.File) -> a
    void updateAllCity() -> updateAllCity
    void a(com.amap.api.maps.offlinemap.OfflineMapCity) -> a
    com.amap.api.maps.offlinemap.OfflineMapProvince b(com.amap.api.maps.offlinemap.OfflineMapCity) -> b
    com.amap.api.maps.offlinemap.OfflineMapCity a(com.amap.api.maps.offlinemap.OfflineMapProvince) -> a
    void b(com.amap.api.maps.offlinemap.OfflineMapProvince) -> b
    boolean c(com.amap.api.maps.offlinemap.OfflineMapCity) -> c
    boolean c(com.amap.api.maps.offlinemap.OfflineMapProvince) -> c
    void b() -> b
    void a(java.lang.Object,long,long) -> a
    boolean d(com.amap.api.maps.offlinemap.OfflineMapCity) -> d
    boolean d(com.amap.api.maps.offlinemap.OfflineMapProvince) -> d
    boolean b(java.lang.String,java.lang.String) -> b
    boolean c(java.lang.String,java.lang.String) -> c
    boolean d(java.lang.String,java.lang.String) -> d
    boolean e(java.lang.String,java.lang.String) -> e
    java.lang.String b(java.io.File) -> b
    int c(java.io.File) -> c
    com.amap.api.maps.offlinemap.OfflineMapCity c(com.amap.api.maps.offlinemap.m) -> c
    com.amap.api.maps.offlinemap.OfflineMapProvince d(com.amap.api.maps.offlinemap.m) -> d
    com.amap.api.maps.offlinemap.m d(java.io.File) -> d
    void c(java.lang.String) -> c
    boolean a(int,int) -> a
    boolean f(java.lang.String,java.lang.String) -> f
    void a(android.os.Message) -> a
    boolean d(java.lang.String) -> d
    void a(int,java.lang.String,java.lang.String,int) -> a
    void b(int,java.lang.String,java.lang.String,int) -> b
    com.amap.api.maps.offlinemap.d a(com.amap.api.maps.offlinemap.OfflineMapManager) -> a
    com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener b(com.amap.api.maps.offlinemap.OfflineMapManager) -> b
    void a(com.amap.api.maps.offlinemap.OfflineMapManager,android.os.Message) -> a
com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener -> com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener:
    void onDownload(int,int,java.lang.String) -> onDownload
com.amap.api.maps.offlinemap.OfflineMapProvince -> com.amap.api.maps.offlinemap.OfflineMapProvince:
    java.lang.String a -> a
    int b -> b
    long c -> c
    java.lang.String d -> d
    int e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    int getState() -> getState
    void setState(int) -> setState
    long getSize() -> getSize
    void setSize(long) -> setSize
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getcompleteCode() -> getcompleteCode
    void setCompleteCode(int) -> setCompleteCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineMapStatus -> com.amap.api.maps.offlinemap.OfflineMapStatus:
    int CHECKUPDATES -> CHECKUPDATES
    int ERROR -> ERROR
    int STOP -> STOP
    int LOADING -> LOADING
    int UNZIP -> UNZIP
    int WAITING -> WAITING
    int PAUSE -> PAUSE
    int SUCCESS -> SUCCESS
com.amap.api.maps.offlinemap.ProtocalHandler -> com.amap.api.maps.offlinemap.ProtocalHandler:
    java.net.Proxy proxy -> proxy
    java.lang.Object task -> task
    int maxTry -> maxTry
    java.lang.String recommandURL -> recommandURL
    void a(java.lang.Object,java.net.Proxy) -> a
    void setTask(java.lang.Object) -> setTask
    byte[] getProtoBufferRequest() -> getProtoBufferRequest
    java.lang.String getRequestString() -> getRequestString
    java.lang.Object loadData(java.io.InputStream) -> loadData
    java.lang.String getUrl() -> getUrl
    byte[] makeProtobufRequestBytes() -> makeProtobufRequestBytes
    java.lang.Object GetData() -> GetData
    java.lang.Object a() -> a
    java.io.InputStream sendRequest(java.net.HttpURLConnection) -> sendRequest
    java.lang.Object a(java.io.InputStream) -> a
    java.lang.Object onExceptionOccur() -> onExceptionOccur
    int getInt(java.io.InputStream) -> getInt
    java.lang.String getJsonString(org.json.JSONObject,java.lang.String) -> getJsonString
    boolean isNull(java.lang.String) -> isNull
    java.lang.String strEncoder(java.lang.String) -> strEncoder
    boolean isNullString(java.lang.String) -> isNullString
    int str2int(java.lang.String) -> str2int
    float str2float(java.lang.String) -> str2float
    long str2long(java.lang.String) -> str2long
    boolean str2boolean(java.lang.String) -> str2boolean
com.amap.api.maps.offlinemap.Province -> com.amap.api.maps.offlinemap.Province:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.ArrayList e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getProvinceName() -> getProvinceName
    java.lang.String getJianpin() -> getJianpin
    java.lang.String getPinyin() -> getPinyin
    void setProvinceName(java.lang.String) -> setProvinceName
    void setJianpin(java.lang.String) -> setJianpin
    void setPinyin(java.lang.String) -> setPinyin
    void setProvinceCode(java.lang.String) -> setProvinceCode
    java.lang.String getProvinceCode() -> getProvinceCode
    java.util.ArrayList getCityList() -> getCityList
    void setCityList(java.util.ArrayList) -> setCityList
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.a -> com.amap.api.maps.offlinemap.a:
    com.amap.api.maps.offlinemap.City a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.City[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.b -> com.amap.api.maps.offlinemap.b:
    java.io.RandomAccessFile a -> a
    int a(byte[],int,int) -> a
com.amap.api.maps.offlinemap.c -> com.amap.api.maps.offlinemap.c:
    java.lang.String a -> a
    long b -> b
    long c -> c
    int d -> d
    boolean e -> e
    boolean f -> f
    com.amap.api.maps.offlinemap.b g -> g
    java.net.HttpURLConnection h -> h
    java.io.InputStream i -> i
    int j -> j
    void run() -> run
    int a() -> a
    void b() -> b
com.amap.api.maps.offlinemap.d -> com.amap.api.maps.offlinemap.d:
    java.util.concurrent.CopyOnWriteArrayList a -> a
    java.util.concurrent.CopyOnWriteArrayList b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    java.util.concurrent.CopyOnWriteArrayList d -> d
    android.os.Handler f -> f
    android.os.Bundle g -> g
    java.lang.String h -> h
    android.content.Context i -> i
    com.amap.api.maps.offlinemap.k e -> e
    com.amap.api.maps.offlinemap.OfflineMapManager j -> j
    com.amap.api.maps.AMap k -> k
    java.lang.String a() -> a
    void a(int) -> a
    void b(int) -> b
    void e() -> e
    boolean a(com.amap.api.maps.offlinemap.m) -> a
    void b() -> b
    void c() -> c
    void a(java.io.File) -> a
    void b(java.io.File) -> b
    void a(java.lang.String) -> a
    void d() -> d
    void a(java.util.List) -> a
    void a(com.amap.api.maps.offlinemap.m,int,int) -> a
    android.os.Message b(com.amap.api.maps.offlinemap.m,int,int) -> b
    void b(com.amap.api.maps.offlinemap.m) -> b
com.amap.api.maps.offlinemap.e -> com.amap.api.maps.offlinemap.e:
    byte[] getProtoBufferRequest() -> getProtoBufferRequest
    java.lang.String getRequestString() -> getRequestString
    com.amap.api.maps.offlinemap.OfflineInitBean a(java.io.InputStream) -> a
    java.lang.String getUrl() -> getUrl
    java.lang.Object loadData(java.io.InputStream) -> loadData
com.amap.api.maps.offlinemap.f -> com.amap.api.maps.offlinemap.f:
    com.amap.api.maps.offlinemap.OfflineMapCity a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.OfflineMapCity[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.g -> com.amap.api.maps.offlinemap.g:
    com.amap.api.maps.offlinemap.OfflineMapManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.maps.offlinemap.h -> com.amap.api.maps.offlinemap.h:
    com.amap.api.maps.offlinemap.OfflineMapProvince a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.OfflineMapProvince[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.i -> com.amap.api.maps.offlinemap.i:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    byte[] getProtoBufferRequest() -> getProtoBufferRequest
    java.lang.String getRequestString() -> getRequestString
    java.util.List a(java.io.InputStream) -> a
    void a(java.lang.String) -> a
    long a() -> a
    java.lang.String getUrl() -> getUrl
    java.lang.Object loadData(java.io.InputStream) -> loadData
com.amap.api.maps.offlinemap.j -> com.amap.api.maps.offlinemap.j:
    com.amap.api.maps.offlinemap.Province a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.Province[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.k -> com.amap.api.maps.offlinemap.k:
    com.amap.api.maps.offlinemap.l a -> a
    long[] b -> b
    long[] c -> c
    com.amap.api.maps.offlinemap.c[] d -> d
    long e -> e
    boolean f -> f
    boolean g -> g
    java.io.File h -> h
    java.io.DataOutputStream i -> i
    com.amap.api.maps.offlinemap.d j -> j
    com.amap.api.maps.offlinemap.m k -> k
    android.content.Context l -> l
    android.os.Handler m -> m
    void run() -> run
    void c() -> c
    boolean d() -> d
    void a(java.util.ArrayList) -> a
    void e() -> e
    long a() -> a
    boolean f() -> f
    boolean g() -> g
    void a(int) -> a
    void b() -> b
com.amap.api.maps.offlinemap.l -> com.amap.api.maps.offlinemap.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
com.amap.api.maps.offlinemap.m -> com.amap.api.maps.offlinemap.m:
    int a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    long h -> h
    long i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    long b -> b
    boolean m -> m
    int n -> n
    java.lang.String o -> o
    void a() -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    java.lang.String e() -> e
    void c(java.lang.String) -> c
    java.lang.String f() -> f
    void d(java.lang.String) -> d
    long g() -> g
    void a(long) -> a
    void b(long) -> b
    void a(int) -> a
    void c(long) -> c
    long h() -> h
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    boolean i() -> i
    void b(int) -> b
    int j() -> j
    java.lang.String k() -> k
    void g(java.lang.String) -> g
    void l() -> l
com.amap.api.maps.offlinemap.n -> com.amap.api.maps.offlinemap.n:
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String a(java.lang.Throwable) -> a
    long a() -> a
    boolean b() -> b
    void b(int) -> b
    java.util.List c(java.lang.String) -> c
    com.amap.api.maps.offlinemap.OfflineMapProvince a(org.json.JSONObject) -> a
    java.util.ArrayList b(org.json.JSONObject) -> b
    com.amap.api.maps.offlinemap.OfflineMapCity c(org.json.JSONObject) -> c
    void a(java.io.File,java.io.File) -> a
    void b(java.io.File,java.io.File) -> b
    boolean a(java.io.File) -> a
com.amap.api.maps.offlinemap.o -> com.amap.api.maps.offlinemap.o:
    void a(java.util.zip.ZipInputStream,java.io.File,com.amap.api.maps.offlinemap.m,com.amap.api.maps.offlinemap.d) -> a
    boolean a(java.lang.String,java.lang.String,com.amap.api.maps.offlinemap.m,com.amap.api.maps.offlinemap.d) -> a
com.amap.api.maps.overlay.BusLineOverlay -> com.amap.api.maps.overlay.BusLineOverlay:
    com.amap.api.services.busline.BusLineItem a -> a
    com.amap.api.maps.AMap b -> b
    java.util.ArrayList c -> c
    com.amap.api.maps.model.Polyline d -> d
    java.util.List e -> e
    com.amap.api.maps.model.BitmapDescriptor f -> f
    com.amap.api.maps.model.BitmapDescriptor g -> g
    com.amap.api.maps.model.BitmapDescriptor h -> h
    android.content.Context i -> i
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void a() -> a
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds a(java.util.List) -> a
    com.amap.api.maps.model.MarkerOptions a(int) -> a
    com.amap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getSnippet(int) -> getSnippet
    int getBusStationIndex(com.amap.api.maps.model.Marker) -> getBusStationIndex
    com.amap.api.services.busline.BusStationItem getBusStationItem(int) -> getBusStationItem
    int getBusColor() -> getBusColor
    float getBuslineWidth() -> getBuslineWidth
    com.amap.api.maps.model.BitmapDescriptor a(java.lang.String) -> a
com.amap.api.maps.overlay.BusRouteOverlay -> com.amap.api.maps.overlay.BusRouteOverlay:
    com.amap.api.services.route.BusPath a -> a
    com.amap.api.maps.model.LatLng b -> b
    void addToMap() -> addToMap
    java.lang.String a(java.util.List) -> a
    void drawLineArrow(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> drawLineArrow
    java.lang.String a(com.amap.api.services.route.RouteBusLineItem) -> a
    float getBuslineWidth() -> getBuslineWidth
    com.amap.api.services.core.LatLonPoint a(com.amap.api.services.route.BusStep) -> a
    com.amap.api.services.core.LatLonPoint b(com.amap.api.services.route.BusStep) -> b
com.amap.api.maps.overlay.DrivingRouteOverlay -> com.amap.api.maps.overlay.DrivingRouteOverlay:
    com.amap.api.services.route.DrivePath a -> a
    java.util.List b -> b
    java.util.List c -> c
    boolean d -> d
    android.content.Context e -> e
    void addToMap() -> addToMap
    void a() -> a
    com.amap.api.maps.model.LatLngBounds getLatLngBounds() -> getLatLngBounds
    void setThroughPointIconVisibility(boolean) -> setThroughPointIconVisibility
    com.amap.api.maps.model.BitmapDescriptor b() -> b
    float getBuslineWidth() -> getBuslineWidth
    void removeFromMap() -> removeFromMap
com.amap.api.maps.overlay.PoiOverlay -> com.amap.api.maps.overlay.PoiOverlay:
    java.util.List a -> a
    com.amap.api.maps.AMap b -> b
    java.util.ArrayList c -> c
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds a() -> a
    com.amap.api.maps.model.MarkerOptions a(int) -> a
    com.amap.api.maps.model.BitmapDescriptor getBitmapDescriptor(int) -> getBitmapDescriptor
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getSnippet(int) -> getSnippet
    int getPoiIndex(com.amap.api.maps.model.Marker) -> getPoiIndex
    com.amap.api.services.core.PoiItem getPoiItem(int) -> getPoiItem
com.amap.api.maps.overlay.RouteOverlay -> com.amap.api.maps.overlay.RouteOverlay:
    java.util.List stationMarkers -> stationMarkers
    java.util.List allPolyLines -> allPolyLines
    com.amap.api.maps.model.Marker startMarker -> startMarker
    com.amap.api.maps.model.Marker endMarker -> endMarker
    com.amap.api.maps.model.LatLng startPoint -> startPoint
    com.amap.api.maps.model.LatLng endPoint -> endPoint
    com.amap.api.maps.AMap mAMap -> mAMap
    android.content.Context a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    boolean nodeIconVisible -> nodeIconVisible
    void removeFromMap() -> removeFromMap
    void a() -> a
    com.amap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getWalkBitmapDescriptor() -> getWalkBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getDriveBitmapDescriptor() -> getDriveBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor a(android.graphics.Bitmap,java.lang.String) -> a
    void addStartAndEndMarker() -> addStartAndEndMarker
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds getLatLngBounds() -> getLatLngBounds
    void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    int getWalkColor() -> getWalkColor
    int getBusColor() -> getBusColor
    int getDriveColor() -> getDriveColor
com.amap.api.maps.overlay.WalkRouteOverlay -> com.amap.api.maps.overlay.WalkRouteOverlay:
    com.amap.api.services.route.WalkPath a -> a
    void addToMap() -> addToMap
    float getBuslineWidth() -> getBuslineWidth
com.amap.api.maps.overlay.a -> com.amap.api.maps.overlay.a:
    int a -> a
    com.amap.api.maps.model.LatLng a(com.amap.api.services.core.LatLonPoint) -> a
    java.util.ArrayList a(java.util.List) -> a
com.amap.location.demo.FireManActivity -> com.amap.location.demo.FireManActivity:
    android.content.Context mContext -> k
    com.amap.api.maps.AMap aMap -> l
    com.amap.api.maps.MapView mapView -> m
    android.widget.EditText lengthThresholde -> n
    android.widget.EditText dtwThresholdeEditText -> o
    android.widget.EditText startPointThresholde -> p
    android.widget.Button confirmButton -> q
    android.widget.Button reviewbButton -> r
    android.widget.Button initButton -> s
    android.widget.Button calibrateButton -> t
    android.widget.TextView recordTextView -> u
    android.widget.TextView magneticdirectiontTextView -> v
    com.wzg.dingwei.BluetoothService bluetoothService -> a
    com.wzg.dingwei.BluetoothService232 bluetoothService232 -> b
    com.wzg.dingwei.DebugThread debugThread -> c
    com.amap.api.maps.model.GroundOverlay groundoverlay -> w
    boolean isStart -> x
    boolean initFlag -> d
    boolean isReview -> y
    java.lang.String tag -> z
    com.ict.wq.MagneticSampleTimer magneticSampleTimer -> A
    com.ict.wq.MagneticSampleTimerReview magneticSampleTimerReview -> B
    float startlatitude -> e
    float startlongitude -> f
    int count -> C
    java.lang.Thread GPSThread -> g
    com.ict.gpsmodule.GPSLocationService$GPSBinder gpsBinder -> D
    android.content.ServiceConnection connection -> E
    long lastTimeStamp -> h
    cn.ac.ict.ictips.locating.subPositioningEngines.LandMarkPositioningEngine.LandmarkLocationProvider landmarkLocationProvider -> F
    cn.ac.ict.ictips.locating.entity.PositioningResultListener positioningResultListenerLandMark -> i
    com.ict.userstate.StillStateJudger stillStateJudger -> G
    com.ict.gyroscopecalibrate.Calibrate calibrate -> H
    android.os.Handler myhandler -> j
    boolean isStart() -> a
    void setStart(boolean) -> a
    void setReview(boolean) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initview() -> b
    void addOverlayToMap() -> c
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void access$0(com.amap.location.demo.FireManActivity,com.ict.gpsmodule.GPSLocationService$GPSBinder) -> a
    int access$1(com.amap.location.demo.FireManActivity) -> a
    com.ict.gpsmodule.GPSLocationService$GPSBinder access$2(com.amap.location.demo.FireManActivity) -> b
    void access$3(com.amap.location.demo.FireManActivity,int) -> a
    android.content.Context access$4(com.amap.location.demo.FireManActivity) -> c
    android.widget.TextView access$5(com.amap.location.demo.FireManActivity) -> d
    android.widget.TextView access$6(com.amap.location.demo.FireManActivity) -> e
    android.widget.Button access$7(com.amap.location.demo.FireManActivity) -> f
    com.amap.api.maps.AMap access$8(com.amap.location.demo.FireManActivity) -> g
    com.amap.api.maps.MapView access$9(com.amap.location.demo.FireManActivity) -> h
    void access$10(com.amap.location.demo.FireManActivity,com.amap.api.maps.AMap) -> a
    android.widget.EditText access$11(com.amap.location.demo.FireManActivity) -> i
    android.widget.EditText access$12(com.amap.location.demo.FireManActivity) -> j
    android.widget.EditText access$13(com.amap.location.demo.FireManActivity) -> k
    com.ict.wq.MagneticSampleTimer access$14(com.amap.location.demo.FireManActivity) -> l
    com.ict.wq.MagneticSampleTimerReview access$15(com.amap.location.demo.FireManActivity) -> m
    void access$16(com.amap.location.demo.FireManActivity,com.ict.wq.MagneticSampleTimerReview) -> a
    void access$17(com.amap.location.demo.FireManActivity) -> n
com.amap.location.demo.FireManActivity$1 -> com.amap.location.demo.a:
    com.amap.location.demo.FireManActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    com.amap.location.demo.FireManActivity access$0(com.amap.location.demo.FireManActivity$1) -> a
com.amap.location.demo.FireManActivity$1$1 -> com.amap.location.demo.b:
    com.amap.location.demo.FireManActivity$1 this$1 -> a
    void run() -> run
com.amap.location.demo.FireManActivity$2 -> com.amap.location.demo.c:
    com.amap.location.demo.FireManActivity this$0 -> a
    void onLocationChanged(com.ict.wq.Coordinate) -> a
com.amap.location.demo.FireManActivity$3 -> com.amap.location.demo.d:
    com.amap.location.demo.FireManActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.amap.location.demo.FireManActivity access$0(com.amap.location.demo.FireManActivity$3) -> a
com.amap.location.demo.FireManActivity$3$1 -> com.amap.location.demo.e:
    com.amap.location.demo.FireManActivity$3 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.amap.location.demo.FireManActivity$4 -> com.amap.location.demo.f:
    com.amap.location.demo.FireManActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.amap.location.demo.FireManActivity$5 -> com.amap.location.demo.g:
    com.amap.location.demo.FireManActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.amap.location.demo.FireManActivity$6 -> com.amap.location.demo.h:
    com.amap.location.demo.FireManActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.amap.location.demo.FireManActivity$7 -> com.amap.location.demo.i:
    com.amap.location.demo.FireManActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.aps.a -> com.aps.a:
    android.content.Context e -> e
    int f -> f
    android.net.ConnectivityManager g -> g
    android.net.wifi.WifiManager h -> h
    android.telephony.TelephonyManager i -> i
    java.util.List j -> j
    java.util.List k -> k
    java.util.Map l -> l
    java.util.Map m -> m
    com.aps.b n -> n
    android.telephony.PhoneStateListener o -> o
    int p -> p
    com.aps.a$a q -> q
    android.net.wifi.WifiInfo r -> r
    org.json.JSONObject s -> s
    java.lang.String t -> t
    com.aps.c u -> u
    long v -> v
    boolean w -> w
    long x -> x
    long y -> y
    long z -> z
    com.aps.l A -> A
    int B -> B
    java.lang.String C -> C
    com.aps.y D -> D
    java.lang.StringBuilder E -> E
    long F -> F
    long G -> G
    android.telephony.CellLocation H -> H
    boolean I -> I
    java.util.TimerTask a -> a
    java.util.Timer b -> b
    com.aps.ag c -> c
    int d -> d
    void a(android.content.Context) -> a
    com.aps.c a() -> a
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(com.aps.j,android.app.PendingIntent) -> a
    void b(com.aps.j,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    void b() -> b
    void f() -> f
    void g() -> g
    void a(android.telephony.CellLocation) -> a
    boolean a(long) -> a
    java.lang.String h() -> h
    boolean a(android.net.wifi.WifiInfo) -> a
    boolean a(android.net.wifi.ScanResult) -> a
    java.lang.StringBuilder i() -> i
    byte[] a(java.lang.Object) -> a
    void a(java.util.List) -> a
    boolean a(int) -> a
    byte[] j() -> j
    boolean k() -> k
    boolean l() -> l
    boolean m() -> m
    com.aps.c a(byte[],boolean) -> a
    void a(java.lang.StringBuilder) -> a
    void b(int) -> b
    com.aps.e b(android.telephony.CellLocation) -> b
    com.aps.e a(android.telephony.NeighboringCellInfo) -> a
    void c(android.telephony.CellLocation) -> c
    void d(android.telephony.CellLocation) -> d
    void n() -> n
    void o() -> o
    boolean p() -> p
    void c() -> c
    void q() -> q
    void d() -> d
    void a(com.amap.api.location.AMapLocation) -> a
    void r() -> r
    boolean s() -> s
    com.aps.c t() -> t
    void u() -> u
    int a(boolean,int) -> a
    void c(int) -> c
    void v() -> v
    void w() -> w
    void d(int) -> d
    boolean e() -> e
    void x() -> x
    java.lang.String a(int,int,int) -> a
    boolean a(com.aps.a) -> a
    android.telephony.CellLocation a(com.aps.a,android.telephony.CellLocation) -> a
    long a(com.aps.a,long) -> a
    long b(com.aps.a,long) -> b
    int b(com.aps.a) -> b
    void a(com.aps.a,int) -> a
    java.util.List c(com.aps.a) -> c
    int b(com.aps.a,int) -> b
    android.net.wifi.WifiManager d(com.aps.a) -> d
    java.util.List a(com.aps.a,java.util.List) -> a
    long c(com.aps.a,long) -> c
    java.util.List e(com.aps.a) -> e
    void f(com.aps.a) -> f
    void g(com.aps.a) -> g
    int h(com.aps.a) -> h
    boolean a(com.aps.a,boolean) -> a
    boolean i(com.aps.a) -> i
    void c(com.aps.a,int) -> c
    void j(com.aps.a) -> j
com.aps.a$1 -> com.aps.a$1:
    com.aps.a a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
com.aps.a$2 -> com.aps.a$2:
    int a -> a
    com.aps.a b -> b
    void run() -> run
com.aps.a$a -> com.aps.a$a:
    com.aps.a a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.aa -> com.aps.aa:
    byte k -> k
    short l -> l
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    short d -> d
    short e -> e
    byte f -> f
    byte[] g -> g
    byte[] h -> h
    short i -> i
    java.util.ArrayList j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
    byte[] a() -> a
com.aps.ab -> com.aps.ab:
    com.aps.aa a(android.location.Location,com.aps.ak,int,byte,long,boolean) -> a
com.aps.ac -> com.aps.ac:
    byte c -> c
    byte a -> a
    java.util.ArrayList b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.ad -> com.aps.ad:
    byte a -> a
    byte[] b -> b
    double c -> c
    int d -> d
    int e -> e
    double f -> f
    byte g -> g
    byte h -> h
    byte[] i -> i
    byte j -> j
com.aps.ae -> com.aps.ae:
    byte c -> c
    byte a -> a
    java.util.ArrayList b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.af -> com.aps.af:
    byte[] a -> a
    short b -> b
    byte[] c -> c
com.aps.ag -> com.aps.ag:
    java.io.File a -> a
    java.util.ArrayList c -> c
    int[] b -> b
    boolean d -> d
    byte[] a() -> a
    void a(boolean) -> a
    boolean b() -> b
    int c() -> c
com.aps.ah -> com.aps.ah:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    byte[] a(byte[],int) -> a
    void a(int) -> a
    int a() -> a
    java.io.File a(long) -> a
    boolean b(long) -> b
    java.io.File b() -> b
    java.io.File d() -> d
    java.util.ArrayList a(java.io.File[]) -> a
    int e() -> e
    java.io.File f() -> f
    java.io.File c(long) -> c
    byte[] a(byte[]) -> a
    com.aps.aa a(android.location.Location,com.aps.ak,int,byte,long,boolean) -> a
    int a(int,int) -> a
    byte[] a(java.util.BitSet) -> a
    java.util.BitSet b(byte[]) -> b
    boolean c() -> c
    java.io.File a(android.content.Context) -> a
    java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.String,java.lang.Object[]) -> b
com.aps.ai -> com.aps.ai:
    byte g -> g
    int a -> a
    int b -> b
    short c -> c
    short d -> d
    int e -> e
    byte f -> f
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.aj -> com.aps.aj:
    short a -> a
    int b -> b
    byte c -> c
com.aps.ak -> com.aps.ak:
    android.content.Context a -> a
    android.telephony.TelephonyManager b -> b
    android.location.LocationManager c -> c
    android.net.wifi.WifiManager d -> d
    android.hardware.SensorManager e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    boolean i -> i
    int j -> j
    boolean k -> k
    long l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    int q -> q
    java.lang.String r -> r
    long s -> s
    long t -> t
    com.aps.ak u -> u
    com.aps.am v -> v
    com.aps.an w -> w
    android.telephony.CellLocation x -> x
    com.aps.ao y -> y
    java.util.List z -> z
    java.util.Timer A -> A
    java.lang.Thread B -> B
    android.os.Looper C -> C
    int D -> D
    com.aps.ak a(android.content.Context) -> a
    java.lang.String[] b(android.telephony.TelephonyManager) -> b
    void a() -> a
    void b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    java.util.List j() -> j
    java.util.List k() -> k
    byte l() -> l
    java.util.List m() -> m
    java.util.List n() -> n
    long o() -> o
    java.lang.String p() -> p
    int q() -> q
    int r() -> r
    int s() -> s
    java.lang.String t() -> t
    java.util.List a(float) -> a
    java.util.List b(float) -> b
    java.util.List u() -> u
    void v() -> v
    void w() -> w
    byte x() -> x
    java.lang.String a(int) -> a
    double b(int) -> b
    int c(int) -> c
    int d(int) -> d
    double e(int) -> e
    byte f(int) -> f
    java.lang.String g(int) -> g
    byte h(int) -> h
    boolean a(java.lang.Object) -> a
    int b(java.lang.Object) -> b
    void A() -> A
    void a(android.content.BroadcastReceiver) -> a
    void b(android.content.BroadcastReceiver) -> b
    void a(java.util.List) -> a
    boolean a(android.telephony.CellLocation) -> a
    int a(android.telephony.CellLocation,android.content.Context) -> a
    android.telephony.CellLocation B() -> B
    android.telephony.CellLocation b(java.util.List) -> b
    boolean c(android.content.Context) -> c
    android.content.Context y() -> y
    boolean b(android.content.Context) -> b
    android.os.Looper a(com.aps.ak,android.os.Looper) -> a
    java.util.Timer a(com.aps.ak,java.util.Timer) -> a
    com.aps.am a(com.aps.ak,com.aps.am) -> a
    com.aps.am a(com.aps.ak) -> a
    void a(com.aps.ak,android.telephony.PhoneStateListener) -> a
    com.aps.an a(com.aps.ak,com.aps.an) -> a
    com.aps.an b(com.aps.ak) -> b
    void a(com.aps.ak,android.location.GpsStatus$NmeaListener) -> a
    android.net.wifi.WifiManager c(com.aps.ak) -> c
    java.util.Timer d(com.aps.ak) -> d
    java.util.List e(com.aps.ak) -> e
    long a(com.aps.ak,long) -> a
    int z() -> z
    boolean a(com.aps.ak,boolean) -> a
    android.telephony.TelephonyManager f(com.aps.ak) -> f
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(com.aps.ak,int) -> a
    int b(com.aps.ak,int) -> b
    long b(com.aps.ak,long) -> b
    android.telephony.CellLocation a(com.aps.ak,android.telephony.CellLocation) -> a
    boolean g(com.aps.ak) -> g
    int c(com.aps.ak,int) -> c
    int h(com.aps.ak) -> h
    long c(com.aps.ak,long) -> c
    java.lang.String a(com.aps.ak,java.lang.String) -> a
com.aps.al -> com.aps.al:
    com.aps.ak a -> a
    void run() -> run
com.aps.am -> com.aps.am:
    com.aps.ak a -> a
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.aps.an -> com.aps.an:
    com.aps.ak a -> a
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
com.aps.ao -> com.aps.ao:
    com.aps.ak a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.ap -> com.aps.ap:
    com.aps.ao a -> a
    void run() -> run
com.aps.aq -> com.aps.aq:
    com.aps.y a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    boolean a(android.location.Location) -> a
com.aps.ar -> com.aps.ar:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.as -> com.aps.as:
    com.aps.y a -> a
    void run() -> run
com.aps.at -> com.aps.at:
    com.aps.as a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aps.au -> com.aps.au:
    long a -> a
    long b -> b
    boolean c -> c
    java.util.List d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.aps.y h -> h
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.aps.av -> com.aps.av:
    com.aps.y a -> a
    void run() -> run
com.aps.aw -> com.aps.aw:
    com.aps.y a -> a
    void a() -> a
com.aps.ax -> com.aps.ax:
    android.content.Context a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
    com.aps.aw k -> k
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    void a(int) -> a
    int f() -> f
    void b(int) -> b
    void a(com.aps.aw) -> a
    com.aps.ax a(android.content.Context) -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    byte[] c(int) -> c
    byte[] a(long) -> a
    int a(byte[],int) -> a
    long b(byte[],int) -> b
    void g() -> g
com.aps.ay -> com.aps.ay:
    int c -> c
    int d -> d
    com.aps.ak e -> e
    float f -> f
    com.aps.bc a -> a
    com.aps.az b -> b
    void a() -> a
    boolean a(android.location.Location) -> a
    void a(int) -> a
    void b(int) -> b
    boolean b(android.location.Location) -> b
com.aps.az -> com.aps.az:
    com.aps.ba a -> a
    android.location.Location b -> b
com.aps.b -> com.aps.b:
    java.lang.String a -> a
    javax.crypto.Cipher b -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    byte[] a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
com.aps.ba -> com.aps.ba:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
com.aps.bb -> com.aps.bb:
    java.lang.String a -> a
com.aps.bc -> com.aps.bc:
    java.util.List a -> a
    android.location.Location b -> b
com.aps.bd -> com.aps.bd:
    boolean a -> a
    java.lang.String[] b -> b
    boolean a(java.lang.String[],java.lang.String) -> a
com.aps.be -> com.aps.be:
    java.io.RandomAccessFile a -> a
    com.aps.ah b -> b
    java.io.File c -> c
    com.aps.ag a(int) -> a
    java.util.BitSet b() -> b
    java.util.ArrayList a(int,int) -> a
    byte a(byte[]) -> a
    int a(java.util.BitSet) -> a
    int a(int,int,int) -> a
    int a() -> a
    void a(com.aps.ag) -> a
com.aps.bf -> com.aps.bf:
    java.io.RandomAccessFile a -> a
    com.aps.ah b -> b
    java.lang.String c -> c
    java.io.File d -> d
    void a(long,byte[]) -> a
com.aps.bg -> com.aps.bg:
    java.lang.String a -> a
    boolean a(android.content.Context) -> a
    void a(java.lang.String) -> a
com.aps.c -> com.aps.c:
    java.lang.String a -> a
    double b -> b
    double c -> c
    float d -> d
    float e -> e
    float f -> f
    long g -> g
    com.amap.api.location.core.AMapLocException h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    org.json.JSONObject y -> y
    com.amap.api.location.core.AMapLocException a() -> a
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    double e() -> e
    void a(double) -> a
    double f() -> f
    void b(double) -> b
    float g() -> g
    void a(float) -> a
    long h() -> h
    void a(long) -> a
    java.lang.String i() -> i
    void g(java.lang.String) -> g
    java.lang.String j() -> j
    void h(java.lang.String) -> h
    java.lang.String k() -> k
    void i(java.lang.String) -> i
    java.lang.String l() -> l
    void j(java.lang.String) -> j
    java.lang.String m() -> m
    void k(java.lang.String) -> k
    java.lang.String n() -> n
    void l(java.lang.String) -> l
    java.lang.String o() -> o
    void m(java.lang.String) -> m
    java.lang.String p() -> p
    void n(java.lang.String) -> n
    java.lang.String q() -> q
    void o(java.lang.String) -> o
    java.lang.String r() -> r
    void p(java.lang.String) -> p
    java.lang.String s() -> s
    void q(java.lang.String) -> q
    org.json.JSONObject t() -> t
    void a(org.json.JSONObject) -> a
    java.lang.String u() -> u
com.aps.d -> com.aps.d:
    com.aps.d a -> a
    java.util.LinkedHashMap b -> b
    com.aps.p c -> c
    long d -> d
    java.io.File b(android.content.Context) -> b
    com.aps.d a(android.content.Context) -> a
    void a(java.lang.String,com.aps.c,java.lang.StringBuilder) -> a
    com.aps.c a(java.lang.String,java.lang.StringBuilder,java.lang.String) -> a
    boolean a(java.lang.String,com.aps.c) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    com.aps.d$a a(java.lang.String,java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.StringBuilder) -> a
    void a(java.lang.String,java.util.Hashtable) -> a
    double a(double[],double[]) -> a
com.aps.d$a -> com.aps.d$a:
    com.aps.c a -> a
    java.lang.String b -> b
    com.aps.c a() -> a
    void a(com.aps.c) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
com.aps.e -> com.aps.e:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
com.aps.f -> com.aps.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    long i -> i
    long j -> j
    boolean k -> k
    android.util.SparseArray l -> l
    java.lang.String[] m -> m
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(boolean) -> a
com.aps.g -> com.aps.g:
    java.util.regex.Pattern a -> a
    java.io.File c -> c
    java.io.File d -> d
    java.io.File e -> e
    java.io.File f -> f
    int g -> g
    long h -> h
    int i -> i
    long j -> j
    java.io.Writer k -> k
    java.util.LinkedHashMap l -> l
    int m -> m
    long n -> n
    java.util.concurrent.ThreadPoolExecutor b -> b
    java.util.concurrent.Callable o -> o
    java.io.OutputStream p -> p
    com.aps.g a(java.io.File,int,int,long) -> a
    void c() -> c
    void d(java.lang.String) -> d
    void d() -> d
    void e() -> e
    void a(java.io.File) -> a
    void a(java.io.File,java.io.File,boolean) -> a
    com.aps.g$c a(java.lang.String) -> a
    com.aps.g$a b(java.lang.String) -> b
    com.aps.g$a a(java.lang.String,long) -> a
    void a(com.aps.g$a,boolean) -> a
    boolean f() -> f
    boolean c(java.lang.String) -> c
    void g() -> g
    void close() -> close
    void h() -> h
    void a() -> a
    void e(java.lang.String) -> e
    java.io.Writer a(com.aps.g) -> a
    void b(com.aps.g) -> b
    boolean c(com.aps.g) -> c
    void d(com.aps.g) -> d
    int a(com.aps.g,int) -> a
    int e(com.aps.g) -> e
    java.io.File f(com.aps.g) -> f
    java.io.OutputStream b() -> b
    void a(com.aps.g,com.aps.g$a,boolean) -> a
com.aps.g$a -> com.aps.g$a:
    com.aps.g$b b -> b
    boolean[] c -> c
    boolean d -> d
    boolean e -> e
    com.aps.g a -> a
    java.io.OutputStream a(int) -> a
    void a() -> a
    void b() -> b
    com.aps.g$b a(com.aps.g$a) -> a
    boolean[] b(com.aps.g$a) -> b
    boolean a(com.aps.g$a,boolean) -> a
com.aps.g$a$a -> com.aps.g$a$a:
    com.aps.g$a a -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.aps.g$b -> com.aps.g$b:
    java.lang.String b -> b
    long[] c -> c
    boolean d -> d
    com.aps.g$a e -> e
    long f -> f
    com.aps.g a -> a
    java.lang.String a() -> a
    void a(java.lang.String[]) -> a
    java.io.IOException b(java.lang.String[]) -> b
    java.io.File a(int) -> a
    java.io.File b(int) -> b
    boolean a(com.aps.g$b,boolean) -> a
    com.aps.g$a a(com.aps.g$b,com.aps.g$a) -> a
    void a(com.aps.g$b,java.lang.String[]) -> a
    com.aps.g$a a(com.aps.g$b) -> a
    long[] b(com.aps.g$b) -> b
    java.lang.String c(com.aps.g$b) -> c
    boolean d(com.aps.g$b) -> d
    long e(com.aps.g$b) -> e
    long a(com.aps.g$b,long) -> a
com.aps.g$c -> com.aps.g$c:
    java.lang.String b -> b
    long c -> c
    java.io.InputStream[] d -> d
    long[] e -> e
    com.aps.g a -> a
    java.io.InputStream a(int) -> a
    void close() -> close
com.aps.h -> com.aps.h:
    com.aps.g a -> a
    java.lang.Void a() -> a
    java.lang.Object call() -> call
com.aps.i -> com.aps.i:
    void write(int) -> write
com.aps.j -> com.aps.j:
    double a -> a
    double b -> b
    float c -> c
    int d -> d
    long e -> e
    long a() -> a
    void a(long) -> a
    java.lang.String b() -> b
com.aps.k -> com.aps.k:
    void a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(com.amap.api.location.AMapLocation) -> a
    com.aps.c a() -> a
    void a(com.aps.j,android.app.PendingIntent) -> a
    void b(com.aps.j,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    void b() -> b
com.aps.l -> com.aps.l:
    com.aps.l a -> a
    com.aps.l a() -> a
    java.lang.String a(android.content.Context,java.lang.String,byte[],java.lang.String) -> a
    java.lang.String a(byte[],android.content.Context,org.json.JSONObject) -> a
    org.apache.http.client.HttpClient a(android.content.Context,android.net.NetworkInfo) -> a
    boolean a(java.lang.String,int) -> a
    int a(android.net.NetworkInfo) -> a
    java.lang.String a(android.telephony.TelephonyManager) -> a
    boolean a(org.apache.http.HttpResponse) -> a
    java.lang.String[] a(org.json.JSONObject) -> a
    java.lang.String b() -> b
    java.lang.String a(byte[],android.content.Context) -> a
com.aps.m -> com.aps.m:
    java.lang.String a(java.lang.String) -> a
    com.aps.c b(java.lang.String) -> b
com.aps.m$1 -> com.aps.m$1:
com.aps.m$a -> com.aps.m$a:
    com.aps.c a -> a
    java.lang.String b -> b
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.aps.m$b -> com.aps.m$b:
    java.lang.String a -> a
    boolean b -> b
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.aps.n -> com.aps.n:
    java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
com.aps.o -> com.aps.o:
    java.lang.String a -> a
    short b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    byte[] A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    byte[] a() -> a
    byte[] a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.lang.String,int) -> a
    void b() -> b
com.aps.p -> com.aps.p:
    java.util.List a -> a
    com.aps.g b -> b
    int c -> c
    com.aps.p a(java.io.File,int,long) -> a
    void a() -> a
    java.util.Map a(java.lang.String) -> a
    java.io.OutputStream a(java.lang.String,java.util.Map) -> a
    void b(java.lang.String,java.util.Map) -> b
    java.util.Map a(com.aps.g$c) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.aps.p$1 -> com.aps.p$1:
com.aps.p$a -> com.aps.p$a:
    com.aps.g$a a -> a
    boolean b -> b
    void close() -> close
    void flush() -> flush
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
com.aps.q -> com.aps.q:
    com.aps.q a -> a
    java.lang.String a(java.lang.Object,java.lang.String) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(int) -> a
    byte[] b(java.lang.String) -> b
    byte[] b(int) -> b
    byte[] a(long) -> a
com.aps.r -> com.aps.r:
    java.io.InputStream a -> a
    java.nio.charset.Charset b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    void close() -> close
    java.lang.String a() -> a
    void b() -> b
    java.nio.charset.Charset a(com.aps.r) -> a
com.aps.r$1 -> com.aps.r$1:
    com.aps.r a -> a
    java.lang.String toString() -> toString
com.aps.s -> com.aps.s:
    java.nio.charset.Charset a -> a
    java.nio.charset.Charset b -> b
    void a(java.io.File) -> a
    void a(java.io.Closeable) -> a
com.aps.t -> com.aps.t:
    void a(java.lang.Object[]) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(java.lang.Throwable) -> a
    boolean a(com.aps.c) -> a
    int a(int) -> a
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(android.telephony.CellLocation,android.content.Context) -> a
    long a() -> a
    boolean a(android.content.Context) -> a
    float a(double[]) -> a
    java.lang.Object b(android.content.Context,java.lang.String) -> b
    void a(org.apache.http.params.HttpParams,int) -> a
    int b() -> b
    byte[] a(byte[]) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
    boolean a(java.lang.String) -> a
com.aps.u -> com.aps.u:
    double[][] a -> a
    double[] a(double,double) -> a
    double a(double,double,double) -> a
com.aps.v -> com.aps.v:
    byte f -> f
    short a -> a
    int b -> b
    byte c -> c
    byte d -> d
    java.util.ArrayList e -> e
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.w -> com.aps.w:
    boolean a -> a
    java.lang.String b -> b
    boolean c -> c
    double d -> d
    double e -> e
    void d() -> d
    boolean a() -> a
    double b() -> b
    double c() -> c
com.aps.x -> com.aps.x:
    short a -> a
    int b -> b
    com.aps.z c -> c
    com.aps.v d -> d
    com.aps.ai e -> e
    com.aps.ae f -> f
    com.aps.ac g -> g
com.aps.y -> com.aps.y:
    boolean a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.Object i -> i
    com.aps.y j -> j
    boolean k -> k
    boolean l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    long q -> q
    android.content.Context r -> r
    android.location.LocationManager s -> s
    com.aps.ak t -> t
    com.aps.ay u -> u
    com.aps.bf v -> v
    com.aps.ah w -> w
    com.aps.be x -> x
    com.aps.ax y -> y
    com.aps.ab z -> z
    java.lang.Thread A -> A
    android.os.Looper B -> B
    com.aps.av C -> C
    android.location.Location D -> D
    com.aps.au E -> E
    android.os.Handler F -> F
    com.aps.aw G -> G
    android.location.LocationListener H -> H
    android.content.BroadcastReceiver I -> I
    android.location.GpsStatus J -> J
    int K -> K
    int L -> L
    java.util.HashMap M -> M
    int N -> N
    int O -> O
    float P -> P
    float Q -> Q
    float R -> R
    float S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    com.aps.y a(android.content.Context) -> a
    void a(int) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    com.aps.ag d() -> d
    void a(com.aps.ag,java.lang.String) -> a
    boolean e() -> e
    int f() -> f
    java.lang.String a(java.lang.String) -> a
    void n() -> n
    int a(java.util.HashMap) -> a
    double[] a(java.util.List) -> a
    void a(com.aps.y) -> a
    int g() -> g
    int h() -> h
    int i() -> i
    int j() -> j
    int k() -> k
    com.aps.ax b(com.aps.y) -> b
    long a(com.aps.y,long) -> a
    android.location.Location a(com.aps.y,android.location.Location) -> a
    boolean c(com.aps.y) -> c
    void a(com.aps.y,android.location.Location,int,long) -> a
    void a(com.aps.y,java.lang.String) -> a
    android.os.Looper a(com.aps.y,android.os.Looper) -> a
    com.aps.au a(com.aps.y,com.aps.au) -> a
    com.aps.au d(com.aps.y) -> d
    android.location.LocationManager e(com.aps.y) -> e
    android.os.Handler a(com.aps.y,android.os.Handler) -> a
    int l() -> l
    android.location.LocationListener f(com.aps.y) -> f
    android.location.Location g(com.aps.y) -> g
    int h(com.aps.y) -> h
    android.location.GpsStatus i(com.aps.y) -> i
    android.location.GpsStatus a(com.aps.y,android.location.GpsStatus) -> a
    int a(com.aps.y,int) -> a
    int b(com.aps.y,int) -> b
    java.util.HashMap a(com.aps.y,java.util.HashMap) -> a
    int m() -> m
    int j(com.aps.y) -> j
    int k(com.aps.y) -> k
    int c(com.aps.y,int) -> c
    com.aps.ak l(com.aps.y) -> l
    int d(com.aps.y,int) -> d
    java.util.HashMap m(com.aps.y) -> m
    int b(com.aps.y,java.util.HashMap) -> b
    android.os.Handler n(com.aps.y) -> n
    int e(com.aps.y,int) -> e
    int o(com.aps.y) -> o
    int a(com.aps.y,com.aps.w,int) -> a
    int p(com.aps.y) -> p
    java.lang.String b(com.aps.y,java.lang.String) -> b
com.aps.z -> com.aps.z:
    byte k -> k
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    short f -> f
    byte g -> g
    byte h -> h
    long i -> i
    long j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.autonavi.amap.mapcore.BaseMapCallImplement -> com.autonavi.amap.mapcore.BaseMapCallImplement:
    java.util.ArrayList baseMapGrids -> baseMapGrids
    java.util.ArrayList bldMapGrids -> bldMapGrids
    java.util.ArrayList bmpbmMapGirds -> bmpbmMapGirds
    java.util.ArrayList vectmcMapGirds -> vectmcMapGirds
    java.util.ArrayList stiMapGirds -> stiMapGirds
    java.util.ArrayList mapModels -> mapModels
    java.util.ArrayList screenGirds -> screenGirds
    com.autonavi.amap.mapcore.ConnectionManager connectionManager -> connectionManager
    com.autonavi.amap.mapcore.d tileProcessCtrl -> tileProcessCtrl
    com.autonavi.amap.mapcore.c connectionPool -> connectionPool
    void destory() -> destory
    void OnMapDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[]) -> OnMapDataRequired
    java.util.ArrayList getScreenGridList(int) -> getScreenGridList
    boolean isGridsInScreen(java.util.ArrayList,int) -> isGridsInScreen
    boolean isGridInList(com.autonavi.amap.mapcore.MapSourceGridData,java.util.ArrayList) -> isGridInList
    void proccessRequiredData(com.autonavi.amap.mapcore.MapCore,java.util.ArrayList,int) -> proccessRequiredData
    void sendMapDataRequest(com.autonavi.amap.mapcore.MapCore,java.util.ArrayList,int) -> sendMapDataRequest
    void OnMapSurfaceCreate(com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void OnMapDestory(com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    byte[] OnMapCharsWidthsRequired(com.autonavi.amap.mapcore.MapCore,int[],int,int) -> OnMapCharsWidthsRequired
    void OnMapLabelsRequired(com.autonavi.amap.mapcore.MapCore,int[],int) -> OnMapLabelsRequired
com.autonavi.amap.mapcore.ConnectionManager -> com.autonavi.amap.mapcore.ConnectionManager:
    com.autonavi.amap.mapcore.c connectionPool -> connectionPool
    int sleepTime -> sleepTime
    boolean threadFlag -> threadFlag
    int getTaskCount() -> getTaskCount
    void addConntionTask(com.autonavi.amap.mapcore.MapLoader) -> addConntionTask
    void insertConntionTask(com.autonavi.amap.mapcore.MapLoader) -> insertConntionTask
    void run() -> run
    boolean isEmptyTask() -> isEmptyTask
    void finalize() -> finalize
com.autonavi.amap.mapcore.Convert -> com.autonavi.amap.mapcore.Convert:
    int getInt(byte[],int) -> getInt
    short getShort(byte[],int) -> getShort
    int getUShort(byte[],int) -> getUShort
    boolean getBit(byte,int) -> getBit
    byte[] copyString(byte[],int,int) -> copyString
    byte[] covertBytes(byte) -> covertBytes
    byte[] convertInt(int) -> convertInt
    int getNum(byte,int,int) -> getNum
    int getNum(short,int,int) -> getNum
    byte[] convertShort(int) -> convertShort
    void writeInt(byte[],int,int) -> writeInt
    void writeShort(byte[],int,short) -> writeShort
    void moveArray(byte[],int,byte[],int,int) -> moveArray
    java.lang.String getString(byte[],int,int) -> getString
    byte[] getSubBytes(byte[],int,int) -> getSubBytes
    byte[] get1BString(java.lang.String) -> get1BString
    byte[] get2BString(java.lang.String) -> get2BString
    double convertDouble(byte[],int) -> convertDouble
    byte[] getDouble(double) -> getDouble
    void convert1bString(byte[],int,com.autonavi.amap.mapcore.a) -> convert1bString
    void convert2bString(byte[],int,com.autonavi.amap.mapcore.a) -> convert2bString
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.autonavi.amap.mapcore.DPoint -> com.autonavi.amap.mapcore.DPoint:
    double x -> x
    double y -> y
com.autonavi.amap.mapcore.ERROR_CODE -> com.autonavi.amap.mapcore.ERROR_CODE:
    int CONN_CREATE_FALSE -> CONN_CREATE_FALSE
    int CONN_ERROR -> CONN_ERROR
    int ERROR_NONE -> ERROR_NONE
com.autonavi.amap.mapcore.FPoint -> com.autonavi.amap.mapcore.FPoint:
    float x -> x
    float y -> y
com.autonavi.amap.mapcore.IBaseMapCallback -> com.autonavi.amap.mapcore.IBaseMapCallback:
    android.content.Context getContext() -> getContext
    boolean isMapEngineValid() -> isMapEngineValid
    void OnMapLoaderError(int) -> OnMapLoaderError
    java.lang.String getMapSvrAddress() -> getMapSvrAddress
com.autonavi.amap.mapcore.IMapCallback -> com.autonavi.amap.mapcore.IMapCallback:
    void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    void OnMapDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[]) -> OnMapDataRequired
    void OnMapLabelsRequired(com.autonavi.amap.mapcore.MapCore,int[],int) -> OnMapLabelsRequired
    void OnMapReferencechanged(com.autonavi.amap.mapcore.MapCore,java.lang.String,java.lang.String) -> OnMapReferencechanged
    byte[] OnMapCharsWidthsRequired(com.autonavi.amap.mapcore.MapCore,int[],int,int) -> OnMapCharsWidthsRequired
    void onSetParameter(com.autonavi.amap.mapcore.MapCore) -> onSetParameter
com.autonavi.amap.mapcore.IPoint -> com.autonavi.amap.mapcore.IPoint:
    int x -> x
    int y -> y
    java.lang.Object clone() -> clone
com.autonavi.amap.mapcore.MapCore -> com.autonavi.amap.mapcore.MapCore:
    int TEXTURE_ICON -> TEXTURE_ICON
    int TEXTURE_BACKGROUND -> TEXTURE_BACKGROUND
    int TEXTURE_ROADARROW -> TEXTURE_ROADARROW
    int TEXTURE_ROADROUND -> TEXTURE_ROADROUND
    int TEXTURE_TMC_RED -> TEXTURE_TMC_RED
    int TEXTURE_TMC_YELLOW -> TEXTURE_TMC_YELLOW
    int TEXTURE_TMC_GREEN -> TEXTURE_TMC_GREEN
    int TEXTURE_RAILWAY -> TEXTURE_RAILWAY
    int AM_DATA_BASEMAP -> AM_DATA_BASEMAP
    int AM_DATA_GEO_BUILDING -> AM_DATA_GEO_BUILDING
    int AM_DATA_BMP_BASEMAP -> AM_DATA_BMP_BASEMAP
    int AM_DATA_SATELLITE -> AM_DATA_SATELLITE
    int AM_DATA_VEC_TMC -> AM_DATA_VEC_TMC
    int AM_DATA_SCREEN -> AM_DATA_SCREEN
    int AM_DATA_MODEL -> AM_DATA_MODEL
    int MAPRENDER_ENTER -> MAPRENDER_ENTER
    int MAPRENDER_BASEMAPBEGIN -> MAPRENDER_BASEMAPBEGIN
    int MAPRENDER_BUILDINGBEGIN -> MAPRENDER_BUILDINGBEGIN
    int MAPRENDER_LABELSBEGIN -> MAPRENDER_LABELSBEGIN
    int MAPRENDER_RENDEROVER -> MAPRENDER_RENDEROVER
    int MAPRENDER_NOMORENEEDRENDER -> MAPRENDER_NOMORENEEDRENDER
    java.lang.Object mut_lock -> mut_lock
    android.view.View view -> view
    com.autonavi.amap.mapcore.IMapCallback mMapcallback -> mMapcallback
    int native_instance -> native_instance
    javax.microedition.khronos.opengles.GL10 mGL -> mGL
    void setGL(javax.microedition.khronos.opengles.GL10) -> setGL
    boolean isMapEngineValid() -> isMapEngineValid
    void setMapCallback(com.autonavi.amap.mapcore.IMapCallback) -> setMapCallback
    void surfaceCreate(javax.microedition.khronos.opengles.GL10) -> surfaceCreate
    byte[] OnMapCharsWidthsRequired(int[],int,int) -> OnMapCharsWidthsRequired
    void surfaceChange(javax.microedition.khronos.opengles.GL10,int,int) -> surfaceChange
    void drawFrame(javax.microedition.khronos.opengles.GL10) -> drawFrame
    void setStyleData(byte[],int) -> setStyleData
    void setInternaltexture(byte[],int) -> setInternaltexture
    int getInstanceHandle() -> getInstanceHandle
    com.autonavi.amap.mapcore.MapProjection getMapstate() -> getMapstate
    void setMapstate(com.autonavi.amap.mapcore.MapProjection) -> setMapstate
    void setParameter(int,int,int,int,int) -> setParameter
    void putMapData(byte[],int,int,int) -> putMapData
    void putCharbitmap(int,byte[]) -> putCharbitmap
    void OnMapSurfaceCreate() -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent() -> OnMapProcessEvent
    void OnMapDestory() -> OnMapDestory
    void OnMapDataRequired(int,java.lang.String[]) -> OnMapDataRequired
    void OnMapLabelsRequired(int[],int) -> OnMapLabelsRequired
    void OnMapReferencechanged(java.lang.String,java.lang.String) -> OnMapReferencechanged
    void destroy() -> destroy
    int nativeNewInstance(java.lang.String) -> nativeNewInstance
    void nativeDestroy(int,com.autonavi.amap.mapcore.MapCore) -> nativeDestroy
    void nativeSetStyleData(int,byte[],int) -> nativeSetStyleData
    void nativeSetInternaltexture(int,byte[],int) -> nativeSetInternaltexture
    void nativeSurfaceCreate(int,com.autonavi.amap.mapcore.MapCore) -> nativeSurfaceCreate
    void nativeSurfaceChange(int,com.autonavi.amap.mapcore.MapCore,int,int) -> nativeSurfaceChange
    void nativeSurfaceRenderMap(int,com.autonavi.amap.mapcore.MapCore) -> nativeSurfaceRenderMap
    void nativeSetMapstate(int,int) -> nativeSetMapstate
    int nativeGetMapstate(int) -> nativeGetMapstate
    void nativeSetparameter(int,int,int,int,int,int) -> nativeSetparameter
    void nativePutMapdata(int,int,byte[]) -> nativePutMapdata
    void nativePutCharbitmap(int,int,byte[]) -> nativePutCharbitmap
com.autonavi.amap.mapcore.MapLoader -> com.autonavi.amap.mapcore.MapLoader:
    com.autonavi.amap.mapcore.BaseMapCallImplement mMapCallback -> mMapCallback
    com.autonavi.amap.mapcore.MapCore mMapCore -> mMapCore
    java.util.ArrayList mapTiles -> mapTiles
    boolean mCanceled -> mCanceled
    long createtime -> createtime
    byte[] recievedDataBuffer -> recievedDataBuffer
    int recievedDataSize -> recievedDataSize
    int nextImgDataLength -> nextImgDataLength
    boolean recievedHeader -> recievedHeader
    int datasource -> datasource
    void destory() -> destory
    java.lang.String getGridParma() -> getGridParma
    void OnException(int) -> OnException
    void doRequest() -> doRequest
    boolean isRequestValid() -> isRequestValid
    void onConnectionError(com.autonavi.amap.mapcore.MapLoader,int,java.lang.String) -> onConnectionError
    void onConnectionOpened(com.autonavi.amap.mapcore.MapLoader) -> onConnectionOpened
    void addReuqestTiles(com.autonavi.amap.mapcore.MapSourceGridData) -> addReuqestTiles
    void onConnectionOver(com.autonavi.amap.mapcore.MapLoader) -> onConnectionOver
    void onConnectionRecieveData(com.autonavi.amap.mapcore.MapLoader,int,byte[],int) -> onConnectionRecieveData
    void processRecivedData() -> processRecivedData
    void processRecivedTileData(byte[],int,int) -> processRecivedTileData
    void processRecivedTileDataBmp(byte[],int,int) -> processRecivedTileDataBmp
    void processRecivedTileDataVTmc(byte[],int,int) -> processRecivedTileDataVTmc
    void processRecivedModels(byte[],int,int) -> processRecivedModels
com.autonavi.amap.mapcore.MapProjection -> com.autonavi.amap.mapcore.MapProjection:
    int native_instance -> native_instance
    boolean m_bNewInstance -> m_bNewInstance
    void finalize() -> finalize
    int getInstanceHandle() -> getInstanceHandle
    void getBound(com.autonavi.amap.mapcore.IPoint) -> getBound
    void setGeoCenter(int,int) -> setGeoCenter
    void getGeoCenter(com.autonavi.amap.mapcore.IPoint) -> getGeoCenter
    void setMapCenter(float,float) -> setMapCenter
    void getMapCenter(com.autonavi.amap.mapcore.FPoint) -> getMapCenter
    void setMapZoomer(float) -> setMapZoomer
    float getMapZoomer() -> getMapZoomer
    void setMapAngle(float) -> setMapAngle
    float getMapAngle() -> getMapAngle
    void setCameraHeaderAngle(float) -> setCameraHeaderAngle
    float getCameraHeaderAngle() -> getCameraHeaderAngle
    void geo2Map(int,int,com.autonavi.amap.mapcore.FPoint) -> geo2Map
    void map2Win(float,float,com.autonavi.amap.mapcore.IPoint) -> map2Win
    void win2Map(int,int,com.autonavi.amap.mapcore.FPoint) -> win2Map
    float getMapLenWithWinbyY(int,int) -> getMapLenWithWinbyY
    float getMapLenWithWin(int) -> getMapLenWithWin
    float getMapLenWithGeo(int) -> getMapLenWithGeo
    void recalculate() -> recalculate
    void map2Geo(float,float,com.autonavi.amap.mapcore.IPoint) -> map2Geo
    void setCenterWithMap(float,float) -> setCenterWithMap
    void getCenterMap(com.autonavi.amap.mapcore.FPoint) -> getCenterMap
    void lonlat2Geo(double,double,com.autonavi.amap.mapcore.IPoint) -> lonlat2Geo
    void geo2LonLat(int,int,com.autonavi.amap.mapcore.DPoint) -> geo2LonLat
    int nativeCreate(int) -> nativeCreate
    void nativeDestroy(int) -> nativeDestroy
    void nativeGetBound(int,com.autonavi.amap.mapcore.IPoint) -> nativeGetBound
    void nativeSetGeoCenter(int,int,int) -> nativeSetGeoCenter
    void nativeGetGeoCenter(int,com.autonavi.amap.mapcore.IPoint) -> nativeGetGeoCenter
    void nativeSetMapCenter(int,float,float) -> nativeSetMapCenter
    void nativeGetMapCenter(int,com.autonavi.amap.mapcore.FPoint) -> nativeGetMapCenter
    void nativeSetMapZoomer(int,float) -> nativeSetMapZoomer
    float nativeGetMapZoomer(int) -> nativeGetMapZoomer
    void nativeSetMapAngle(int,float) -> nativeSetMapAngle
    float nativeGetMapAngle(int) -> nativeGetMapAngle
    void nativeSetCameraHeaderAngle(int,float) -> nativeSetCameraHeaderAngle
    float nativeGetCameraHeaderAngle(int) -> nativeGetCameraHeaderAngle
    void nativeGeo2Map(int,int,int,com.autonavi.amap.mapcore.FPoint) -> nativeGeo2Map
    void nativeMap2Win(int,float,float,com.autonavi.amap.mapcore.IPoint) -> nativeMap2Win
    void nativeWin2Map(int,int,int,com.autonavi.amap.mapcore.FPoint) -> nativeWin2Map
    float nativeGetMapLenWithWinbyY(int,int,int) -> nativeGetMapLenWithWinbyY
    float nativeGetMapLenWithWin(int,int) -> nativeGetMapLenWithWin
    void nativeMap2Geo(int,float,float,com.autonavi.amap.mapcore.IPoint) -> nativeMap2Geo
    void nativeSetCenterWithMap(int,float,float) -> nativeSetCenterWithMap
    void nativeGetCenterMap(int,com.autonavi.amap.mapcore.FPoint) -> nativeGetCenterMap
    void nativeLonLat2Geo(double,double,com.autonavi.amap.mapcore.IPoint) -> nativeLonLat2Geo
    void nativeGeo2LonLat(int,int,com.autonavi.amap.mapcore.DPoint) -> nativeGeo2LonLat
    float nativeGetMapLenWithGeo(int,int) -> nativeGetMapLenWithGeo
    void nativeRecalculate(int) -> nativeRecalculate
com.autonavi.amap.mapcore.MapSourceGridData -> com.autonavi.amap.mapcore.MapSourceGridData:
    java.lang.String gridName -> gridName
    int sourceType -> sourceType
    java.lang.String getKeyGridName() -> getKeyGridName
    int getSourceType() -> getSourceType
    java.lang.String getGridName() -> getGridName
com.autonavi.amap.mapcore.TextTextureGenerator -> com.autonavi.amap.mapcore.TextTextureGenerator:
    android.graphics.Paint paint -> paint
    int TEXT_FONTSIZE -> TEXT_FONTSIZE
    int AN_LABEL_MAXCHARINLINE -> AN_LABEL_MAXCHARINLINE
    int AN_LABEL_MULITYLINE_SPAN -> AN_LABEL_MULITYLINE_SPAN
    float base_line -> base_line
    float start_x -> start_x
    int ALIGNCENTER -> ALIGNCENTER
    int ALIGNLEFT -> ALIGNLEFT
    int ALIGNRIGHT -> ALIGNRIGHT
    int GetNearstSize2N(int) -> GetNearstSize2N
    android.graphics.Paint newPaint(java.lang.String,int,int) -> newPaint
    byte[] getTextPixelBuffer(int) -> getTextPixelBuffer
    byte[] getPixels(android.graphics.Bitmap) -> getPixels
    byte[] getCharsWidths(int[]) -> getCharsWidths
    byte[] getCharWidths() -> getCharWidths
com.autonavi.amap.mapcore.VTMCDataCache -> com.autonavi.amap.mapcore.VTMCDataCache:
    int MAXSIZE -> MAXSIZE
    int MAX_EXPIREDTIME -> MAX_EXPIREDTIME
    java.util.Hashtable vtmcHs -> vtmcHs
    java.util.ArrayList vtmcList -> vtmcList
    com.autonavi.amap.mapcore.VTMCDataCache instance -> instance
    com.autonavi.amap.mapcore.VTMCDataCache getInstance() -> getInstance
    void reset() -> reset
    com.autonavi.amap.mapcore.e GetData(java.lang.String) -> GetData
    void putData(java.lang.String,byte[]) -> putData
com.autonavi.amap.mapcore.a -> com.autonavi.amap.mapcore.a:
    int a -> a
    java.lang.String b -> b
com.autonavi.amap.mapcore.b -> com.autonavi.amap.mapcore.b:
com.autonavi.amap.mapcore.c -> com.autonavi.amap.mapcore.c:
    int a -> a
    void a(java.lang.Object) -> a
    java.lang.Object a() -> a
    boolean b() -> b
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.autonavi.amap.mapcore.d -> com.autonavi.amap.mapcore.d:
    java.util.Hashtable a -> a
    void a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
com.autonavi.amap.mapcore.e -> com.autonavi.amap.mapcore.e:
    byte[] a -> a
    java.lang.String b -> b
    int c -> c
com.golshadi.orientationSensor.math.Matrix3x3 -> com.a.a.a.a:
    float[] multiplication(float[],float[]) -> a
com.golshadi.orientationSensor.responseProvider.orientationResponseProvider -> com.a.a.b.a:
    java.util.ArrayList sensorValueLog -> a
    java.util.ArrayList tolerance -> b
    org.json.JSONObject response -> c
    com.golshadi.orientationSensor.utils.OrientationSensorInterface observer -> d
    void init(java.lang.Double,java.lang.Double,java.lang.Double) -> a
    void dispatcher(float[]) -> a
com.golshadi.orientationSensor.sensors.Orientation -> com.a.a.c.a:
    com.golshadi.orientationSensor.sensors.accelerometer accSensro -> b
    com.golshadi.orientationSensor.sensors.gyroscope gySensor -> c
    com.golshadi.orientationSensor.sensors.magnetic mgSensor -> d
    android.os.Handler orientationHandler -> e
    com.golshadi.orientationSensor.responseProvider.orientationResponseProvider responseProvider -> f
    float timestamp -> g
    boolean initState -> h
    java.util.Timer fuseTimer -> i
    float[] rotationMatrix -> j
    float[] accMagOrientation -> k
    float[] fusedOrientation -> l
    float[] accel -> m
    float[] gyro -> n
    float[] gyroMatrix -> o
    float[] gyroOrientation -> p
    float[] magnet -> q
    java.lang.Runnable updateOrientationValueTask -> a
    void init(java.lang.Double,java.lang.Double,java.lang.Double) -> a
    boolean isSupport() -> a
    void on(int) -> a
    void update(java.util.Observable,java.lang.Object) -> update
    void updateValues() -> b
    void calculateAccMagOrientation() -> c
    void gyroFunction(android.hardware.SensorEvent) -> a
    float[] getRotationMatrixFromOrientation(float[]) -> a
    void getRotationVectorFromGyro(float[],float[],float) -> a
    float[] access$0(com.golshadi.orientationSensor.sensors.Orientation) -> a
    float[] access$1(com.golshadi.orientationSensor.sensors.Orientation) -> b
    float[] access$2(com.golshadi.orientationSensor.sensors.Orientation) -> c
    float[] access$3(com.golshadi.orientationSensor.sensors.Orientation,float[]) -> a
    void access$4(com.golshadi.orientationSensor.sensors.Orientation,float[]) -> b
    android.os.Handler access$5(com.golshadi.orientationSensor.sensors.Orientation) -> d
com.golshadi.orientationSensor.sensors.Orientation$1 -> com.a.a.c.b:
    com.golshadi.orientationSensor.sensors.Orientation this$0 -> a
    void run() -> run
com.golshadi.orientationSensor.sensors.Orientation$calculateFusedOrientationTask -> com.a.a.c.c:
    com.golshadi.orientationSensor.sensors.Orientation this$0 -> a
    void run() -> run
com.golshadi.orientationSensor.sensors.accelerometer -> com.a.a.c.d:
    android.hardware.SensorManager sensorManager -> a
    android.hardware.Sensor accelerometerSensor -> b
    android.hardware.SensorEvent event -> c
    boolean isSupport() -> a
    void on(int) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    android.hardware.SensorEvent getEvent() -> b
com.golshadi.orientationSensor.sensors.gyroscope -> com.a.a.c.e:
    android.hardware.SensorManager sensorManager -> a
    android.hardware.Sensor gyroscopeSensor -> b
    android.hardware.SensorEvent event -> c
    boolean isSupport() -> a
    void on(int) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    android.hardware.SensorEvent getEvent() -> b
com.golshadi.orientationSensor.sensors.magnetic -> com.a.a.c.f:
    android.hardware.SensorManager sensorManager -> a
    android.hardware.Sensor magneticSensor -> b
    android.hardware.SensorEvent event -> c
    boolean isSupport() -> a
    void on(int) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    android.hardware.SensorEvent getEvent() -> b
com.golshadi.orientationSensor.utils.OrientationSensorInterface -> com.a.a.d.a:
    void orientation(java.lang.Double,java.lang.Double,java.lang.Double) -> a
com.ict.fastDTW.dtw.DTW -> com.ict.a.a.a:
    double VERTICAL_WEIGHT_INCREASEMENT -> a
    double HORIZONTAL_WEIGHT_INCREASEMENT -> b
    double DIAGONAL_WEIGHT_INCREASEMENT -> c
    com.ict.fastDTW.dtw.TimeWarpInfo getWarpInfoBetween(com.ict.fastDTW.timeseries.TimeSeries,com.ict.fastDTW.timeseries.TimeSeries,com.ict.fastDTW.util.DistanceFunction) -> a
    com.ict.fastDTW.dtw.TimeWarpInfo DynamicTimeWarp(com.ict.fastDTW.timeseries.TimeSeries,com.ict.fastDTW.timeseries.TimeSeries,com.ict.fastDTW.util.DistanceFunction) -> c
    com.ict.fastDTW.dtw.TimeWarpInfo getWarpInfoBetweenWithWeight(com.ict.fastDTW.timeseries.TimeSeries,com.ict.fastDTW.timeseries.TimeSeries,com.ict.fastDTW.util.DistanceFunction) -> b
    com.ict.fastDTW.dtw.TimeWarpInfo DynamicTimeWarpWithWeight(com.ict.fastDTW.timeseries.TimeSeries,com.ict.fastDTW.timeseries.TimeSeries,com.ict.fastDTW.util.DistanceFunction) -> d
    com.ict.fastDTW.dtw.WarpPath getRecordWarpPath(int,int,int,int[][]) -> a
com.ict.fastDTW.dtw.DTWWeight -> com.ict.a.a.b:
    double horizontal -> a
    double vertical -> b
    double diagonal -> c
com.ict.fastDTW.dtw.TimeWarpInfo -> com.ict.a.a.c:
    double distance -> a
    com.ict.fastDTW.dtw.WarpPath path -> b
    double getDistance() -> a
    com.ict.fastDTW.dtw.WarpPath getPath() -> b
    java.lang.String toString() -> toString
com.ict.fastDTW.dtw.WarpPath -> com.ict.a.a.d:
    java.util.ArrayList tsIindexes -> a
    java.util.ArrayList tsJindexes -> b
    int size() -> a
    int minJ() -> b
    int maxI() -> c
    int maxJ() -> d
    void addFirst(int,int) -> a
    java.util.ArrayList getMatchingIndexesForI(int) -> a
    com.ict.fastDTW.matrix.ColMajorCell get(int) -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.ict.fastDTW.matrix.ColMajorCell -> com.ict.a.b.a:
    int col -> a
    int row -> b
    int getCol() -> a
    int getRow() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.ict.fastDTW.timeseries.TimeSeries -> com.ict.a.c.a:
    int[] ZERO_ARRAY -> a
    java.util.ArrayList labels -> b
    java.util.ArrayList timeReadings -> c
    java.util.ArrayList tsArray -> d
    int size() -> a
    double[] getMeasurementVector(int) -> a
    java.lang.String toString() -> toString
com.ict.fastDTW.timeseries.TimeSeriesPoint -> com.ict.a.c.b:
    double[] measurements -> a
    int hashCode -> b
    double get(int) -> a
    double[] toArray() -> a
    int size() -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.ict.fastDTW.util.BinaryDistance -> com.ict.a.d.a:
    double calcDistance(double[],double[]) -> a
com.ict.fastDTW.util.DistanceFunction -> com.ict.a.d.b:
    double calcDistance(double[],double[]) -> a
com.ict.fastDTW.util.DistanceFunctionFactory -> com.ict.a.d.c:
    com.ict.fastDTW.util.DistanceFunction EUCLIDEAN_DIST_FN -> a
    com.ict.fastDTW.util.DistanceFunction MANHATTAN_DIST_FN -> b
    com.ict.fastDTW.util.DistanceFunction BINARY_DIST_FN -> c
    com.ict.fastDTW.util.DistanceFunction getDistFnByName(java.lang.String) -> a
com.ict.fastDTW.util.EuclideanDistance -> com.ict.a.d.d:
    double calcDistance(double[],double[]) -> a
com.ict.fastDTW.util.ManhattanDistance -> com.ict.a.d.e:
    double calcDistance(double[],double[]) -> a
com.ict.gpsmodule.Constant -> com.ict.gpsmodule.a:
    java.lang.String[] TEST_POINT_NAME -> a
    double[] TEST_POINT_LONGITUDE -> b
    double[] TEST_POINT_LATITUDE -> c
    java.lang.String[] CORRECT_MODE_NAME -> d
    int[] CORRECT_MODE_NUMBER -> e
    com.ict.gpsmodule.Coordinator northEastCorner -> f
    com.ict.gpsmodule.Coordinator southEastCorner -> g
    com.ict.gpsmodule.Coordinator southWestCorner -> h
    com.ict.gpsmodule.Coordinator northWestCorner -> i
    com.ict.gpsmodule.Coordinator northEast -> j
    com.ict.gpsmodule.Coordinator southEast -> k
    com.ict.gpsmodule.Coordinator southWest -> l
    com.ict.gpsmodule.Coordinator northWest -> m
    com.ict.gpsmodule.Coordinator[] points -> n
    com.ict.gpsmodule.Vector[] northEdgeVector -> o
    com.ict.gpsmodule.Vector[] eastEdgeVector -> p
    com.ict.gpsmodule.Vector[] southEdgeVector -> q
    com.ict.gpsmodule.Vector[] westEdgeVector -> r
    com.ict.gpsmodule.Vector[] edgeVector -> s
com.ict.gpsmodule.CoordinateTransformer -> com.ict.gpsmodule.b:
    com.ict.gpsmodule.Coordinator gps2google(com.ict.gpsmodule.Coordinator) -> a
    double transformLat(double,double) -> a
    double transformLon(double,double) -> b
com.ict.gpsmodule.Coordinator -> com.ict.gpsmodule.c:
    double lon -> a
    double lat -> b
com.ict.gpsmodule.GPSLocationService -> com.ict.gpsmodule.GPSLocationService:
    android.content.Context context -> a
    com.ict.gpsmodule.GPSLocationService$GPSBinder gpsBinder -> o
    android.location.Location lastLocation -> b
    android.location.LocationManager locationManager -> c
    com.ict.gpsmodule.Coordinator centerOfBuilding -> d
    com.ict.gpsmodule.Coordinator averageLocation -> e
    com.ict.gpsmodule.TimeCoordinator locationTemp -> f
    android.location.LocationListener locationListener -> g
    android.location.GpsStatus$Listener gpsStatusListener -> h
    java.util.ArrayList locationList -> i
    long startTime -> j
    boolean isUsable -> k
    boolean isUpdated -> l
    int countLocation -> m
    int satelliteNumber -> n
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void initial() -> a
    void setListener() -> b
    void removeListener() -> c
    boolean isLocationIdentical(android.location.Location,android.location.Location) -> a
    com.ict.gpsmodule.Coordinator getIntersectionPoint(com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator) -> a
    com.ict.gpsmodule.Coordinator getIntersectionPointWithBuildingEdge(com.ict.gpsmodule.Coordinator) -> a
    boolean isIntersectant(com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator) -> b
    com.ict.gpsmodule.Coordinator getVerticalPointOnBuildingEdge(com.ict.gpsmodule.Coordinator) -> b
    double getPointDistanceToSegment(com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator) -> a
    com.ict.gpsmodule.Coordinator getVerticalPoint(com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator) -> b
    boolean isBetween(com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator,com.ict.gpsmodule.Coordinator) -> a
    boolean access$0(com.ict.gpsmodule.GPSLocationService,android.location.Location,android.location.Location) -> a
    com.ict.gpsmodule.Coordinator access$1(com.ict.gpsmodule.GPSLocationService,com.ict.gpsmodule.Coordinator) -> a
com.ict.gpsmodule.GPSLocationService$1 -> com.ict.gpsmodule.d:
    com.ict.gpsmodule.GPSLocationService this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.ict.gpsmodule.GPSLocationService$2 -> com.ict.gpsmodule.e:
    com.ict.gpsmodule.GPSLocationService this$0 -> a
    void onGpsStatusChanged(int) -> onGpsStatusChanged
com.ict.gpsmodule.GPSLocationService$GPSBinder -> com.ict.gpsmodule.f:
    com.ict.gpsmodule.GPSLocationService this$0 -> a
    boolean isGPSUsable() -> a
    boolean isGPSOpen() -> b
com.ict.gpsmodule.TimeCoordinator -> com.ict.gpsmodule.g:
    long time -> c
    java.lang.String toString() -> toString
com.ict.gpsmodule.Vector -> com.ict.gpsmodule.h:
    double x -> a
    double y -> b
    com.ict.gpsmodule.Coordinator endPoint1 -> c
    com.ict.gpsmodule.Coordinator endPoint2 -> d
    double getCrossProductZ(com.ict.gpsmodule.Vector) -> a
    double dotProduct(com.ict.gpsmodule.Vector) -> b
    double getMold() -> a
com.ict.gyroscopecalibrate.Calibrate -> com.ict.b.a:
    java.util.ArrayList MRMpairList -> a
    com.ict.gyroscopecalibrate.Point NoSmoothingcenter -> b
    com.ict.gyroscopecalibrate.Point Smoothingcenter -> c
    com.ict.gyroscopecalibrate.Point bCenter -> d
com.ict.gyroscopecalibrate.MeanFilterSmoothing -> com.ict.b.b:
    java.lang.String tag -> a
    float timeConstant -> b
    float startTime -> c
    float timestamp -> d
    float hz -> e
    int count -> f
    int filterWindow -> g
    boolean dataInit -> h
    java.util.ArrayList dataLists -> i
    void setTimeConstant(float) -> a
com.ict.gyroscopecalibrate.Point -> com.ict.b.c:
com.ict.userstate.StillStateJudger -> com.ict.c.a:
    double THRESHOLD_ANGLE_OF_INCLINATION -> e
    double THRESHOLD_ACCELERATION -> f
    android.hardware.SensorManager sensorManager -> a
    android.hardware.Sensor proximitySensor -> b
    android.hardware.Sensor accelerationSensor -> c
    boolean isProximate -> g
    boolean isLayingDown -> h
    boolean isUp -> i
    android.os.Vibrator vibrator -> j
    android.content.Context mContext -> k
    int count -> l
    int stillCount -> m
    long lasttimeStamp -> d
    void start() -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.ict.wq.AngleUtils -> com.ict.d.a:
    double calculateDifference(double,double) -> a
    double getTheta2(double,double,double,double) -> a
com.ict.wq.AtomLine -> com.ict.d.b:
    int length -> a
    double directionAVG -> b
    java.util.ArrayList consultList -> c
    int getLength() -> a
    void setLength(int) -> a
    double getDirection() -> b
    void setDirection(double) -> a
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    void setConsultList(java.util.ArrayList) -> a
    int compareTo(com.ict.wq.AtomLine) -> a
    int compareTo(java.lang.Object) -> compareTo
com.ict.wq.CalculateAngleWq -> com.ict.d.c:
    java.lang.String tag -> a
    double calculateAngle(java.util.ArrayList) -> a
    double calculateAvg(java.util.ArrayList) -> b
com.ict.wq.CalculateLocation2 -> com.ict.d.d:
    android.os.Handler mhandler -> ar
    double lastX -> as
    double lastY -> at
    double lastZ -> au
    double lastXInCorrect -> av
    double lastYInCorrect -> aw
    double lastZInCorrect -> ax
    double matchedPointX -> ay
    double matchedPointY -> az
    double matchedPointZ -> aA
    com.amap.api.maps.AMap aMap -> aB
    double startlatitude -> a
    double startlongitude -> b
    double fusionlatitude -> c
    double fusionlongitude -> d
    double fusionlatitudelast -> e
    double fusionlongitudelast -> f
    double lastEndY -> g
    double lastEndX -> h
    double xInEarthrealtimeMagnetismWithoutNormalization -> i
    double yInEarthrealtimeMagnetismWithoutNormalization -> j
    double xInEarthrealtimeMagnetism -> k
    double yInEarthrealtimeMagnetism -> l
    double xInEarthrealtimeGyroscope -> m
    double yInEarthrealtimeGyroscope -> n
    double xInEarthrealtimeFusion -> o
    double yInEarthrealtimeFusion -> p
    double XForDTW -> q
    double yForDTW -> r
    double XConsult -> s
    double YConsult -> t
    double xInEarthrealtimeMagnetismWithoutNormalizationlast -> u
    double yInEarthrealtimeMagnetismWithoutNormalizationlast -> v
    double xInEarthrealtimeMagnetismlast -> w
    double yInEarthrealtimeMagnetismlast -> x
    double xInEarthrealtimeGyroscopelast -> y
    double yInEarthrealtimeGyroscopelast -> z
    double xInEarthrealtimeFusionlast -> A
    double yInEarthrealtimeFusionlast -> B
    double xInEarthrealtimelastturnMagnetismWithoutNormalization -> C
    double yInEarthrealtimelastturnMagnetismWithoutNormalization -> D
    double xInEarthrealtimelastturnMagnetism -> E
    double yInEarthrealtimelastturnMagnetism -> F
    double xInEarthrealtimelastturnGyroscope -> G
    double yInEarthrealtimelastturnGyroscope -> H
    double xInEarthrealtimelastturnFusion -> I
    double yInEarthrealtimelastturnFusion -> J
    double xGyroscopeLast -> K
    double yGyroscopeLast -> L
    double xGyroscopecurr -> M
    double yGyroscopecurr -> N
    double xGyroscopeDTWcorrect -> O
    double yGyroscopeDTWcorrect -> P
    double lastxIngetTheta -> aC
    double lastyIngetTheta -> aD
    double lastxIngetTheta1 -> aE
    double lastyIngetTheta1 -> aF
    double lastthetaIngyroscope -> aG
    double thetaIngyroscope -> aH
    double gyroscopeOriginDirection -> aI
    double gyroscopeOriginDirectionLast -> aJ
    double xcenter -> Q
    double ycenter -> R
    double longitudefactor -> S
    double latitudefactor -> T
    java.util.ArrayList magaArrayList -> aK
    boolean isStair -> U
    java.util.ArrayList gyroscopeArraylist -> aL
    java.util.ArrayList gyroscopeArraylistOrigin -> aM
    java.util.ArrayList fusionArrayList -> V
    java.util.ArrayList MagnetismDirectionArrayList -> W
    double realtimeFusion -> X
    double FusionFactor -> Y
    java.lang.String tag -> aN
    double moldInEarth -> Z
    double realtimeGyroscopeavg -> aO
    double realtimeGyroscopeavgOrigin -> aP
    double fusionavg -> aQ
    double realtimeFilter -> aa
    com.ict.wq.Normalization normalization -> aR
    double GPSlatitude -> ab
    double GPSlongitude -> ac
    double GPSlatitudelast -> ad
    double GPSlongitudelast -> ae
    int SatelliteNumber -> af
    android.content.Context mContext -> aS
    com.amap.api.maps.model.Marker mMarker -> aT
    boolean foundMathTrajectory -> aU
    double initgyroscopeOffset -> aV
    double gyroscopeOffset -> aW
    double delta -> ag
    double realtimeMagnetismavglast -> aX
    double NormalizationFusionLast -> aY
    double currXlast -> ah
    double currYlast -> ai
    int LastGyroscopeListSize -> aj
    double lastGyroscopeAvg -> ak
    double lastfusionAvg -> al
    double lastfusionAvgNormalization -> am
    double fusionAvgNormalization -> an
    double magnetismDirectionAvg -> ao
    double lastMagnetismDirectionAvg -> ap
    boolean normalizeIsOpnen -> aq
    double deltaX -> aZ
    double deltaY -> ba
    double deltaXInConsult -> bb
    double deltaYInConsult -> bc
    double deltaXInCorrect -> bd
    double deltaYInCorrect -> be
    double redTurnX -> bf
    double redTurnY -> bg
    boolean redGetDelta -> bh
    double matchPointX -> bi
    double matchPointY -> bj
    double initDirection -> bk
    double correctDirection -> bl
    int turnedCount -> bm
    int stepCount -> bn
    int matchCount -> bo
    boolean gyroscopeInitialized -> bp
    boolean isFirst -> bq
    boolean normalizationinitial -> br
    boolean directionOffset -> bs
    double xInCorrect -> bt
    double yInCorrect -> bu
    int counter -> bv
    boolean ismatched -> bw
    double LastStepLength -> bx
    double getXForDTW() -> a
    void setXForDTW(double) -> a
    double getyForDTW() -> b
    void setyForDTW(double) -> b
    double getXConsult() -> c
    void setXConsult(double) -> c
    double getYConsult() -> d
    void setYConsult(double) -> d
    void setGyroscopeOffset(double) -> e
    void UpdateLocationAndMap0315(double,com.ict.wq.Sample,boolean) -> a
    double getTheta2(double,double) -> a
    double getInitTheta(double,double) -> b
com.ict.wq.Constant -> com.ict.d.e:
    int initFloorNo -> a
    boolean isinitFloorAndState -> b
    com.amap.api.maps.model.LatLng northwest -> c
    com.amap.api.maps.model.LatLng northeast -> d
    com.amap.api.maps.model.LatLng southwest -> e
    com.amap.api.maps.model.LatLng southeast -> f
    com.amap.api.maps.model.LatLng weststair -> g
    com.amap.api.maps.model.LatLng eaststair -> h
    int LengthThreshold -> i
    float dtwThreshold -> j
    float StartPointThreshold -> k
    double magneticDirectioninit -> l
    double magneticDirectionInPhone -> m
    boolean isturned -> n
    boolean isGPS -> o
    boolean isDebug -> p
com.ict.wq.Coordinate -> com.ict.d.f:
    double longitude -> a
    double lantitude -> b
    java.lang.String toString() -> toString
com.ict.wq.CorrectAndConsultDirection -> com.ict.d.g:
    double ABSdeltaCorrectAndConsult -> a
    double correctDirection -> b
    double consultDirection -> c
    double correctMinusConsult -> d
    double getABSdeltaCorrectAndConsult() -> a
    void setABSdeltaCorrectAndConsult(double) -> a
    void setCorrectDirection(double) -> b
    void setConsultDirection(double) -> c
    double getCorrectMinusConsult() -> b
    void setCorrectMinusConsult(double) -> d
    java.lang.String toString() -> toString
    int compareTo(com.ict.wq.CorrectAndConsultDirection) -> a
    int compareTo(java.lang.Object) -> compareTo
com.ict.wq.DataAdaptor -> com.ict.d.h:
    com.ict.gyroscopecalibrate.MeanFilterSmoothing meanFilterAcc -> h
    android.content.Context mContext -> i
    android.os.Handler mhandler -> j
    com.amap.api.maps.AMap aMap -> k
    double lastX -> l
    double lastY -> m
    double lastZ -> n
    com.ict.wq.CalculateLocation2 calculateLocation2 -> o
    double lastxIngetTheta -> p
    double lastyIngetTheta -> q
    double lastthetaIngyroscope -> r
    double thetaIngyroscope -> s
    com.ict.wq.CalculateAngleWq calculateAngleWq -> t
    java.util.ArrayList windowsList -> u
    int dropNum -> a
    boolean dropFlag -> b
    java.util.ArrayList magArr1 -> c
    java.util.ArrayList magArr2 -> d
    double currentDirectionRecord -> v
    double avgDirection -> w
    java.util.ArrayList subSampleList -> x
    java.util.ArrayList subSampleListreverse -> y
    java.util.ArrayList subSampleListTemp -> z
    java.util.ArrayList subSampleListreverseTemp -> A
    int subSampleListSize -> e
    int increasementSize -> f
    com.ict.wq.TrajectoryMatchThread trajectoryMatchThread -> B
    double calibratex -> C
    double calibratey -> D
    double calibratez -> E
    boolean isCalibrate -> F
    int count -> G
    int subSampleListSizecount -> H
    int lineSampleCount -> I
    boolean isremove -> J
    boolean matchPoint -> K
    boolean isInitHeight -> L
    double initHeight -> M
    java.util.ArrayList heightList -> N
    java.util.TimerTask task -> g
    void dataProcessing(com.ict.wq.Sample) -> a
    double getTheta2(double,double) -> a
    double calculateDifference(double,double) -> b
    com.ict.wq.Sample SampleCopy(com.ict.wq.Sample) -> b
    android.os.Handler access$0(com.ict.wq.DataAdaptor) -> a
com.ict.wq.DataAdaptor$1 -> com.ict.d.i:
    com.ict.wq.DataAdaptor this$0 -> a
    void run() -> run
com.ict.wq.Direction -> com.ict.d.j:
    double lastXInConsult -> a
    double lastYInConsult -> b
    double lastYInCorrect -> c
    double lastthetaInCorrect -> d
    double lastxInCorrect -> e
    double lastyInCorrect -> f
    double lastthetaInConsult -> g
    double lastxInConsult -> h
    double lastyInConsult -> i
    int count -> j
    double getMatchedDirection(java.util.ArrayList,java.util.ArrayList) -> a
    double calculateDifference(double,double) -> c
    double AminusB(double,double) -> d
    double getThetaInConsult(double,double) -> a
    double getThetaInCOrrect(double,double) -> b
com.ict.wq.LogUtil -> com.ict.d.k:
    java.lang.String LOG_DIR -> b
    java.lang.String LOG_NAME -> c
    java.lang.Thread$UncaughtExceptionHandler handler -> a
    void writeErrorLog(java.lang.Throwable) -> a
    java.lang.String getCurrentDateString() -> b
    void exit() -> a
com.ict.wq.LogUtil$1 -> com.ict.d.l:
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.ict.wq.MagCollectionProvider -> com.ict.d.m:
    android.content.Context mContext -> e
    android.os.Handler mhandler -> f
    android.hardware.SensorManager sensorManager -> g
    android.hardware.Sensor accelerometer -> h
    android.hardware.Sensor gravity -> i
    android.hardware.Sensor mag -> j
    android.hardware.Sensor gyroscope -> k
    android.hardware.Sensor orientationold -> l
    android.hardware.Sensor press -> m
    android.hardware.Sensor light -> n
    float[] accelerometerValues -> o
    float[] magneticFieldValues -> p
    float[] gyroscopeValues -> q
    float[] orientationOldValues -> r
    float[] orientationNewValues -> s
    float[] gravityValues -> t
    double currentHeight -> u
    double currentLight -> v
    double currentMagRecord -> w
    java.lang.String currentMagRecordvector -> x
    double currentDirectionRecord -> y
    double realTimeMagDirection -> z
    java.util.ArrayList windowsList -> A
    int sensordatacount -> B
    int dropNum -> a
    boolean dropFlag -> b
    java.util.ArrayList magArr1 -> c
    java.util.ArrayList magArr2 -> d
    double lastthetaIngyroscope -> C
    double thetaIngyroscope -> D
    float lastX -> E
    float lastY -> F
    double lastxIngetTheta -> G
    double lastyIngetTheta -> H
    double currDirection -> I
    float[] deltaRotationVector -> J
    float timestamp -> K
    android.hardware.SensorEventListener magListener -> L
    android.hardware.SensorEventListener accelerometerListener -> M
    android.hardware.SensorEventListener GyroscopeListener -> N
    android.hardware.SensorEventListener orientationoldListener -> O
    android.hardware.SensorEventListener gravityListener -> P
    android.hardware.SensorEventListener pressListener -> Q
    android.hardware.SensorEventListener lightListener -> R
    void start() -> a
    void init() -> b
    void stop() -> c
    float[] getAccelerometerValues() -> d
    float[] getOrientationOldValues() -> e
    float[] getGravityValues() -> f
    float[] getOrientationNewValues() -> g
    void calculateOrientation() -> r
    double getRealTimeMag() -> h
    double getRealTimeHeight() -> i
    double getRealTimeLight() -> j
    float[] getmagneticFieldValues() -> k
    void access$0(float[]) -> a
    float[] access$1() -> l
    void access$2(double) -> a
    void access$3(java.lang.String) -> a
    void access$4() -> m
    void access$5(float[]) -> b
    float access$6() -> n
    float[] access$7() -> o
    void access$8(float) -> a
    void access$9(float[]) -> c
    void access$10(float[]) -> d
    void access$11(double) -> b
    double access$12() -> p
    void access$13(double) -> c
    double access$14() -> q
com.ict.wq.MagCollectionProvider$1 -> com.ict.d.n:
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.ict.wq.MagCollectionProvider$2 -> com.ict.d.o:
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.ict.wq.MagCollectionProvider$3 -> com.ict.d.p:
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.ict.wq.MagCollectionProvider$4 -> com.ict.d.q:
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.ict.wq.MagCollectionProvider$5 -> com.ict.d.r:
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.ict.wq.MagCollectionProvider$6 -> com.ict.d.s:
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.ict.wq.MagCollectionProvider$7 -> com.ict.d.t:
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.ict.wq.MagneticSampleTimer -> com.ict.d.u:
    android.content.Context mContext -> h
    java.util.ArrayList magList -> a
    java.util.ArrayList directionList -> b
    java.util.Timer timer -> c
    android.os.Handler mhandler -> i
    com.amap.api.maps.AMap aMap -> j
    com.ict.wq.DataAdaptor dataAdaptor -> k
    com.ict.wq.MagCollectionProvider magCollectionProvider -> l
    int dropNum -> d
    boolean dropFlag -> e
    java.util.ArrayList magArr1 -> f
    java.util.ArrayList magArr2 -> g
    double[] orientationAccuracy -> m
    double orientationorigin -> n
    void start() -> a
    void stop() -> b
    void getOrientation() -> c
    void orientation(java.lang.Double,java.lang.Double,java.lang.Double) -> a
    double[] access$1(com.ict.wq.MagneticSampleTimer) -> a
    com.ict.wq.DataAdaptor access$2(com.ict.wq.MagneticSampleTimer) -> b
com.ict.wq.MagneticSampleTimer$1 -> com.ict.d.v:
    com.ict.wq.MagneticSampleTimer this$0 -> a
    void run() -> run
com.ict.wq.MagneticSampleTimerReview -> com.ict.d.w:
    android.content.Context mContext -> a
    android.os.Handler mhandler -> b
    com.amap.api.maps.AMap aMap -> c
    com.ict.wq.DataAdaptor dataAdaptor -> d
    void start() -> a
    com.ict.wq.DataAdaptor access$0(com.ict.wq.MagneticSampleTimerReview) -> a
com.ict.wq.MagneticSampleTimerReview$1 -> com.ict.d.x:
    java.lang.String sdcardpath -> a
    java.lang.String filepath -> b
    java.io.BufferedReader br -> c
    double lastx -> d
    double lasty -> e
    double lastz -> f
    boolean reFlat -> h
    com.ict.wq.MagneticSampleTimerReview this$0 -> g
    void run() -> run
com.ict.wq.Normalization -> com.ict.d.y:
    double normalizationFactor -> a
    double lastDirection -> b
com.ict.wq.ResuiltDisplay -> com.ict.d.z:
    void displayDtwResuilt2(java.util.ArrayList,java.util.ArrayList,com.ict.fastDTW.dtw.TimeWarpInfo) -> a
com.ict.wq.RotaingMagToFlat -> com.ict.d.aa:
    double[] deRotaingMagToFlat(double,double,double,double,double,double) -> a
com.ict.wq.Sample -> com.ict.d.ab:
    double currxOrigin -> a
    double curryOrigin -> b
    double currzOrigin -> c
    double currxConsult -> d
    double curryConsult -> e
    double currzConsult -> f
    double currxCorrect -> g
    double curryCorrect -> h
    double currzCorrect -> i
    double magXOrigin -> j
    double magYOrigin -> k
    double magZOrigin -> l
    double magneticValue -> m
    double magXFlat -> n
    double magYFlat -> o
    double magZFlat -> p
    double orientationNewX -> q
    double orientationNewY -> r
    double orientationNewZ -> s
    double orientationOldX -> t
    double orientationOldY -> u
    double orientationOldZ -> v
    double orientationAccuracyX -> w
    double orientationAccuracyY -> x
    double orientationAccuracyZ -> y
    double gravityX -> z
    double gravityY -> A
    double gravityZ -> B
    double accX -> C
    double accY -> D
    double accZ -> E
    double gyroX -> F
    double gyroY -> G
    double gyroZ -> H
    double height -> I
    double light -> J
    boolean isStair -> K
    boolean isGPS -> L
    double MagH -> M
    double MagV -> N
    double spectrumH -> O
    double spectrumV -> P
    double spectrumXFlat -> Q
    double spectrumYFlat -> R
    double spectrumZFlat -> S
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    double getCurrxOrigin() -> a
    void setCurrxOrigin(double) -> a
    double getCurryOrigin() -> b
    void setCurryOrigin(double) -> b
    double getCurrzOrigin() -> c
    void setCurrzOrigin(double) -> c
    double getMagXOrigin() -> d
    void setMagXOrigin(double) -> d
    double getMagYOrigin() -> e
    void setMagYOrigin(double) -> e
    double getMagZOrigin() -> f
    void setMagZOrigin(double) -> f
    double getMagneticValue() -> g
    void setMagneticValue(double) -> g
    double getMagXFlat() -> h
    void setMagXFlat(double) -> h
    double getMagYFlat() -> i
    void setMagYFlat(double) -> i
    double getMagZFlat() -> j
    void setMagZFlat(double) -> j
    double getOrientationNewX() -> k
    void setOrientationNewX(double) -> k
    double getOrientationNewY() -> l
    void setOrientationNewY(double) -> l
    double getOrientationNewZ() -> m
    void setOrientationNewZ(double) -> m
    double getOrientationOldX() -> n
    void setOrientationOldX(double) -> n
    double getOrientationOldY() -> o
    void setOrientationOldY(double) -> o
    double getOrientationOldZ() -> p
    void setOrientationOldZ(double) -> p
    double getOrientationAccuracyX() -> q
    void setOrientationAccuracyX(double) -> q
    double getOrientationAccuracyY() -> r
    void setOrientationAccuracyY(double) -> r
    double getOrientationAccuracyZ() -> s
    void setOrientationAccuracyZ(double) -> s
    double getGravityX() -> t
    void setGravityX(double) -> t
    double getGravityY() -> u
    void setGravityY(double) -> u
    double getGravityZ() -> v
    void setGravityZ(double) -> v
    double getAccX() -> w
    void setAccX(double) -> w
    double getAccY() -> x
    void setAccY(double) -> x
    double getAccZ() -> y
    void setAccZ(double) -> y
    double getGyroX() -> z
    void setGyroX(double) -> z
    double getGyroY() -> A
    void setGyroY(double) -> A
    double getGyroZ() -> B
    void setGyroZ(double) -> B
    boolean isStair() -> C
    void setStair(boolean) -> a
    boolean isGPS() -> D
    void setGPS(boolean) -> b
    double getMagH() -> E
    void setMagH(double) -> C
    double getMagV() -> F
    void setMagV(double) -> D
    double getSpectrumH() -> G
    void setSpectrumH(double) -> E
    double getSpectrumV() -> H
    void setSpectrumV(double) -> F
    double getCurrxCorrect() -> I
    void setCurrxCorrect(double) -> G
    double getCurryCorrect() -> J
    void setCurryCorrect(double) -> H
    double getCurrzCorrect() -> K
    void setCurrzCorrect(double) -> I
    double getCurrxConsult() -> L
    void setCurrxConsult(double) -> J
    double getCurryConsult() -> M
    void setCurryConsult(double) -> K
    double getCurrzConsult() -> N
    java.lang.String toString() -> toString
    double getHeight() -> O
    void setHeight(double) -> L
    double getLight() -> P
    void setLight(double) -> M
    double getSpectrumXFlat() -> Q
    void setSpectrumXFlat(double) -> N
    double getSpectrumYFlat() -> R
    void setSpectrumYFlat(double) -> O
    double getSpectrumZFlat() -> S
    void setSpectrumZFlat(double) -> P
com.ict.wq.SensorDataLogFileDTWresuilt -> com.ict.d.ac:
    java.io.File debugFile -> a
    java.io.FileOutputStream fileStream -> b
    void trace(java.lang.String) -> a
com.ict.wq.SensorDataLogFileMagneticSamplerTimer -> com.ict.d.ad:
    java.io.File debugFile -> a
    java.io.FileOutputStream fileStream -> b
    void trace(java.lang.String) -> a
com.ict.wq.SensorDataLogFileReview -> com.ict.d.ae:
    java.io.File debugFile -> a
    java.io.FileOutputStream fileStream -> b
    void trace(java.lang.String) -> a
com.ict.wq.SimilarityFactor -> com.ict.d.af:
    double DTWDistance -> a
    double matchedLength -> b
    double currentAccumulatedDistance -> c
    double matchedAccumulatedDistance -> d
    double deltaLength -> e
    double deltaLengthInRatio -> f
    double currentDirection -> g
    double matchedDirection -> h
    double deltaDirection -> i
    double originDistanceOfStartPoint -> j
    double correctDistanceOfStartPoint -> k
    boolean isReverse -> l
    int countOfsameSample -> m
    long DTWtime -> n
    java.lang.String toString() -> toString
    double getDTWDistance() -> a
    double getDeltaLengthInRatio() -> b
    void setOriginDistanceOfStartPoint(double) -> a
    double getCorrectDistanceOfStartPoint() -> c
    void setCorrectDistanceOfStartPoint(double) -> b
    int getCountOfsameSample() -> d
    long getDTWtime() -> e
com.ict.wq.Stair -> com.ict.d.ag:
    double stairID -> a
    double stairX -> b
    double stairY -> c
    double getStairX() -> a
    void setStairX(double) -> a
    double getStairY() -> b
    void setStairY(double) -> b
    java.lang.String toString() -> toString
com.ict.wq.StairCorrect2 -> com.ict.d.ah:
    java.util.ArrayList StairList -> a
    double StairDistanceThreshold -> b
    double[] correct(double,double) -> a
    double getDistance(double,double,double,double) -> a
    java.util.Map$Entry[] getSortedHashtableByKey(java.util.Hashtable) -> a
com.ict.wq.StairCorrect2$1 -> com.ict.d.ai:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.ict.wq.TrajectoryMatchThread -> com.ict.d.aj:
    android.content.Context mContext -> i
    android.os.Handler mhandler -> j
    double Maglengthoffset -> k
    double Euclideanlengthoffset -> l
    double directionoffset -> m
    double distanceThresholdRatioToSize -> n
    double distanceOfStartThreshold -> o
    java.util.ArrayList coarseSampleList -> p
    java.util.ArrayList coarseSampleListReverse -> q
    java.util.ArrayList fineSampleList -> r
    java.util.ArrayList subSampleListDB -> s
    double[] EndPoint -> t
    boolean hasMatched -> u
    boolean refresh -> a
    boolean isReverse -> v
    boolean addAll -> w
    boolean issuitable -> x
    double deltaTheta -> y
    double deltaLengthRatioToSize -> z
    double miniTotalLength -> A
    double lastTrajectoryCoarseEndXOrigin -> B
    double lastTrajectoryCoarseEndYOrigin -> C
    double lastTrajectoryCoarseEndXCorrect -> D
    double lastTrajectoryCoarseEndYCorrect -> E
    double lastTrajectoryFineEndX -> b
    double lastTrajectoryFineEndY -> c
    java.util.ArrayList resultArrayList -> F
    double lastx -> d
    double lasty -> e
    java.util.ArrayList subSampleList -> G
    java.util.ArrayList subSampleListReverse -> H
    long dTWtime -> I
    boolean doOffSet -> f
    double offSet -> J
    boolean isIncrement -> g
    boolean isFirstSegment -> h
    boolean isDTWWithWeight -> K
    int SpectrumSize -> L
    int matchPointCount -> M
    double[] getEndPoint() -> a
    void setEndPoint(double[]) -> a
    boolean isHasMatched() -> b
    void setHasMatched(boolean) -> a
    java.util.ArrayList getSubSampleList() -> c
    double getOffSet() -> d
    void setOffSet(double) -> a
    void run() -> run
    java.util.ArrayList coarsnessDTW(java.util.ArrayList,java.util.ArrayList) -> a
    java.util.ArrayList getCoarsnessDTWData(java.util.ArrayList,java.util.ArrayList) -> b
    double getSpectrum(java.util.ArrayList) -> a
    com.ict.wq.SimilarityFactor getSimilarityFactor(com.ict.fastDTW.dtw.TimeWarpInfo,java.util.ArrayList,java.util.ArrayList) -> a
    java.util.ArrayList gettsArray(java.util.ArrayList) -> b
    java.util.ArrayList gettimeReadings(java.util.ArrayList) -> c
    java.util.ArrayList getlabels() -> e
    int countOfsameSample(java.util.ArrayList,java.util.ArrayList,com.ict.fastDTW.dtw.TimeWarpInfo) -> a
com.iflytek.speech.InitListener -> com.iflytek.speech.a:
com.iflytek.speech.RecognizerResult -> com.iflytek.speech.RecognizerResult:
    java.lang.String json -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.RecognizerResult$1 -> com.iflytek.speech.b:
    com.iflytek.speech.RecognizerResult createFromParcel(android.os.Parcel) -> a
    com.iflytek.speech.RecognizerResult[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.SynthesizerListener -> com.iflytek.speech.c:
com.iflytek.speech.UnderstanderResult -> com.iflytek.speech.UnderstanderResult:
    java.lang.String mXml -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.UnderstanderResult$1 -> com.iflytek.speech.d:
    com.iflytek.speech.UnderstanderResult createFromParcel(android.os.Parcel) -> a
    com.iflytek.speech.UnderstanderResult[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.wzg.dingwei.Adjust -> com.wzg.dingwei.a:
    float adjustThresh -> a
    float lineThresh -> b
    float lineThresh2 -> c
    float pToLineThresh -> d
    float lineCountThresh -> e
    float adjustLen -> f
    float adjustedLen -> g
    float adjustIntervalRad -> h
    float lastAdjustRad -> i
    float stepThresh -> j
    com.wzg.dingwei.Adjust$Vec4 lastRealPos -> v
    com.wzg.dingwei.FindLine findLine -> w
    com.wzg.dingwei.FindRot findRot -> x
    int lineRangeFrom -> y
    int lineRangeTo -> z
    java.util.ArrayList lineInfs -> k
    java.util.ArrayList adjustInfs -> l
    com.wzg.dingwei.Adjust$Matrix4 adjustMat -> m
    com.wzg.dingwei.Adjust$AdjustInfClient adjustInfClient -> n
    boolean enabled -> o
    float preHeight -> p
    float curRawHeight -> q
    com.wzg.dingwei.Adjust$Vec4 curP -> r
    int curveIndex -> s
    float curveLength -> t
    com.wzg.dingwei.Adjust$Vec4 thisPos -> u
    float PointFtoLength(android.graphics.PointF,android.graphics.PointF) -> a
    void adjustHeight(float[]) -> a
    float adjustAddPos(float[]) -> b
    float AdjustDriftByLine(com.wzg.dingwei.Adjust$Vec4) -> a
com.wzg.dingwei.Adjust$AdjustInfClient -> com.wzg.dingwei.b:
com.wzg.dingwei.Adjust$LineInf -> com.wzg.dingwei.c:
    int from -> a
    int to -> b
    float rad -> c
com.wzg.dingwei.Adjust$Matrix4 -> com.wzg.dingwei.d:
    float m00 -> a
    float m01 -> b
    float m02 -> c
    float m03 -> d
    float m10 -> e
    float m11 -> f
    float m12 -> g
    float m13 -> h
    float m20 -> i
    float m21 -> j
    float m22 -> k
    float m23 -> l
    float m30 -> m
    float m31 -> n
    float m32 -> o
    float m33 -> p
    com.wzg.dingwei.Adjust$Vec3 vec3 -> q
    com.wzg.dingwei.Adjust$Vec3 rkAxis -> r
    com.wzg.dingwei.Adjust$Matrix4 tempM -> s
    void make_trans(float,float,float) -> a
    void mat4_concatenate_vec(com.wzg.dingwei.Adjust$Vec3,com.wzg.dingwei.Adjust$Vec3) -> a
    void mat4_concatenate_vec_copy(com.wzg.dingwei.Adjust$Vec3) -> a
com.wzg.dingwei.Adjust$Vec3 -> com.wzg.dingwei.e:
    float x -> a
    float y -> b
    float z -> c
    void copy(com.wzg.dingwei.Adjust$Vec3) -> a
com.wzg.dingwei.Adjust$Vec4 -> com.wzg.dingwei.f:
    float w -> a
    float x -> b
    float y -> c
    float z -> d
    void copy(com.wzg.dingwei.Adjust$Vec4) -> a
    float getLengthZ(com.wzg.dingwei.Adjust$Vec4) -> b
com.wzg.dingwei.Adjust3 -> com.wzg.dingwei.g:
    double[] pos0 -> a
    double[] pos1 -> b
    double[] pos2 -> c
    double[] curPos -> d
    int size -> e
    double total -> f
    double step -> g
    double levelStep -> h
    double heightStep -> i
    double coe -> j
    double downCoe -> k
    boolean needRaw -> l
    int lastAdjustIndex -> m
    double totallen -> n
    double totalRad -> o
    void adjustAddPos(float[]) -> a
    void reAdjustAddPos4(float) -> a
com.wzg.dingwei.BluetoothDataUtil -> com.wzg.dingwei.h:
    java.lang.String strRoll -> a
    java.lang.String strPitch -> b
    java.lang.String strAzimuth -> c
    java.text.DecimalFormat df -> d
    java.lang.String toHex(byte[],int) -> a
    byte[] hex2byte(java.lang.String) -> a
    byte charToByte(char) -> a
com.wzg.dingwei.BluetoothService -> com.wzg.dingwei.i:
    java.util.UUID MY_UUID_SECURE -> c
    java.util.UUID MY_UUID_INSECURE -> d
    android.bluetooth.BluetoothAdapter mAdapter -> e
    android.os.Handler mHandler -> f
    com.wzg.dingwei.BluetoothService$AcceptThread mSecureAcceptThread -> g
    com.wzg.dingwei.BluetoothService$AcceptThread mInsecureAcceptThread -> h
    com.wzg.dingwei.BluetoothService$ConnectThread mConnectThread -> i
    com.wzg.dingwei.BluetoothService$ConnectedReadThread mConnectedReadThread -> j
    com.wzg.dingwei.BluetoothService$ConnectedWriteThread mConnectedWriteThread -> k
    int mState -> l
    android.content.Context ctx -> m
    java.lang.Long lastTime -> a
    java.lang.String bluetoothData -> n
    java.lang.String mDeviceAddress -> o
    java.util.ArrayList OneTimeArrayList -> p
    java.util.ArrayList segmentaArrayList -> q
    double lastx -> r
    double lasty -> s
    double lastz -> t
    java.lang.String filepath -> b
    void setState(int) -> a
    int getState() -> a
    void connect(android.bluetooth.BluetoothDevice,boolean) -> a
    void connected(android.bluetooth.BluetoothSocket,android.bluetooth.BluetoothDevice,java.lang.String) -> a
    void stop() -> b
    void connectionLost() -> f
    android.bluetooth.BluetoothAdapter access$0(com.wzg.dingwei.BluetoothService) -> a
    java.util.UUID access$1() -> c
    java.util.UUID access$2() -> d
    int access$3() -> e
    android.os.Handler access$4(com.wzg.dingwei.BluetoothService) -> b
    void access$5(com.wzg.dingwei.BluetoothService,com.wzg.dingwei.BluetoothService$ConnectThread) -> a
    void access$6(com.wzg.dingwei.BluetoothService) -> c
    java.lang.String access$7(com.wzg.dingwei.BluetoothService) -> d
    void access$8(com.wzg.dingwei.BluetoothService,java.lang.String) -> a
    android.content.Context access$9(com.wzg.dingwei.BluetoothService) -> e
    double access$10(com.wzg.dingwei.BluetoothService) -> f
    double access$11(com.wzg.dingwei.BluetoothService) -> g
    double access$12(com.wzg.dingwei.BluetoothService) -> h
    void access$13(com.wzg.dingwei.BluetoothService,double) -> a
    void access$14(com.wzg.dingwei.BluetoothService,double) -> b
    void access$15(com.wzg.dingwei.BluetoothService,double) -> c
com.wzg.dingwei.BluetoothService$AcceptThread -> com.wzg.dingwei.j:
    android.bluetooth.BluetoothServerSocket mmServerSocket -> b
    java.lang.String mSocketType -> c
    com.wzg.dingwei.BluetoothService this$0 -> a
    void run() -> run
    void cancel() -> a
com.wzg.dingwei.BluetoothService$ConnectThread -> com.wzg.dingwei.k:
    android.bluetooth.BluetoothSocket mmSocket -> b
    android.bluetooth.BluetoothDevice mmDevice -> c
    java.lang.String mSocketType -> d
    int failureCount -> e
    com.wzg.dingwei.BluetoothService this$0 -> a
    void run() -> run
    void cancel() -> a
com.wzg.dingwei.BluetoothService$ConnectedReadThread -> com.wzg.dingwei.l:
    android.bluetooth.BluetoothSocket mmSocket -> d
    java.io.InputStream mmInStream -> e
    float x -> a
    float y -> b
    com.wzg.dingwei.BluetoothService this$0 -> c
    void run() -> run
    void cancel() -> a
    byte[] createAck(int,int) -> a
    boolean isValidate(java.lang.String) -> a
com.wzg.dingwei.BluetoothService$ConnectedWriteThread -> com.wzg.dingwei.m:
    android.bluetooth.BluetoothSocket mmSocket -> b
    java.io.OutputStream mmOutStream -> c
    com.wzg.dingwei.BluetoothService this$0 -> a
    void run() -> run
    byte[] hexStringToBytes(java.lang.String) -> a
    byte charToByte(char) -> a
    void cancel() -> a
com.wzg.dingwei.BluetoothService232 -> com.wzg.dingwei.n:
    java.util.UUID MY_UUID_SECURE -> a
    java.util.UUID MY_UUID_INSECURE -> b
    android.bluetooth.BluetoothAdapter mAdapter -> c
    android.os.Handler mHandler -> d
    com.wzg.dingwei.BluetoothService232$AcceptThread mSecureAcceptThread -> e
    com.wzg.dingwei.BluetoothService232$AcceptThread mInsecureAcceptThread -> f
    com.wzg.dingwei.BluetoothService232$ConnectThread mConnectThread -> g
    com.wzg.dingwei.BluetoothService232$ConnectedReadThread mConnectedReadThread -> h
    com.wzg.dingwei.BluetoothService232$ConnectedWriteThread mConnectedWriteThread -> i
    int mState -> j
    android.content.Context ctx -> k
    java.io.OutputStream mmOutStream -> l
    java.lang.String mDeviceAddress -> m
    void setState(int) -> a
    int getState() -> a
    void connect(android.bluetooth.BluetoothDevice,boolean) -> a
    void connected(android.bluetooth.BluetoothSocket,android.bluetooth.BluetoothDevice,java.lang.String) -> a
    void stop() -> b
    boolean send(byte[],int,int) -> a
    boolean isOpen() -> c
    boolean isOpen2() -> d
    android.bluetooth.BluetoothAdapter access$0(com.wzg.dingwei.BluetoothService232) -> a
    java.util.UUID access$1() -> e
    java.util.UUID access$2() -> f
    int access$3() -> g
    android.os.Handler access$4(com.wzg.dingwei.BluetoothService232) -> b
    void access$5(com.wzg.dingwei.BluetoothService232,com.wzg.dingwei.BluetoothService232$ConnectThread) -> a
    void access$6(com.wzg.dingwei.BluetoothService232,java.io.OutputStream) -> a
com.wzg.dingwei.BluetoothService232$AcceptThread -> com.wzg.dingwei.o:
    android.bluetooth.BluetoothServerSocket mmServerSocket -> b
    java.lang.String mSocketType -> c
    com.wzg.dingwei.BluetoothService232 this$0 -> a
    void run() -> run
    void cancel() -> a
com.wzg.dingwei.BluetoothService232$ConnectThread -> com.wzg.dingwei.p:
    android.bluetooth.BluetoothSocket mmSocket -> b
    android.bluetooth.BluetoothDevice mmDevice -> c
    java.lang.String mSocketType -> d
    int failureCount -> e
    com.wzg.dingwei.BluetoothService232 this$0 -> a
    void run() -> run
    void cancel() -> a
com.wzg.dingwei.BluetoothService232$ConnectedReadThread -> com.wzg.dingwei.q:
    android.bluetooth.BluetoothSocket mmSocket -> b
    java.io.InputStream mmInStream -> c
    com.wzg.dingwei.BluetoothService232 this$0 -> a
    void run() -> run
    void cancel() -> a
com.wzg.dingwei.BluetoothService232$ConnectedWriteThread -> com.wzg.dingwei.r:
    android.bluetooth.BluetoothSocket mmSocket -> b
    com.wzg.dingwei.BluetoothService232 this$0 -> a
    void run() -> run
    void cancel() -> a
com.wzg.dingwei.ByteBuffer -> com.wzg.dingwei.s:
    byte[] totalBuf -> a
    int totalDataLen -> b
    java.io.File dataFile -> c
    boolean isText -> d
    java.io.FileOutputStream file -> e
    java.io.OutputStreamWriter osw -> f
    void writeData(byte[],int,int) -> a
    void offsetData(int) -> a
com.wzg.dingwei.DataCenter -> com.wzg.dingwei.t:
    java.util.ArrayList points -> a
    java.util.ArrayList parsePoints -> b
    java.util.ArrayList rawPoints -> c
    java.util.ArrayList rawPoints2 -> d
    java.util.Vector pointsIndex -> e
    java.util.Vector heightIndex -> f
    java.util.ArrayList manPos -> g
    boolean adjustFlag -> h
    boolean usbOpen -> i
    float centerX -> j
    float centerY -> k
    float lastX -> l
    float lastY -> m
    java.lang.String deviceid -> n
    java.lang.String targetid -> o
    int receiveCount -> p
    java.lang.String commandToBT -> q
    byte[] ack -> r
    double[] x_sw -> s
    float[] pos -> t
    float[] lastPos -> u
    float[] quat -> v
    boolean setOutFlag -> w
    float[] Magnetic -> x
    float[] Gyroscope -> y
    float[] Orientation -> z
    float[] Accelerometer -> A
    float Angle -> B
    float HeightFromOSM -> C
    float Temprature -> D
    float firstPressure -> E
    float lastPressure -> F
    float[] Pressure -> G
    int PressureIndex -> H
    int PressureCount -> I
    float PressureHeight -> J
    int bat0 -> K
    int bat1 -> L
    float[] campassM -> M
    float[] campass -> N
    float gpsRot -> O
    byte[] packet -> ax
    byte[] dataPacket -> P
    float initLng -> Q
    float initLat -> R
    boolean sendMagFlag -> S
    com.wzg.dingwei.ByteBuffer blueBuf -> T
    com.wzg.dingwei.ByteBuffer sendBuf -> U
    int sendBufOffset -> V
    float totalDistance -> W
    float radiusDistance -> X
    com.wzg.dingwei.Adjust$Vec3 stasticOldPos -> Y
    com.wzg.dingwei.Adjust$Vec3 stasticStartPos -> Z
    boolean pathRotChanged -> aa
    com.wzg.dingwei.Adjust adjust -> ab
    com.wzg.dingwei.Adjust3 adjust3 -> ac
    float adjustRad -> ad
    int adjustIndex -> ae
    android.net.NetworkInfo$State netState -> af
    int dataStrength -> ag
    boolean debugFlag -> ah
    long lastSendTime -> ai
    float manuDeltaRad -> aj
    float correctX -> ak
    float correcty -> al
    float correctz -> am
    float originX -> an
    float originy -> ao
    float originz -> ap
    int sendCount -> aq
    int batteryPercent -> ar
    com.wzg.dingwei.Speek mSpeek -> as
    boolean goOutClick -> at
    boolean findClick -> au
    boolean goBackClick -> av
    float lastTotalDistance -> aw
    void setPressure(float) -> a
    float getPressure() -> a
    byte[] getDataPacket() -> b
    java.lang.String printHexString(byte[],int,int) -> a
    java.lang.String printHexString(byte[],int,int,boolean) -> a
com.wzg.dingwei.DebugThread -> com.wzg.dingwei.u:
    com.amap.location.demo.FireManActivity targetFrag -> a
    android.os.Handler handler -> b
    com.wzg.dingwei.ByteBuffer blueData -> c
    com.wzg.dingwei.ByteBuffer locaData -> d
    byte[] sendSocketData -> e
    byte[] revSocketData -> f
    int sendSocketLen -> g
    int revSocketLen -> h
    int offsetBlue -> i
    int sendOffsetSocket -> j
    int revOffsetSocket -> k
    int packetLenBlue -> l
    byte[] packetBlueData -> m
    byte[] packetSendData -> n
    double gpsOffsetLen -> o
    long tickCount -> p
    boolean debugFlag -> q
    int omittedDataLen -> u
    int packet_number_old -> r
    float lastStepX -> s
    float lastStepY -> t
    void run() -> run
    void parsePacketTSENS(byte[]) -> a
com.wzg.dingwei.FindLine -> com.wzg.dingwei.v:
    float maxDist -> a
    float sumxy -> b
    float sumxx -> c
    float sumyy -> d
    float sumx -> e
    float sumy -> f
    float a -> g
    float b -> h
    float rad -> i
    float curvDist -> j
    int dir -> k
    boolean lineFlag -> l
    java.util.ArrayList points -> m
    int posCount -> n
    int nagCount -> o
    boolean changed -> p
    void addPoint(float,float) -> a
    void reset() -> a
    boolean calc() -> b
    boolean isLine() -> c
com.wzg.dingwei.FindRot -> com.wzg.dingwei.w:
    float preRad -> a
    float totalRad -> b
    int size -> c
    boolean isOverFlag -> d
com.wzg.dingwei.LogFile -> com.wzg.dingwei.x:
    java.io.File debugFile -> a
    java.io.FileOutputStream fileStream -> b
    void trace(java.lang.String) -> a
    void trace(java.lang.Exception) -> a
com.wzg.dingwei.ManPos -> com.wzg.dingwei.y:
    java.lang.String id -> a
    float rad -> b
    float x -> c
    float y -> d
    float z -> e
    float oldx -> f
    float oldy -> g
    float oldz -> h
    float distance -> i
com.wzg.dingwei.MapView -> com.wzg.dingwei.MapView:
    android.content.Context ctx -> f
    android.graphics.Bitmap manBmp -> g
    android.graphics.Bitmap manGrayBmp -> h
    android.view.View hostView -> i
    com.amap.api.maps.AMap aMap -> a
    com.amap.api.maps.MapView mapView -> b
    boolean isInit -> j
    float radius -> k
    android.graphics.Paint run_paint -> l
    android.graphics.Paint grid_paint -> m
    android.graphics.Paint dash_paint -> n
    android.graphics.Paint hchart_paint -> o
    android.graphics.Paint hchartbg_paint -> p
    int viewWidth -> q
    int viewHeight -> r
    int lastTouchX -> s
    int lastTouchY -> t
    float lastOffsetX -> u
    float lastOffsetY -> v
    android.graphics.PointF graphpos -> w
    float baseScale -> x
    int zoom -> y
    float pixelmeter -> c
    float curscale -> d
    android.os.Handler handler -> z
    float heightMax -> e
    int style -> A
    float scale -> B
    float scalePerPixel -> C
    float scaleLevel -> D
    android.graphics.PointF centerPoint -> E
    double pathSin -> F
    double pathCos -> G
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setMyLocationType(int) -> setMyLocationType
    void setScalePerPixel(float) -> setScalePerPixel
    void setScaleBy(int) -> setScaleBy
    void setOrgPoint(android.graphics.PointF) -> setOrgPoint
    void onDraw(android.graphics.Canvas) -> onDraw
    void zoomBy(int) -> a
    void transformPoint(float[],float,float,int) -> a
    int access$0(com.wzg.dingwei.MapView) -> a
    int access$1(com.wzg.dingwei.MapView) -> b
com.wzg.dingwei.MapView$1 -> com.wzg.dingwei.z:
    com.wzg.dingwei.MapView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.wzg.dingwei.Speek -> com.wzg.dingwei.aa:
    boolean initOK -> b
    com.iflytek.speech.InitListener mTtsInitListener -> a
    com.iflytek.speech.SynthesizerListener mTtsListener -> c
com.wzg.dingwei.Speek$1 -> com.wzg.dingwei.ab:
    com.wzg.dingwei.Speek this$0 -> a
com.wzg.dingwei.Utility -> com.wzg.dingwei.ac:
    void writeFloat(byte[],int,float,boolean) -> a
    void writeByte(byte[],int,byte) -> a
    void writeShort(byte[],int,int,boolean) -> a
    void writeInt(byte[],int,int,boolean) -> b
    void writeCheckSum(byte[],int) -> a
    double getDeltaRad(double,double) -> a
    float getDeltaRad(float,float) -> a
    double getDeltaDir(double,double) -> b
    float toRad(float) -> a
com.wzg.dingwei.util.Utils -> com.wzg.dingwei.a.a:
    java.util.Random random -> a
    void saveSharedPreferences(android.content.Context,java.lang.String,java.lang.String) -> a
net.majorkernelpanic.spydroid.SpydroidApplication -> net.majorkernelpanic.spydroid.SpydroidApplication:
    boolean DONATE_VERSION -> a
    boolean notificationEnabled -> b
    boolean applicationForeground -> c
    java.lang.Exception lastCaughtException -> d
    int batteryLevel -> e
    net.majorkernelpanic.spydroid.SpydroidApplication sApplication -> f
    android.content.BroadcastReceiver mBatteryInfoReceiver -> g
    void onCreate() -> onCreate
net.majorkernelpanic.spydroid.SpydroidApplication$1 -> net.majorkernelpanic.spydroid.a:
    net.majorkernelpanic.spydroid.SpydroidApplication this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.majorkernelpanic.spydroid.ui.HandsetFragment -> net.majorkernelpanic.spydroid.ui.HandsetFragment:
    android.widget.TextView mDescription1 -> a
    android.widget.TextView mDescription2 -> b
    android.widget.TextView mLine1 -> c
    android.widget.TextView mLine2 -> d
    android.widget.TextView mVersion -> e
    android.widget.TextView mSignWifi -> f
    android.widget.TextView mTextBitrate -> g
    android.widget.LinearLayout mSignInformation -> h
    android.widget.LinearLayout mSignStreaming -> i
    android.view.animation.Animation mPulseAnimation -> j
    net.majorkernelpanic.spydroid.SpydroidApplication mApplication -> k
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
